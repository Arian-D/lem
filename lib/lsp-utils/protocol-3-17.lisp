;;; Code generated by LEM-LSP-UTILS/PROTOCOL-GENERATOR based on 'specification/language-server-protocol/_specifications/lsp/3.17/'; DO NOT EDIT.

(DEFPACKAGE :LEM-LSP-UTILS/PROTOCOL-3-17
  (:IMPORT-FROM :LEM-LSP-UTILS/JSON)
  (:IMPORT-FROM :LEM-LSP-UTILS/TYPE)
  (:EXPORT :TEXT-DOCUMENT-SYNC-OPTIONS-SAVE
           :TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE-WAIT-UNTIL
           :TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DID-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE-WAIT-UNTIL
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES
           :TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE
           :TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE
           :TEXT-DOCUMENT-SYNC-OPTIONS
           :TEXT-DOCUMENT-SYNC-KIND.INCREMENTAL
           :TEXT-DOCUMENT-SYNC-KIND.FULL
           :TEXT-DOCUMENT-SYNC-KIND.NONE
           :HOVER-RESULT-VALUE
           :HOVER-RESULT
           :HOVER-PARAMS-POSITION
           :HOVER-PARAMS-TEXT-DOCUMENT
           :PROGRESS-PARAMS-VALUE
           :PROGRESS-PARAMS-TOKEN
           :PROGRESS-PARAMS
           :CANCEL-PARAMS-ID
           :CANCEL-PARAMS
           :NOTIFICATION-MESSAGE-PARAMS
           :NOTIFICATION-MESSAGE-METHOD
           :NOTIFICATION-MESSAGE
           :RESPONSE-ERROR-DATA
           :RESPONSE-ERROR-MESSAGE
           :RESPONSE-ERROR-CODE
           :RESPONSE-ERROR
           :RESPONSE-MESSAGE-ERROR
           :RESPONSE-MESSAGE-RESULT
           :RESPONSE-MESSAGE-ID
           :RESPONSE-MESSAGE
           :REQUEST-MESSAGE-PARAMS
           :REQUEST-MESSAGE-METHOD
           :REQUEST-MESSAGE-ID
           :REQUEST-MESSAGE
           :MESSAGE-JSONRPC
           :MESSAGE
           :WORKSPACE-FOLDER-NAME
           :WORKSPACE-FOLDER-URI
           :WORKSPACE-FOLDER
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES-CHANGE-NOTIFICATIONS
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES-SUPPORTED
           :WORKSPACE-FOLDERS-SERVER-CAPABILITIES
           :FILE-RENAME-NEW-URI
           :FILE-RENAME-OLD-URI
           :FILE-RENAME
           :RENAME-FILES-PARAMS-FILES
           :RENAME-FILES-PARAMS
           :FILE-DELETE-URI
           :FILE-DELETE
           :DELETE-FILES-PARAMS-FILES
           :DELETE-FILES-PARAMS
           :FILE-CREATE-URI
           :FILE-CREATE
           :CREATE-FILES-PARAMS-FILES
           :CREATE-FILES-PARAMS
           :FILE-OPERATION-FILTER-PATTERN
           :FILE-OPERATION-FILTER-SCHEME
           :FILE-OPERATION-FILTER
           :FILE-OPERATION-PATTERN-MATCHES
           :FILE-OPERATION-PATTERN-GLOB
           :FILE-OPERATION-PATTERN
           :FILE-OPERATION-PATTERN-OPTIONS-IGNORE-CASE
           :FILE-OPERATION-PATTERN-OPTIONS
           :FILE-OPERATION-PATTERN-KIND.FOLDER
           :FILE-OPERATION-PATTERN-KIND.FILE
           :FILE-OPERATION-REGISTRATION-OPTIONS-FILTERS
           :FILE-OPERATION-REGISTRATION-OPTIONS
           :WORKSPACE-SYMBOL-DATA
           :WORKSPACE-SYMBOL-LOCATION
           :WORKSPACE-SYMBOL-CONTAINER-NAME
           :WORKSPACE-SYMBOL-TAGS
           :WORKSPACE-SYMBOL-KIND
           :WORKSPACE-SYMBOL-NAME
           :WORKSPACE-SYMBOL
           :WORKSPACE-SYMBOL-PARAMS-QUERY
           :WORKSPACE-SYMBOL-PARAMS
           :WORKSPACE-SYMBOL-REGISTRATION-OPTIONS
           :WORKSPACE-SYMBOL-OPTIONS-RESOLVE-PROVIDER
           :WORKSPACE-SYMBOL-OPTIONS
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-RESOLVE-SUPPORT
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-TAG-SUPPORT
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :WORKSPACE-SYMBOL-CLIENT-CAPABILITIES
           :EXECUTE-COMMAND-PARAMS-ARGUMENTS
           :EXECUTE-COMMAND-PARAMS-COMMAND
           :EXECUTE-COMMAND-PARAMS
           :EXECUTE-COMMAND-REGISTRATION-OPTIONS
           :EXECUTE-COMMAND-OPTIONS-COMMANDS
           :EXECUTE-COMMAND-OPTIONS
           :EXECUTE-COMMAND-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :EXECUTE-COMMAND-CLIENT-CAPABILITIES
           :WORKSPACE-FOLDERS-CHANGE-EVENT-REMOVED
           :WORKSPACE-FOLDERS-CHANGE-EVENT-ADDED
           :WORKSPACE-FOLDERS-CHANGE-EVENT
           :DID-CHANGE-WORKSPACE-FOLDERS-PARAMS-EVENT
           :DID-CHANGE-WORKSPACE-FOLDERS-PARAMS
           :FILE-CHANGE-TYPE.DELETED
           :FILE-CHANGE-TYPE.CHANGED
           :FILE-CHANGE-TYPE.CREATED
           :FILE-EVENT-TYPE
           :FILE-EVENT-URI
           :FILE-EVENT
           :DID-CHANGE-WATCHED-FILES-PARAMS-CHANGES
           :DID-CHANGE-WATCHED-FILES-PARAMS
           :WATCH-KIND.DELETE
           :WATCH-KIND.CHANGE
           :WATCH-KIND.CREATE
           :FILE-SYSTEM-WATCHER-KIND
           :FILE-SYSTEM-WATCHER-GLOB-PATTERN
           :FILE-SYSTEM-WATCHER
           :RELATIVE-PATTERN-PATTERN
           :RELATIVE-PATTERN-BASE-URI
           :RELATIVE-PATTERN
           :DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS-WATCHERS
           :DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS
           :DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-RELATIVE-PATTERN-SUPPORT
           :DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES
           :DID-CHANGE-CONFIGURATION-PARAMS-SETTINGS
           :DID-CHANGE-CONFIGURATION-PARAMS
           :DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES
           :CONFIGURATION-ITEM-SECTION
           :CONFIGURATION-ITEM-SCOPE-URI
           :CONFIGURATION-ITEM
           :CONFIGURATION-PARAMS-ITEMS
           :CONFIGURATION-PARAMS
           :APPLY-WORKSPACE-EDIT-RESULT-FAILED-CHANGE
           :APPLY-WORKSPACE-EDIT-RESULT-FAILURE-REASON
           :APPLY-WORKSPACE-EDIT-RESULT-APPLIED
           :APPLY-WORKSPACE-EDIT-RESULT
           :APPLY-WORKSPACE-EDIT-PARAMS-EDIT
           :APPLY-WORKSPACE-EDIT-PARAMS-LABEL
           :APPLY-WORKSPACE-EDIT-PARAMS
           :WORK-DONE-PROGRESS-CREATE-PARAMS-TOKEN
           :WORK-DONE-PROGRESS-CREATE-PARAMS
           :WORK-DONE-PROGRESS-CANCEL-PARAMS-TOKEN
           :WORK-DONE-PROGRESS-CANCEL-PARAMS
           :MESSAGE-ACTION-ITEM-TITLE
           :MESSAGE-ACTION-ITEM
           :SHOW-MESSAGE-REQUEST-PARAMS-ACTIONS
           :SHOW-MESSAGE-REQUEST-PARAMS-MESSAGE
           :SHOW-MESSAGE-REQUEST-PARAMS-TYPE
           :SHOW-MESSAGE-REQUEST-PARAMS
           :SHOW-MESSAGE-REQUEST-CLIENT-CAPABILITIES-MESSAGE-ACTION-ITEM
           :SHOW-MESSAGE-REQUEST-CLIENT-CAPABILITIES
           :MESSAGE-TYPE.LOG
           :MESSAGE-TYPE.INFO
           :MESSAGE-TYPE.WARNING
           :MESSAGE-TYPE.ERROR
           :SHOW-MESSAGE-PARAMS-MESSAGE
           :SHOW-MESSAGE-PARAMS-TYPE
           :SHOW-MESSAGE-PARAMS
           :SHOW-DOCUMENT-RESULT-SUCCESS
           :SHOW-DOCUMENT-RESULT
           :SHOW-DOCUMENT-PARAMS-SELECTION
           :SHOW-DOCUMENT-PARAMS-TAKE-FOCUS
           :SHOW-DOCUMENT-PARAMS-EXTERNAL
           :SHOW-DOCUMENT-PARAMS-URI
           :SHOW-DOCUMENT-PARAMS
           :SHOW-DOCUMENT-CLIENT-CAPABILITIES-SUPPORT
           :SHOW-DOCUMENT-CLIENT-CAPABILITIES
           :LOG-MESSAGE-PARAMS-MESSAGE
           :LOG-MESSAGE-PARAMS-TYPE
           :LOG-MESSAGE-PARAMS
           :FAILURE-HANDLING-KIND.UNDO
           :FAILURE-HANDLING-KIND.TEXT-ONLY-TRANSACTIONAL
           :FAILURE-HANDLING-KIND.TRANSACTIONAL
           :FAILURE-HANDLING-KIND.ABORT
           :RESOURCE-OPERATION-KIND.DELETE
           :RESOURCE-OPERATION-KIND.RENAME
           :RESOURCE-OPERATION-KIND.CREATE
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-CHANGE-ANNOTATION-SUPPORT
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-NORMALIZES-LINE-ENDINGS
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-FAILURE-HANDLING
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-RESOURCE-OPERATIONS
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES-DOCUMENT-CHANGES
           :WORKSPACE-EDIT-CLIENT-CAPABILITIES
           :WORK-DONE-PROGRESS-OPTIONS-WORK-DONE-PROGRESS
           :WORK-DONE-PROGRESS-OPTIONS
           :WORK-DONE-PROGRESS-PARAMS-WORK-DONE-TOKEN
           :WORK-DONE-PROGRESS-PARAMS
           :WORK-DONE-PROGRESS-END-MESSAGE
           :WORK-DONE-PROGRESS-END-KIND
           :WORK-DONE-PROGRESS-END
           :WORK-DONE-PROGRESS-REPORT-PERCENTAGE
           :WORK-DONE-PROGRESS-REPORT-MESSAGE
           :WORK-DONE-PROGRESS-REPORT-CANCELLABLE
           :WORK-DONE-PROGRESS-REPORT-KIND
           :WORK-DONE-PROGRESS-REPORT
           :WORK-DONE-PROGRESS-BEGIN-PERCENTAGE
           :WORK-DONE-PROGRESS-BEGIN-MESSAGE
           :WORK-DONE-PROGRESS-BEGIN-CANCELLABLE
           :WORK-DONE-PROGRESS-BEGIN-TITLE
           :WORK-DONE-PROGRESS-BEGIN-KIND
           :WORK-DONE-PROGRESS-BEGIN
           :OPTIONAL-VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION
           :OPTIONAL-VERSIONED-TEXT-DOCUMENT-IDENTIFIER
           :VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION
           :VERSIONED-TEXT-DOCUMENT-IDENTIFIER
           :ANNOTATED-TEXT-EDIT-ANNOTATION-ID
           :ANNOTATED-TEXT-EDIT
           :CHANGE-ANNOTATION-DESCRIPTION
           :CHANGE-ANNOTATION-NEEDS-CONFIRMATION
           :CHANGE-ANNOTATION-LABEL
           :CHANGE-ANNOTATION
           :TEXT-EDIT-NEW-TEXT
           :TEXT-EDIT-RANGE
           :TEXT-EDIT
           :TEXT-DOCUMENT-POSITION-PARAMS-POSITION
           :TEXT-DOCUMENT-POSITION-PARAMS-TEXT-DOCUMENT
           :TEXT-DOCUMENT-POSITION-PARAMS
           :TEXT-DOCUMENT-ITEM-TEXT
           :TEXT-DOCUMENT-ITEM-VERSION
           :TEXT-DOCUMENT-ITEM-LANGUAGE-ID
           :TEXT-DOCUMENT-ITEM-URI
           :TEXT-DOCUMENT-ITEM
           :TEXT-DOCUMENT-IDENTIFIER-URI
           :TEXT-DOCUMENT-IDENTIFIER
           :TEXT-DOCUMENT-EDIT-EDITS
           :TEXT-DOCUMENT-EDIT-TEXT-DOCUMENT
           :TEXT-DOCUMENT-EDIT
           :DELETE-FILE-ANNOTATION-ID
           :DELETE-FILE-URI
           :DELETE-FILE-KIND
           :DELETE-FILE
           :DELETE-FILE-OPTIONS-IGNORE-IF-NOT-EXISTS
           :DELETE-FILE-OPTIONS-RECURSIVE
           :DELETE-FILE-OPTIONS
           :RENAME-FILE-ANNOTATION-ID
           :RENAME-FILE-NEW-URI
           :RENAME-FILE-OLD-URI
           :RENAME-FILE-KIND
           :RENAME-FILE
           :RENAME-FILE-OPTIONS-IGNORE-IF-EXISTS
           :RENAME-FILE-OPTIONS-OVERWRITE
           :RENAME-FILE-OPTIONS
           :CREATE-FILE-ANNOTATION-ID
           :CREATE-FILE-URI
           :CREATE-FILE-KIND
           :CREATE-FILE
           :CREATE-FILE-OPTIONS-IGNORE-IF-EXISTS
           :CREATE-FILE-OPTIONS-OVERWRITE
           :CREATE-FILE-OPTIONS
           :REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES-VERSION
           :REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES-ENGINE
           :REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES
           :RANGE-END
           :RANGE-START
           :RANGE
           :POSITION-ENCODING-KIND.UTF32
           :POSITION-ENCODING-KIND.UTF16
           :POSITION-ENCODING-KIND.UTF8
           :POSITION-CHARACTER
           :POSITION-LINE
           :POSITION
           :PARTIAL-RESULT-PARAMS-PARTIAL-RESULT-TOKEN
           :PARTIAL-RESULT-PARAMS
           :MARKUP-CONTENT-VALUE
           :MARKUP-CONTENT-KIND
           :MARKUP-CONTENT
           :MARKUP-KIND.MARKDOWN
           :MARKUP-KIND.PLAIN-TEXT
           :LOCATION-LINK-TARGET-SELECTION-RANGE
           :LOCATION-LINK-TARGET-RANGE
           :LOCATION-LINK-TARGET-URI
           :LOCATION-LINK-ORIGIN-SELECTION-RANGE
           :LOCATION-LINK
           :LOCATION-RANGE
           :LOCATION-URI
           :LOCATION
           :DOCUMENT-FILTER-PATTERN
           :DOCUMENT-FILTER-SCHEME
           :DOCUMENT-FILTER-LANGUAGE
           :DOCUMENT-FILTER
           :CODE-DESCRIPTION-HREF
           :CODE-DESCRIPTION
           :DIAGNOSTIC-RELATED-INFORMATION-MESSAGE
           :DIAGNOSTIC-RELATED-INFORMATION-LOCATION
           :DIAGNOSTIC-TAG.DEPRECATED
           :DIAGNOSTIC-TAG.UNNECESSARY
           :DIAGNOSTIC-SEVERITY.HINT
           :DIAGNOSTIC-SEVERITY.INFORMATION
           :DIAGNOSTIC-SEVERITY.WARNING
           :DIAGNOSTIC-SEVERITY.ERROR
           :DIAGNOSTIC-DATA
           :DIAGNOSTIC-RELATED-INFORMATION
           :DIAGNOSTIC-TAGS
           :DIAGNOSTIC-MESSAGE
           :DIAGNOSTIC-SOURCE
           :DIAGNOSTIC-CODE-DESCRIPTION
           :DIAGNOSTIC-CODE
           :DIAGNOSTIC-SEVERITY
           :DIAGNOSTIC-RANGE
           :DIAGNOSTIC
           :COMMAND-ARGUMENTS
           :COMMAND-COMMAND
           :COMMAND-TITLE
           :COMMAND
           :TEXT-DOCUMENT-SAVE-REASON.FOCUS-OUT
           :TEXT-DOCUMENT-SAVE-REASON.AFTER-DELAY
           :TEXT-DOCUMENT-SAVE-REASON.MANUAL
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS-REASON
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :WILL-SAVE-TEXT-DOCUMENT-PARAMS
           :DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT
           :DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-SAVE-TEXT-DOCUMENT-PARAMS
           :TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS-INCLUDE-TEXT
           :TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS
           :SAVE-OPTIONS-INCLUDE-TEXT
           :SAVE-OPTIONS
           :DID-OPEN-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-OPEN-TEXT-DOCUMENT-PARAMS
           :DID-CLOSE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-CLOSE-TEXT-DOCUMENT-PARAMS
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS-CONTENT-CHANGES
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT
           :DID-CHANGE-TEXT-DOCUMENT-PARAMS
           :TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS-SYNC-KIND
           :TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS
           :NOTEBOOK-DOCUMENT-IDENTIFIER-URI
           :NOTEBOOK-DOCUMENT-IDENTIFIER
           :DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS-CELL-TEXT-DOCUMENTS
           :DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT
           :DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS
           :DID-SAVE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT
           :DID-SAVE-NOTEBOOK-DOCUMENT-PARAMS
           :NOTEBOOK-CELL-ARRAY-CHANGE-CELLS
           :NOTEBOOK-CELL-ARRAY-CHANGE-DELETE-COUNT
           :NOTEBOOK-CELL-ARRAY-CHANGE-START
           :NOTEBOOK-CELL-ARRAY-CHANGE
           :VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER-URI
           :VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER-VERSION
           :VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER
           :DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS-CHANGE
           :DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT
           :DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS
           :DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS-CELL-TEXT-DOCUMENTS
           :DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT
           :DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS
           :NOTEBOOK-DOCUMENT-SYNC-REGISTRATION-OPTIONS
           :NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES-EXECUTION-SUMMARY-SUPPORT
           :NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES
           :NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER-LANGUAGE
           :NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER-NOTEBOOK
           :NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER
           :EXECUTION-SUMMARY-SUCCESS
           :EXECUTION-SUMMARY-EXECUTION-ORDER
           :EXECUTION-SUMMARY
           :NOTEBOOK-CELL-KIND.CODE
           :NOTEBOOK-CELL-KIND.MARKUP
           :NOTEBOOK-CELL-EXECUTION-SUMMARY
           :NOTEBOOK-CELL-METADATA
           :NOTEBOOK-CELL-DOCUMENT
           :NOTEBOOK-CELL-KIND
           :NOTEBOOK-CELL
           :NOTEBOOK-DOCUMENT-CELLS
           :NOTEBOOK-DOCUMENT-METADATA
           :NOTEBOOK-DOCUMENT-VERSION
           :NOTEBOOK-DOCUMENT-NOTEBOOK-TYPE
           :NOTEBOOK-DOCUMENT-URI
           :NOTEBOOK-DOCUMENT
           :TYPE-HIERARCHY-SUBTYPES-PARAMS-ITEM
           :TYPE-HIERARCHY-SUBTYPES-PARAMS
           :TYPE-HIERARCHY-SUPERTYPES-PARAMS-ITEM
           :TYPE-HIERARCHY-SUPERTYPES-PARAMS
           :TYPE-HIERARCHY-ITEM-DATA
           :TYPE-HIERARCHY-ITEM-SELECTION-RANGE
           :TYPE-HIERARCHY-ITEM-RANGE
           :TYPE-HIERARCHY-ITEM-URI
           :TYPE-HIERARCHY-ITEM-DETAIL
           :TYPE-HIERARCHY-ITEM-TAGS
           :TYPE-HIERARCHY-ITEM-KIND
           :TYPE-HIERARCHY-ITEM-NAME
           :TYPE-HIERARCHY-ITEM
           :TYPE-HIERARCHY-PREPARE-PARAMS
           :TYPE-HIERARCHY-REGISTRATION-OPTIONS
           :TYPE-HIERARCHY-OPTIONS
           :TYPE-DEFINITION-PARAMS
           :TYPE-DEFINITION-REGISTRATION-OPTIONS
           :TYPE-DEFINITION-OPTIONS
           :TYPE-DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :TYPE-DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :TYPE-DEFINITION-CLIENT-CAPABILITIES
           :PARAMETER-INFORMATION-DOCUMENTATION
           :PARAMETER-INFORMATION-LABEL
           :PARAMETER-INFORMATION
           :SIGNATURE-INFORMATION-ACTIVE-PARAMETER
           :SIGNATURE-INFORMATION-PARAMETERS
           :SIGNATURE-INFORMATION-DOCUMENTATION
           :SIGNATURE-INFORMATION-LABEL
           :SIGNATURE-INFORMATION
           :SIGNATURE-HELP-ACTIVE-PARAMETER
           :SIGNATURE-HELP-ACTIVE-SIGNATURE
           :SIGNATURE-HELP-SIGNATURES
           :SIGNATURE-HELP
           :SIGNATURE-HELP-CONTEXT-ACTIVE-SIGNATURE-HELP
           :SIGNATURE-HELP-CONTEXT-IS-RETRIGGER
           :SIGNATURE-HELP-CONTEXT-TRIGGER-CHARACTER
           :SIGNATURE-HELP-CONTEXT-TRIGGER-KIND
           :SIGNATURE-HELP-CONTEXT
           :SIGNATURE-HELP-TRIGGER-KIND.CONTENT-CHANGE
           :SIGNATURE-HELP-TRIGGER-KIND.TRIGGER-CHARACTER
           :SIGNATURE-HELP-TRIGGER-KIND.INVOKED
           :SIGNATURE-HELP-PARAMS-CONTEXT
           :SIGNATURE-HELP-PARAMS
           :SIGNATURE-HELP-REGISTRATION-OPTIONS
           :SIGNATURE-HELP-OPTIONS-RETRIGGER-CHARACTERS
           :SIGNATURE-HELP-OPTIONS-TRIGGER-CHARACTERS
           :SIGNATURE-HELP-OPTIONS
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-CONTEXT-SUPPORT
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-SIGNATURE-INFORMATION
           :SIGNATURE-HELP-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :SIGNATURE-HELP-CLIENT-CAPABILITIES
           :SEMANTIC-TOKENS-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT
           :SEMANTIC-TOKENS-WORKSPACE-CLIENT-CAPABILITIES
           :SEMANTIC-TOKENS-RANGE-PARAMS-RANGE
           :SEMANTIC-TOKENS-RANGE-PARAMS-TEXT-DOCUMENT
           :SEMANTIC-TOKENS-RANGE-PARAMS
           :SEMANTIC-TOKENS-DELTA-PARTIAL-RESULT-EDITS
           :SEMANTIC-TOKENS-DELTA-PARTIAL-RESULT
           :SEMANTIC-TOKENS-EDIT-DATA
           :SEMANTIC-TOKENS-EDIT-DELETE-COUNT
           :SEMANTIC-TOKENS-EDIT-START
           :SEMANTIC-TOKENS-EDIT
           :SEMANTIC-TOKENS-DELTA-EDITS
           :SEMANTIC-TOKENS-DELTA-RESULT-ID
           :SEMANTIC-TOKENS-DELTA
           :SEMANTIC-TOKENS-DELTA-PARAMS-PREVIOUS-RESULT-ID
           :SEMANTIC-TOKENS-DELTA-PARAMS-TEXT-DOCUMENT
           :SEMANTIC-TOKENS-DELTA-PARAMS
           :SEMANTIC-TOKENS-PARTIAL-RESULT-DATA
           :SEMANTIC-TOKENS-PARTIAL-RESULT
           :SEMANTIC-TOKENS-DATA
           :SEMANTIC-TOKENS-RESULT-ID
           :SEMANTIC-TOKENS
           :SEMANTIC-TOKENS-PARAMS-TEXT-DOCUMENT
           :SEMANTIC-TOKENS-PARAMS
           :SEMANTIC-TOKENS-REGISTRATION-OPTIONS
           :SEMANTIC-TOKENS-OPTIONS-FULL
           :SEMANTIC-TOKENS-OPTIONS-RANGE
           :SEMANTIC-TOKENS-OPTIONS-LEGEND
           :SEMANTIC-TOKENS-OPTIONS
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-AUGMENTS-SYNTAX-TOKENS
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-SERVER-CANCEL-SUPPORT
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-MULTILINE-TOKEN-SUPPORT
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-OVERLAPPING-TOKEN-SUPPORT
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-FORMATS
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-TOKEN-MODIFIERS
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-TOKEN-TYPES
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-REQUESTS
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :SEMANTIC-TOKENS-CLIENT-CAPABILITIES
           :SEMANTIC-TOKENS-LEGEND-TOKEN-MODIFIERS
           :SEMANTIC-TOKENS-LEGEND-TOKEN-TYPES
           :SEMANTIC-TOKENS-LEGEND
           :TOKEN-FORMAT.RELATIVE
           :SELECTION-RANGE-PARENT
           :SELECTION-RANGE-RANGE
           :SELECTION-RANGE
           :SELECTION-RANGE-PARAMS-POSITIONS
           :SELECTION-RANGE-PARAMS-TEXT-DOCUMENT
           :SELECTION-RANGE-PARAMS
           :SELECTION-RANGE-REGISTRATION-OPTIONS
           :SELECTION-RANGE-OPTIONS
           :SELECTION-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :SELECTION-RANGE-CLIENT-CAPABILITIES
           :PREPARE-RENAME-PARAMS
           :RENAME-PARAMS-NEW-NAME
           :RENAME-PARAMS
           :RENAME-REGISTRATION-OPTIONS
           :RENAME-OPTIONS-PREPARE-PROVIDER
           :RENAME-OPTIONS
           :RENAME-CLIENT-CAPABILITIES-HONORS-CHANGE-ANNOTATIONS
           :RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT-DEFAULT-BEHAVIOR
           :RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT
           :RENAME-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :RENAME-CLIENT-CAPABILITIES
           :PREPARE-SUPPORT-DEFAULT-BEHAVIOR.IDENTIFIER
           :REFERENCE-CONTEXT-INCLUDE-DECLARATION
           :REFERENCE-CONTEXT
           :REFERENCE-PARAMS-CONTEXT
           :REFERENCE-PARAMS
           :REFERENCE-REGISTRATION-OPTIONS
           :REFERENCE-OPTIONS
           :REFERENCE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :REFERENCE-CLIENT-CAPABILITIES
           :DOCUMENT-RANGE-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-PARAMS-RANGE
           :DOCUMENT-RANGE-FORMATTING-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-RANGE-FORMATTING-PARAMS
           :DOCUMENT-RANGE-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-OPTIONS
           :DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES
           :DIAGNOSTIC-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT
           :DIAGNOSTIC-WORKSPACE-CLIENT-CAPABILITIES
           :WORKSPACE-DIAGNOSTIC-REPORT-PARTIAL-RESULT-ITEMS
           :WORKSPACE-DIAGNOSTIC-REPORT-PARTIAL-RESULT
           :WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT-VERSION
           :WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT-URI
           :WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT
           :WORKSPACE-DIAGNOSTIC-REPORT-ITEMS
           :WORKSPACE-DIAGNOSTIC-REPORT
           :PREVIOUS-RESULT-ID-VALUE
           :PREVIOUS-RESULT-ID-URI
           :PREVIOUS-RESULT-ID
           :WORKSPACE-DIAGNOSTIC-PARAMS-PREVIOUS-RESULT-IDS
           :WORKSPACE-DIAGNOSTIC-PARAMS-IDENTIFIER
           :WORKSPACE-DIAGNOSTIC-PARAMS
           :DIAGNOSTIC-SERVER-CANCELLATION-DATA-RETRIGGER-REQUEST
           :DIAGNOSTIC-SERVER-CANCELLATION-DATA
           :DOCUMENT-DIAGNOSTIC-REPORT-KIND.UNCHANGED
           :DOCUMENT-DIAGNOSTIC-REPORT-KIND.FULL
           :DOCUMENT-DIAGNOSTIC-PARAMS-PREVIOUS-RESULT-ID
           :DOCUMENT-DIAGNOSTIC-PARAMS-IDENTIFIER
           :DOCUMENT-DIAGNOSTIC-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-DIAGNOSTIC-PARAMS
           :DIAGNOSTIC-REGISTRATION-OPTIONS
           :DIAGNOSTIC-OPTIONS-WORKSPACE-DIAGNOSTICS
           :DIAGNOSTIC-OPTIONS-INTER-FILE-DEPENDENCIES
           :DIAGNOSTIC-OPTIONS-IDENTIFIER
           :DIAGNOSTIC-OPTIONS
           :DIAGNOSTIC-CLIENT-CAPABILITIES-RELATED-DOCUMENT-SUPPORT
           :DIAGNOSTIC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DIAGNOSTIC-CLIENT-CAPABILITIES
           :PUBLISH-DIAGNOSTICS-PARAMS-DIAGNOSTICS
           :PUBLISH-DIAGNOSTICS-PARAMS-VERSION
           :PUBLISH-DIAGNOSTICS-PARAMS-URI
           :PUBLISH-DIAGNOSTICS-PARAMS
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-DATA-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-CODE-DESCRIPTION-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-VERSION-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-TAG-SUPPORT
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-RELATED-INFORMATION
           :PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-CH
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-POSITION
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-ON-TYPE-FORMATTING-PARAMS
           :DOCUMENT-ON-TYPE-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-MORE-TRIGGER-CHARACTER
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-FIRST-TRIGGER-CHARACTER
           :DOCUMENT-ON-TYPE-FORMATTING-OPTIONS
           :DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES
           :MONIKER-KIND
           :MONIKER-UNIQUE
           :MONIKER-IDENTIFIER
           :MONIKER-SCHEME
           :MONIKER
           :MONIKER-PARAMS
           :MONIKER-REGISTRATION-OPTIONS
           :MONIKER-OPTIONS
           :MONIKER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :MONIKER-CLIENT-CAPABILITIES
           :LINKED-EDITING-RANGES-WORD-PATTERN
           :LINKED-EDITING-RANGES-RANGES
           :LINKED-EDITING-RANGES
           :LINKED-EDITING-RANGE-PARAMS
           :LINKED-EDITING-RANGE-REGISTRATION-OPTIONS
           :LINKED-EDITING-RANGE-OPTIONS
           :LINKED-EDITING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :LINKED-EDITING-RANGE-CLIENT-CAPABILITIES
           :INLINE-VALUE-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT
           :INLINE-VALUE-WORKSPACE-CLIENT-CAPABILITIES
           :INLINE-VALUE-EVALUATABLE-EXPRESSION-EXPRESSION
           :INLINE-VALUE-EVALUATABLE-EXPRESSION-RANGE
           :INLINE-VALUE-EVALUATABLE-EXPRESSION
           :INLINE-VALUE-VARIABLE-LOOKUP-CASE-SENSITIVE-LOOKUP
           :INLINE-VALUE-VARIABLE-LOOKUP-VARIABLE-NAME
           :INLINE-VALUE-VARIABLE-LOOKUP-RANGE
           :INLINE-VALUE-VARIABLE-LOOKUP
           :INLINE-VALUE-TEXT-TEXT
           :INLINE-VALUE-TEXT-RANGE
           :INLINE-VALUE-TEXT
           :INLINE-VALUE-CONTEXT-STOPPED-LOCATION
           :INLINE-VALUE-CONTEXT-FRAME-ID
           :INLINE-VALUE-CONTEXT
           :INLINE-VALUE-PARAMS-CONTEXT
           :INLINE-VALUE-PARAMS-RANGE
           :INLINE-VALUE-PARAMS-TEXT-DOCUMENT
           :INLINE-VALUE-PARAMS
           :INLINE-VALUE-REGISTRATION-OPTIONS
           :INLINE-VALUE-OPTIONS
           :INLINE-VALUE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :INLINE-VALUE-CLIENT-CAPABILITIES
           :INLAY-HINT-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT
           :INLAY-HINT-WORKSPACE-CLIENT-CAPABILITIES
           :INLAY-HINT-KIND.PARAMETER
           :INLAY-HINT-KIND.TYPE
           :INLAY-HINT-LABEL-PART-COMMAND
           :INLAY-HINT-LABEL-PART-LOCATION
           :INLAY-HINT-LABEL-PART-TOOLTIP
           :INLAY-HINT-LABEL-PART-VALUE
           :INLAY-HINT-LABEL-PART
           :INLAY-HINT-DATA
           :INLAY-HINT-PADDING-RIGHT
           :INLAY-HINT-PADDING-LEFT
           :INLAY-HINT-TOOLTIP
           :INLAY-HINT-TEXT-EDITS
           :INLAY-HINT-KIND
           :INLAY-HINT-LABEL
           :INLAY-HINT-POSITION
           :INLAY-HINT
           :INLAY-HINT-PARAMS-RANGE
           :INLAY-HINT-PARAMS-TEXT-DOCUMENT
           :INLAY-HINT-PARAMS
           :INLAY-HINT-REGISTRATION-OPTIONS
           :INLAY-HINT-OPTIONS-RESOLVE-PROVIDER
           :INLAY-HINT-OPTIONS
           :INLAY-HINT-CLIENT-CAPABILITIES-RESOLVE-SUPPORT
           :INLAY-HINT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :INLAY-HINT-CLIENT-CAPABILITIES
           :IMPLEMENTATION-PARAMS
           :IMPLEMENTATION-REGISTRATION-OPTIONS
           :IMPLEMENTATION-OPTIONS
           :IMPLEMENTATION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :IMPLEMENTATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :IMPLEMENTATION-CLIENT-CAPABILITIES
           :HOVER-RANGE
           :HOVER-CONTENTS
           :HOVER
           :HOVER-PARAMS
           :HOVER-REGISTRATION-OPTIONS
           :HOVER-OPTIONS
           :HOVER-CLIENT-CAPABILITIES-CONTENT-FORMAT
           :HOVER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :HOVER-CLIENT-CAPABILITIES
           :FORMATTING-OPTIONS-KEY
           :FORMATTING-OPTIONS-TRIM-FINAL-NEWLINES
           :FORMATTING-OPTIONS-INSERT-FINAL-NEWLINE
           :FORMATTING-OPTIONS-TRIM-TRAILING-WHITESPACE
           :FORMATTING-OPTIONS-INSERT-SPACES
           :FORMATTING-OPTIONS-TAB-SIZE
           :FORMATTING-OPTIONS
           :DOCUMENT-FORMATTING-PARAMS-OPTIONS
           :DOCUMENT-FORMATTING-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-FORMATTING-PARAMS
           :DOCUMENT-FORMATTING-REGISTRATION-OPTIONS
           :DOCUMENT-FORMATTING-OPTIONS
           :DOCUMENT-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-FORMATTING-CLIENT-CAPABILITIES
           :FOLDING-RANGE-COLLAPSED-TEXT
           :FOLDING-RANGE-KIND
           :FOLDING-RANGE-END-CHARACTER
           :FOLDING-RANGE-END-LINE
           :FOLDING-RANGE-START-CHARACTER
           :FOLDING-RANGE-START-LINE
           :FOLDING-RANGE
           :FOLDING-RANGE-KIND.REGION
           :FOLDING-RANGE-KIND.IMPORTS
           :FOLDING-RANGE-KIND.COMMENT
           :FOLDING-RANGE-PARAMS-TEXT-DOCUMENT
           :FOLDING-RANGE-PARAMS
           :FOLDING-RANGE-REGISTRATION-OPTIONS
           :FOLDING-RANGE-OPTIONS
           :FOLDING-RANGE-CLIENT-CAPABILITIES-FOLDING-RANGE
           :FOLDING-RANGE-CLIENT-CAPABILITIES-FOLDING-RANGE-KIND
           :FOLDING-RANGE-CLIENT-CAPABILITIES-LINE-FOLDING-ONLY
           :FOLDING-RANGE-CLIENT-CAPABILITIES-RANGE-LIMIT
           :FOLDING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :FOLDING-RANGE-CLIENT-CAPABILITIES
           :SYMBOL-INFORMATION-CONTAINER-NAME
           :SYMBOL-INFORMATION-LOCATION
           :SYMBOL-INFORMATION-DEPRECATED
           :SYMBOL-INFORMATION-TAGS
           :SYMBOL-INFORMATION-KIND
           :SYMBOL-INFORMATION-NAME
           :SYMBOL-INFORMATION
           :DOCUMENT-SYMBOL-CHILDREN
           :DOCUMENT-SYMBOL-SELECTION-RANGE
           :DOCUMENT-SYMBOL-RANGE
           :DOCUMENT-SYMBOL-DEPRECATED
           :DOCUMENT-SYMBOL-TAGS
           :DOCUMENT-SYMBOL-KIND
           :DOCUMENT-SYMBOL-DETAIL
           :DOCUMENT-SYMBOL-NAME
           :DOCUMENT-SYMBOL
           :SYMBOL-TAG.DEPRECATED
           :SYMBOL-KIND.TYPE-PARAMETER
           :SYMBOL-KIND.OPERATOR
           :SYMBOL-KIND.EVENT
           :SYMBOL-KIND.STRUCT
           :SYMBOL-KIND.ENUM-MEMBER
           :SYMBOL-KIND.NULL
           :SYMBOL-KIND.KEY
           :SYMBOL-KIND.OBJECT
           :SYMBOL-KIND.ARRAY
           :SYMBOL-KIND.BOOLEAN
           :SYMBOL-KIND.NUMBER
           :SYMBOL-KIND.STRING
           :SYMBOL-KIND.CONSTANT
           :SYMBOL-KIND.VARIABLE
           :SYMBOL-KIND.FUNCTION
           :SYMBOL-KIND.INTERFACE
           :SYMBOL-KIND.ENUM
           :SYMBOL-KIND.CONSTRUCTOR
           :SYMBOL-KIND.FIELD
           :SYMBOL-KIND.PROPERTY
           :SYMBOL-KIND.METHOD
           :SYMBOL-KIND.CLASS
           :SYMBOL-KIND.PACKAGE
           :SYMBOL-KIND.NAMESPACE
           :SYMBOL-KIND.MODULE
           :SYMBOL-KIND.FILE
           :DOCUMENT-SYMBOL-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-SYMBOL-PARAMS
           :DOCUMENT-SYMBOL-REGISTRATION-OPTIONS
           :DOCUMENT-SYMBOL-OPTIONS-LABEL
           :DOCUMENT-SYMBOL-OPTIONS
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-LABEL-SUPPORT
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-TAG-SUPPORT
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-SYMBOL-CLIENT-CAPABILITIES
           :DOCUMENT-LINK-DATA
           :DOCUMENT-LINK-TOOLTIP
           :DOCUMENT-LINK-TARGET
           :DOCUMENT-LINK-RANGE
           :DOCUMENT-LINK
           :DOCUMENT-LINK-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-LINK-PARAMS
           :DOCUMENT-LINK-REGISTRATION-OPTIONS
           :DOCUMENT-LINK-OPTIONS-RESOLVE-PROVIDER
           :DOCUMENT-LINK-OPTIONS
           :DOCUMENT-LINK-CLIENT-CAPABILITIES-TOOLTIP-SUPPORT
           :DOCUMENT-LINK-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-LINK-CLIENT-CAPABILITIES
           :DOCUMENT-HIGHLIGHT-KIND.WRITE
           :DOCUMENT-HIGHLIGHT-KIND.READ
           :DOCUMENT-HIGHLIGHT-KIND.TEXT
           :DOCUMENT-HIGHLIGHT-KIND
           :DOCUMENT-HIGHLIGHT-RANGE
           :DOCUMENT-HIGHLIGHT
           :DOCUMENT-HIGHLIGHT-PARAMS
           :DOCUMENT-HIGHLIGHT-REGISTRATION-OPTIONS
           :DOCUMENT-HIGHLIGHT-OPTIONS
           :DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES
           :COLOR-ALPHA
           :COLOR-BLUE
           :COLOR-GREEN
           :COLOR-RED
           :COLOR
           :COLOR-INFORMATION-COLOR
           :COLOR-INFORMATION-RANGE
           :COLOR-INFORMATION
           :DOCUMENT-COLOR-PARAMS-TEXT-DOCUMENT
           :DOCUMENT-COLOR-PARAMS
           :DOCUMENT-COLOR-REGISTRATION-OPTIONS
           :DOCUMENT-COLOR-OPTIONS
           :DOCUMENT-COLOR-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DOCUMENT-COLOR-CLIENT-CAPABILITIES
           :DEFINITION-PARAMS
           :DEFINITION-REGISTRATION-OPTIONS
           :DEFINITION-OPTIONS
           :DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DEFINITION-CLIENT-CAPABILITIES
           :DECLARATION-PARAMS
           :DECLARATION-REGISTRATION-OPTIONS
           :DECLARATION-OPTIONS
           :DECLARATION-CLIENT-CAPABILITIES-LINK-SUPPORT
           :DECLARATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :DECLARATION-CLIENT-CAPABILITIES
           :COMPLETION-ITEM-KIND.TYPE-PARAMETER
           :COMPLETION-ITEM-KIND.OPERATOR
           :COMPLETION-ITEM-KIND.EVENT
           :COMPLETION-ITEM-KIND.STRUCT
           :COMPLETION-ITEM-KIND.CONSTANT
           :COMPLETION-ITEM-KIND.ENUM-MEMBER
           :COMPLETION-ITEM-KIND.FOLDER
           :COMPLETION-ITEM-KIND.REFERENCE
           :COMPLETION-ITEM-KIND.FILE
           :COMPLETION-ITEM-KIND.COLOR
           :COMPLETION-ITEM-KIND.SNIPPET
           :COMPLETION-ITEM-KIND.KEYWORD
           :COMPLETION-ITEM-KIND.ENUM
           :COMPLETION-ITEM-KIND.VALUE
           :COMPLETION-ITEM-KIND.UNIT
           :COMPLETION-ITEM-KIND.PROPERTY
           :COMPLETION-ITEM-KIND.MODULE
           :COMPLETION-ITEM-KIND.INTERFACE
           :COMPLETION-ITEM-KIND.CLASS
           :COMPLETION-ITEM-KIND.VARIABLE
           :COMPLETION-ITEM-KIND.FIELD
           :COMPLETION-ITEM-KIND.CONSTRUCTOR
           :COMPLETION-ITEM-KIND.FUNCTION
           :COMPLETION-ITEM-KIND.METHOD
           :COMPLETION-ITEM-KIND.TEXT
           :COMPLETION-ITEM-DATA
           :COMPLETION-ITEM-COMMAND
           :COMPLETION-ITEM-COMMIT-CHARACTERS
           :COMPLETION-ITEM-ADDITIONAL-TEXT-EDITS
           :COMPLETION-ITEM-TEXT-EDIT-TEXT
           :COMPLETION-ITEM-TEXT-EDIT
           :COMPLETION-ITEM-INSERT-TEXT-MODE
           :COMPLETION-ITEM-INSERT-TEXT-FORMAT
           :COMPLETION-ITEM-INSERT-TEXT
           :COMPLETION-ITEM-FILTER-TEXT
           :COMPLETION-ITEM-SORT-TEXT
           :COMPLETION-ITEM-PRESELECT
           :COMPLETION-ITEM-DEPRECATED
           :COMPLETION-ITEM-DOCUMENTATION
           :COMPLETION-ITEM-DETAIL
           :COMPLETION-ITEM-TAGS
           :COMPLETION-ITEM-KIND
           :COMPLETION-ITEM-LABEL
           :COMPLETION-ITEM
           :COMPLETION-ITEM-LABEL-DETAILS-DESCRIPTION
           :COMPLETION-ITEM-LABEL-DETAILS-DETAIL
           :COMPLETION-ITEM-LABEL-DETAILS
           :INSERT-TEXT-MODE.ADJUST-INDENTATION
           :INSERT-TEXT-MODE.AS-IS
           :INSERT-REPLACE-EDIT-REPLACE
           :INSERT-REPLACE-EDIT-INSERT
           :INSERT-REPLACE-EDIT-NEW-TEXT
           :INSERT-REPLACE-EDIT
           :COMPLETION-ITEM-TAG.DEPRECATED
           :INSERT-TEXT-FORMAT.SNIPPET
           :INSERT-TEXT-FORMAT.PLAIN-TEXT
           :COMPLETION-LIST-ITEMS
           :COMPLETION-LIST-ITEM-DEFAULTS
           :COMPLETION-LIST-IS-INCOMPLETE
           :COMPLETION-LIST
           :COMPLETION-CONTEXT-TRIGGER-CHARACTER
           :COMPLETION-CONTEXT-TRIGGER-KIND
           :COMPLETION-CONTEXT
           :COMPLETION-TRIGGER-KIND.TRIGGER-FOR-INCOMPLETE-COMPLETIONS
           :COMPLETION-TRIGGER-KIND.TRIGGER-CHARACTER
           :COMPLETION-TRIGGER-KIND.INVOKED
           :COMPLETION-PARAMS-CONTEXT
           :COMPLETION-PARAMS
           :COMPLETION-REGISTRATION-OPTIONS
           :COMPLETION-OPTIONS-COMPLETION-ITEM
           :COMPLETION-OPTIONS-RESOLVE-PROVIDER
           :COMPLETION-OPTIONS-ALL-COMMIT-CHARACTERS
           :COMPLETION-OPTIONS-TRIGGER-CHARACTERS
           :COMPLETION-OPTIONS
           :COMPLETION-CLIENT-CAPABILITIES-COMPLETION-LIST
           :COMPLETION-CLIENT-CAPABILITIES-INSERT-TEXT-MODE
           :COMPLETION-CLIENT-CAPABILITIES-CONTEXT-SUPPORT
           :COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM-KIND
           :COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM
           :COMPLETION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :COMPLETION-CLIENT-CAPABILITIES
           :COLOR-PRESENTATION-ADDITIONAL-TEXT-EDITS
           :COLOR-PRESENTATION-TEXT-EDIT
           :COLOR-PRESENTATION-LABEL
           :COLOR-PRESENTATION
           :COLOR-PRESENTATION-PARAMS-RANGE
           :COLOR-PRESENTATION-PARAMS-COLOR
           :COLOR-PRESENTATION-PARAMS-TEXT-DOCUMENT
           :COLOR-PRESENTATION-PARAMS
           :CODE-LENS-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT
           :CODE-LENS-WORKSPACE-CLIENT-CAPABILITIES
           :CODE-LENS-DATA
           :CODE-LENS-COMMAND
           :CODE-LENS-RANGE
           :CODE-LENS
           :CODE-LENS-PARAMS-TEXT-DOCUMENT
           :CODE-LENS-PARAMS
           :CODE-LENS-REGISTRATION-OPTIONS
           :CODE-LENS-OPTIONS-RESOLVE-PROVIDER
           :CODE-LENS-OPTIONS
           :CODE-LENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :CODE-LENS-CLIENT-CAPABILITIES
           :CODE-ACTION-DATA
           :CODE-ACTION-COMMAND
           :CODE-ACTION-EDIT
           :CODE-ACTION-DISABLED
           :CODE-ACTION-IS-PREFERRED
           :CODE-ACTION-DIAGNOSTICS
           :CODE-ACTION-KIND
           :CODE-ACTION-TITLE
           :CODE-ACTION
           :CODE-ACTION-TRIGGER-KIND.AUTOMATIC
           :CODE-ACTION-TRIGGER-KIND.INVOKED
           :CODE-ACTION-CONTEXT-TRIGGER-KIND
           :CODE-ACTION-CONTEXT-ONLY
           :CODE-ACTION-CONTEXT-DIAGNOSTICS
           :CODE-ACTION-CONTEXT
           :CODE-ACTION-KIND.SOURCE-FIX-ALL
           :CODE-ACTION-KIND.SOURCE-ORGANIZE-IMPORTS
           :CODE-ACTION-KIND.SOURCE
           :CODE-ACTION-KIND.REFACTOR-REWRITE
           :CODE-ACTION-KIND.REFACTOR-INLINE
           :CODE-ACTION-KIND.REFACTOR-EXTRACT
           :CODE-ACTION-KIND.REFACTOR
           :CODE-ACTION-KIND.QUICK-FIX
           :CODE-ACTION-KIND.EMPTY
           :CODE-ACTION-PARAMS-CONTEXT
           :CODE-ACTION-PARAMS-RANGE
           :CODE-ACTION-PARAMS-TEXT-DOCUMENT
           :CODE-ACTION-PARAMS
           :CODE-ACTION-REGISTRATION-OPTIONS
           :CODE-ACTION-OPTIONS-RESOLVE-PROVIDER
           :CODE-ACTION-OPTIONS-CODE-ACTION-KINDS
           :CODE-ACTION-OPTIONS
           :CODE-ACTION-CLIENT-CAPABILITIES-HONORS-CHANGE-ANNOTATIONS
           :CODE-ACTION-CLIENT-CAPABILITIES-RESOLVE-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-DATA-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-DISABLED-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-IS-PREFERRED-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-CODE-ACTION-LITERAL-SUPPORT
           :CODE-ACTION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :CODE-ACTION-CLIENT-CAPABILITIES
           :CALL-HIERARCHY-OUTGOING-CALL-FROM-RANGES
           :CALL-HIERARCHY-OUTGOING-CALL-TO
           :CALL-HIERARCHY-OUTGOING-CALL
           :CALL-HIERARCHY-OUTGOING-CALLS-PARAMS-ITEM
           :CALL-HIERARCHY-OUTGOING-CALLS-PARAMS
           :CALL-HIERARCHY-INCOMING-CALL-FROM-RANGES
           :CALL-HIERARCHY-INCOMING-CALL-FROM
           :CALL-HIERARCHY-INCOMING-CALL
           :CALL-HIERARCHY-INCOMING-CALLS-PARAMS-ITEM
           :CALL-HIERARCHY-INCOMING-CALLS-PARAMS
           :CALL-HIERARCHY-ITEM-DATA
           :CALL-HIERARCHY-ITEM-SELECTION-RANGE
           :CALL-HIERARCHY-ITEM-RANGE
           :CALL-HIERARCHY-ITEM-URI
           :CALL-HIERARCHY-ITEM-DETAIL
           :CALL-HIERARCHY-ITEM-TAGS
           :CALL-HIERARCHY-ITEM-KIND
           :CALL-HIERARCHY-ITEM-NAME
           :CALL-HIERARCHY-ITEM
           :CALL-HIERARCHY-PREPARE-PARAMS
           :CALL-HIERARCHY-REGISTRATION-OPTIONS
           :CALL-HIERARCHY-OPTIONS
           :CALL-HIERARCHY-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION
           :CALL-HIERARCHY-CLIENT-CAPABILITIES
           :SET-TRACE-PARAMS-VALUE
           :SET-TRACE-PARAMS
           :LOG-TRACE-PARAMS-VERBOSE
           :LOG-TRACE-PARAMS-MESSAGE
           :LOG-TRACE-PARAMS
           :INITIALIZED-PARAMS
           :SERVER-CAPABILITIES-EXPERIMENTAL
           :SERVER-CAPABILITIES-WORKSPACE
           :SERVER-CAPABILITIES-WORKSPACE-SYMBOL-PROVIDER
           :SERVER-CAPABILITIES-DIAGNOSTIC-PROVIDER
           :SERVER-CAPABILITIES-INLAY-HINT-PROVIDER
           :SERVER-CAPABILITIES-INLINE-VALUE-PROVIDER
           :SERVER-CAPABILITIES-TYPE-HIERARCHY-PROVIDER
           :SERVER-CAPABILITIES-MONIKER-PROVIDER
           :SERVER-CAPABILITIES-SEMANTIC-TOKENS-PROVIDER
           :SERVER-CAPABILITIES-CALL-HIERARCHY-PROVIDER
           :SERVER-CAPABILITIES-LINKED-EDITING-RANGE-PROVIDER
           :SERVER-CAPABILITIES-SELECTION-RANGE-PROVIDER
           :SERVER-CAPABILITIES-EXECUTE-COMMAND-PROVIDER
           :SERVER-CAPABILITIES-FOLDING-RANGE-PROVIDER
           :SERVER-CAPABILITIES-RENAME-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-ON-TYPE-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-RANGE-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-FORMATTING-PROVIDER
           :SERVER-CAPABILITIES-COLOR-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-LINK-PROVIDER
           :SERVER-CAPABILITIES-CODE-LENS-PROVIDER
           :SERVER-CAPABILITIES-CODE-ACTION-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-SYMBOL-PROVIDER
           :SERVER-CAPABILITIES-DOCUMENT-HIGHLIGHT-PROVIDER
           :SERVER-CAPABILITIES-REFERENCES-PROVIDER
           :SERVER-CAPABILITIES-IMPLEMENTATION-PROVIDER
           :SERVER-CAPABILITIES-TYPE-DEFINITION-PROVIDER
           :SERVER-CAPABILITIES-DEFINITION-PROVIDER
           :SERVER-CAPABILITIES-DECLARATION-PROVIDER
           :SERVER-CAPABILITIES-SIGNATURE-HELP-PROVIDER
           :SERVER-CAPABILITIES-HOVER-PROVIDER
           :SERVER-CAPABILITIES-COMPLETION-PROVIDER
           :SERVER-CAPABILITIES-NOTEBOOK-DOCUMENT-SYNC
           :SERVER-CAPABILITIES-TEXT-DOCUMENT-SYNC
           :SERVER-CAPABILITIES-POSITION-ENCODING
           :SERVER-CAPABILITIES
           :INITIALIZE-ERROR-RETRY
           :INITIALIZE-ERROR
           :INITIALIZE-ERROR-CODES.UNKNOWN-PROTOCOL-VERSION
           :INITIALIZE-RESULT-SERVER-INFO
           :INITIALIZE-RESULT-CAPABILITIES
           :INITIALIZE-RESULT
           :CLIENT-CAPABILITIES-EXPERIMENTAL
           :CLIENT-CAPABILITIES-GENERAL
           :CLIENT-CAPABILITIES-WINDOW
           :CLIENT-CAPABILITIES-NOTEBOOK-DOCUMENT
           :CLIENT-CAPABILITIES-TEXT-DOCUMENT
           :CLIENT-CAPABILITIES-WORKSPACE
           :CLIENT-CAPABILITIES
           :NOTEBOOK-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION
           :NOTEBOOK-DOCUMENT-CLIENT-CAPABILITIES
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DIAGNOSTIC
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-INLAY-HINT
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-INLINE-VALUE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-HIERARCHY
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-MONIKER
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SEMANTIC-TOKENS
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-CALL-HIERARCHY
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-LINKED-EDITING-RANGE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SELECTION-RANGE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-FOLDING-RANGE
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-PUBLISH-DIAGNOSTICS
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-RENAME
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-ON-TYPE-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-RANGE-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-FORMATTING
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-COLOR-PROVIDER
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-LINK
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-LENS
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-ACTION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-SYMBOL
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-HIGHLIGHT
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-REFERENCES
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-IMPLEMENTATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-DEFINITION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DEFINITION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-DECLARATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SIGNATURE-HELP
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-HOVER
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-COMPLETION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION
           :TEXT-DOCUMENT-CLIENT-CAPABILITIES
           :INITIALIZE-PARAMS-WORKSPACE-FOLDERS
           :INITIALIZE-PARAMS-TRACE
           :INITIALIZE-PARAMS-CAPABILITIES
           :INITIALIZE-PARAMS-INITIALIZATION-OPTIONS
           :INITIALIZE-PARAMS-ROOT-URI
           :INITIALIZE-PARAMS-ROOT-PATH
           :INITIALIZE-PARAMS-LOCALE
           :INITIALIZE-PARAMS-CLIENT-INFO
           :INITIALIZE-PARAMS-PROCESS-ID
           :INITIALIZE-PARAMS
           :UNREGISTRATION-PARAMS-UNREGISTERATIONS
           :UNREGISTRATION-PARAMS
           :UNREGISTRATION-METHOD
           :UNREGISTRATION-ID
           :UNREGISTRATION
           :TEXT-DOCUMENT-REGISTRATION-OPTIONS-DOCUMENT-SELECTOR
           :TEXT-DOCUMENT-REGISTRATION-OPTIONS
           :STATIC-REGISTRATION-OPTIONS-ID
           :STATIC-REGISTRATION-OPTIONS
           :REGISTRATION-PARAMS-REGISTRATIONS
           :REGISTRATION-PARAMS
           :REGISTRATION-REGISTER-OPTIONS
           :REGISTRATION-METHOD
           :REGISTRATION-ID
           :REGISTRATION))
(IN-PACKAGE :LEM-LSP-UTILS/PROTOCOL-3-17)

(CL-PACKAGE-LOCKS:LOCK-PACKAGE :LEM-LSP-UTILS/PROTOCOL-3-17)

(COMMON-LISP:DEFCLASS REGISTRATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The id used to register the request. The id can be used to deregister
* the request again."
                        :TYPE COMMON-LISP:STRING :READER REGISTRATION-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method / capability to register for."
                        :TYPE COMMON-LISP:STRING :READER REGISTRATION-METHOD)
                       (REGISTER-OPTIONS? :INITARG :REGISTER-OPTIONS :DOCUMENTATION "*
* Options necessary for the registration."
                        :TYPE LSP-ANY :READER REGISTRATION-REGISTER-OPTIONS)))

(COMMON-LISP:DEFCLASS REGISTRATION-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REGISTRATIONS :INITARG :REGISTRATIONS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY REGISTRATION) :READER
                        REGISTRATION-PARAMS-REGISTRATIONS)))

(COMMON-LISP:DEFCLASS STATIC-REGISTRATION-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ID? :INITARG :ID :DOCUMENTATION "*
* The id used to register the request. The id can be used to deregister
* the request again. See also Registration#id."
                        :TYPE COMMON-LISP:STRING :READER STATIC-REGISTRATION-OPTIONS-ID)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-REGISTRATION-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DOCUMENT-SELECTOR :INITARG :DOCUMENT-SELECTOR :DOCUMENTATION "*
* A document selector to identify the scope of the registration. If set to
* null the document selector provided on the client side will be used."
                        :TYPE
                        (COMMON-LISP:OR DOCUMENT-SELECTOR
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER TEXT-DOCUMENT-REGISTRATION-OPTIONS-DOCUMENT-SELECTOR)))

(COMMON-LISP:DEFCLASS UNREGISTRATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The id used to unregister the request or notification. Usually an id
* provided during the register request."
                        :TYPE COMMON-LISP:STRING :READER UNREGISTRATION-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method / capability to unregister for."
                        :TYPE COMMON-LISP:STRING :READER UNREGISTRATION-METHOD)))

(COMMON-LISP:DEFCLASS UNREGISTRATION-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((UNREGISTERATIONS :INITARG :UNREGISTERATIONS :DOCUMENTATION
                        "This should correctly be named `unregistrations`. However changing this
 is a breaking change and needs to wait until we deliver a 4.x version
 of the specification."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY UNREGISTRATION) :READER
                        UNREGISTRATION-PARAMS-UNREGISTERATIONS)))

(COMMON-LISP:DEFCLASS INITIALIZE-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((PROCESS-ID :INITARG :PROCESS-ID :DOCUMENTATION "*
* The process Id of the parent process that started the server. Is null if
* the process has not been started by another process. If the parent
* process is not alive then the server should exit (see exit notification)
* its process."
                        :TYPE
                        (COMMON-LISP:OR INTEGER
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-PROCESS-ID)
                       (CLIENT-INFO? :INITARG :CLIENT-INFO :DOCUMENTATION "*
* Information about the client
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("name" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                         ("version" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
                        :READER INITIALIZE-PARAMS-CLIENT-INFO)
                       (LOCALE? :INITARG :LOCALE :DOCUMENTATION "*
* The locale the client is currently showing the user interface
* in. This must not necessarily be the locale of the operating
* system.
*
* Uses IETF language tags as the value's syntax
* (See https://en.wikipedia.org/wiki/IETF_language_tag)
*
* @since 3.16.0"
                        :TYPE COMMON-LISP:STRING :READER INITIALIZE-PARAMS-LOCALE)
                       (ROOT-PATH? :INITARG :ROOT-PATH :DOCUMENTATION "*
* The rootPath of the workspace. Is null
* if no folder is open.
*
* @deprecated in favour of `rootUri`."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-ROOT-PATH)
                       (ROOT-URI :INITARG :ROOT-URI :DOCUMENTATION "*
* The rootUri of the workspace. Is null if no
* folder is open. If both `rootPath` and `rootUri` are set
* `rootUri` wins.
*
* @deprecated in favour of `workspaceFolders`"
                        :TYPE
                        (COMMON-LISP:OR DOCUMENT-URI
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-ROOT-URI)
                       (INITIALIZATION-OPTIONS? :INITARG :INITIALIZATION-OPTIONS :DOCUMENTATION "*
* User provided initialization options."
                        :TYPE LSP-ANY :READER INITIALIZE-PARAMS-INITIALIZATION-OPTIONS)
                       (CAPABILITIES :INITARG :CAPABILITIES :DOCUMENTATION "*
* The capabilities provided by the client (editor or tool)"
                        :TYPE CLIENT-CAPABILITIES :READER INITIALIZE-PARAMS-CAPABILITIES)
                       (TRACE? :INITARG :TRACE :DOCUMENTATION "*
* The initial trace setting. If omitted trace is disabled ('off')."
                        :TYPE TRACE-VALUE :READER INITIALIZE-PARAMS-TRACE)
                       (WORKSPACE-FOLDERS? :INITARG :WORKSPACE-FOLDERS :DOCUMENTATION "*
* The workspace folders configured in the client when the server starts.
* This property is only available if the client supports workspace folders.
* It can be `null` if the client supports workspace folders but none are
* configured.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER)
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER INITIALIZE-PARAMS-WORKSPACE-FOLDERS)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SYNCHRONIZATION? :INITARG :SYNCHRONIZATION :DOCUMENTATION "" :TYPE
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION)
                       (COMPLETION? :INITARG :COMPLETION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/completion` request."
                        :TYPE COMPLETION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-COMPLETION)
                       (HOVER? :INITARG :HOVER :DOCUMENTATION "*
* Capabilities specific to the `textDocument/hover` request."
                        :TYPE HOVER-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-HOVER)
                       (SIGNATURE-HELP? :INITARG :SIGNATURE-HELP :DOCUMENTATION "*
* Capabilities specific to the `textDocument/signatureHelp` request."
                        :TYPE SIGNATURE-HELP-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SIGNATURE-HELP)
                       (DECLARATION? :INITARG :DECLARATION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/declaration` request.
*
* @since 3.14.0"
                        :TYPE DECLARATION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DECLARATION)
                       (DEFINITION? :INITARG :DEFINITION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/definition` request."
                        :TYPE DEFINITION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DEFINITION)
                       (TYPE-DEFINITION? :INITARG :TYPE-DEFINITION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/typeDefinition` request.
*
* @since 3.6.0"
                        :TYPE TYPE-DEFINITION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-DEFINITION)
                       (IMPLEMENTATION? :INITARG :IMPLEMENTATION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/implementation` request.
*
* @since 3.6.0"
                        :TYPE IMPLEMENTATION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-IMPLEMENTATION)
                       (REFERENCES? :INITARG :REFERENCES :DOCUMENTATION "*
* Capabilities specific to the `textDocument/references` request."
                        :TYPE REFERENCE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-REFERENCES)
                       (DOCUMENT-HIGHLIGHT? :INITARG :DOCUMENT-HIGHLIGHT :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentHighlight` request."
                        :TYPE DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-HIGHLIGHT)
                       (DOCUMENT-SYMBOL? :INITARG :DOCUMENT-SYMBOL :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentSymbol` request."
                        :TYPE DOCUMENT-SYMBOL-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-SYMBOL)
                       (CODE-ACTION? :INITARG :CODE-ACTION :DOCUMENTATION "*
* Capabilities specific to the `textDocument/codeAction` request."
                        :TYPE CODE-ACTION-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-ACTION)
                       (CODE-LENS? :INITARG :CODE-LENS :DOCUMENTATION "*
* Capabilities specific to the `textDocument/codeLens` request."
                        :TYPE CODE-LENS-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-CODE-LENS)
                       (DOCUMENT-LINK? :INITARG :DOCUMENT-LINK :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentLink` request."
                        :TYPE DOCUMENT-LINK-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DOCUMENT-LINK)
                       (COLOR-PROVIDER? :INITARG :COLOR-PROVIDER :DOCUMENTATION "*
* Capabilities specific to the `textDocument/documentColor` and the
* `textDocument/colorPresentation` request.
*
* @since 3.6.0"
                        :TYPE DOCUMENT-COLOR-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-COLOR-PROVIDER)
                       (FORMATTING? :INITARG :FORMATTING :DOCUMENTATION "*
* Capabilities specific to the `textDocument/formatting` request."
                        :TYPE DOCUMENT-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-FORMATTING)
                       (RANGE-FORMATTING? :INITARG :RANGE-FORMATTING :DOCUMENTATION "*
* Capabilities specific to the `textDocument/rangeFormatting` request."
                        :TYPE DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-RANGE-FORMATTING)
                       (ON-TYPE-FORMATTING? :INITARG :ON-TYPE-FORMATTING :DOCUMENTATION "* request.
* Capabilities specific to the `textDocument/onTypeFormatting` request."
                        :TYPE DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-ON-TYPE-FORMATTING)
                       (RENAME? :INITARG :RENAME :DOCUMENTATION "*
* Capabilities specific to the `textDocument/rename` request."
                        :TYPE RENAME-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-RENAME)
                       (PUBLISH-DIAGNOSTICS? :INITARG :PUBLISH-DIAGNOSTICS :DOCUMENTATION "*
* Capabilities specific to the `textDocument/publishDiagnostics`
* notification."
                        :TYPE PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-PUBLISH-DIAGNOSTICS)
                       (FOLDING-RANGE? :INITARG :FOLDING-RANGE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/foldingRange` request.
*
* @since 3.10.0"
                        :TYPE FOLDING-RANGE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-FOLDING-RANGE)
                       (SELECTION-RANGE? :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/selectionRange` request.
*
* @since 3.15.0"
                        :TYPE SELECTION-RANGE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SELECTION-RANGE)
                       (LINKED-EDITING-RANGE? :INITARG :LINKED-EDITING-RANGE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/linkedEditingRange` request.
*
* @since 3.16.0"
                        :TYPE LINKED-EDITING-RANGE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-LINKED-EDITING-RANGE)
                       (CALL-HIERARCHY? :INITARG :CALL-HIERARCHY :DOCUMENTATION "*
* Capabilities specific to the various call hierarchy requests.
*
* @since 3.16.0"
                        :TYPE CALL-HIERARCHY-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-CALL-HIERARCHY)
                       (SEMANTIC-TOKENS? :INITARG :SEMANTIC-TOKENS :DOCUMENTATION "*
* Capabilities specific to the various semantic token requests.
*
* @since 3.16.0"
                        :TYPE SEMANTIC-TOKENS-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-SEMANTIC-TOKENS)
                       (MONIKER? :INITARG :MONIKER :DOCUMENTATION "*
* Capabilities specific to the `textDocument/moniker` request.
*
* @since 3.16.0"
                        :TYPE MONIKER-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-MONIKER)
                       (TYPE-HIERARCHY? :INITARG :TYPE-HIERARCHY :DOCUMENTATION "*
* Capabilities specific to the various type hierarchy requests.
*
* @since 3.17.0"
                        :TYPE TYPE-HIERARCHY-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-TYPE-HIERARCHY)
                       (INLINE-VALUE? :INITARG :INLINE-VALUE :DOCUMENTATION "*
* Capabilities specific to the `textDocument/inlineValue` request.
*
* @since 3.17.0"
                        :TYPE INLINE-VALUE-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-INLINE-VALUE)
                       (INLAY-HINT? :INITARG :INLAY-HINT :DOCUMENTATION "*
* Capabilities specific to the `textDocument/inlayHint` request.
*
* @since 3.17.0"
                        :TYPE INLAY-HINT-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-INLAY-HINT)
                       (DIAGNOSTIC? :INITARG :DIAGNOSTIC :DOCUMENTATION "*
* Capabilities specific to the diagnostic pull model.
*
* @since 3.17.0"
                        :TYPE DIAGNOSTIC-CLIENT-CAPABILITIES :READER
                        TEXT-DOCUMENT-CLIENT-CAPABILITIES-DIAGNOSTIC)))

(COMMON-LISP:DEFCLASS NOTEBOOK-DOCUMENT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SYNCHRONIZATION :INITARG :SYNCHRONIZATION :DOCUMENTATION "*
* Capabilities specific to notebook document synchronization
*
* @since 3.17.0"
                        :TYPE NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES :READER
                        NOTEBOOK-DOCUMENT-CLIENT-CAPABILITIES-SYNCHRONIZATION)))

(COMMON-LISP:DEFCLASS CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((WORKSPACE? :INITARG :WORKSPACE :DOCUMENTATION "*
* Workspace specific client capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("applyEdit" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("workspaceEdit" :TYPE WORKSPACE-EDIT-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("didChangeConfiguration" :TYPE
                          DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES :OPTIONAL-P COMMON-LISP:T)
                         ("didChangeWatchedFiles" :TYPE
                          DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES :OPTIONAL-P COMMON-LISP:T)
                         ("symbol" :TYPE WORKSPACE-SYMBOL-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("executeCommand" :TYPE EXECUTE-COMMAND-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("workspaceFolders" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("configuration" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("semanticTokens" :TYPE SEMANTIC-TOKENS-WORKSPACE-CLIENT-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("codeLens" :TYPE CODE-LENS-WORKSPACE-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("fileOperations" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("dynamicRegistration" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("didCreate" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willCreate" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("didRename" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willRename" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("didDelete" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willDelete" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("inlineValue" :TYPE INLINE-VALUE-WORKSPACE-CLIENT-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("inlayHint" :TYPE INLAY-HINT-WORKSPACE-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("diagnostics" :TYPE DIAGNOSTIC-WORKSPACE-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER CLIENT-CAPABILITIES-WORKSPACE)
                       (TEXT-DOCUMENT? :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* Text document specific client capabilities."
                        :TYPE TEXT-DOCUMENT-CLIENT-CAPABILITIES :READER
                        CLIENT-CAPABILITIES-TEXT-DOCUMENT)
                       (NOTEBOOK-DOCUMENT? :INITARG :NOTEBOOK-DOCUMENT :DOCUMENTATION "*
* Capabilities specific to the notebook document support.
*
* @since 3.17.0"
                        :TYPE NOTEBOOK-DOCUMENT-CLIENT-CAPABILITIES :READER
                        CLIENT-CAPABILITIES-NOTEBOOK-DOCUMENT)
                       (WINDOW? :INITARG :WINDOW :DOCUMENTATION "*
* Window specific client capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("workDoneProgress" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("showMessage" :TYPE SHOW-MESSAGE-REQUEST-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T)
                         ("showDocument" :TYPE SHOW-DOCUMENT-CLIENT-CAPABILITIES :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER CLIENT-CAPABILITIES-WINDOW)
                       (GENERAL? :INITARG :GENERAL :DOCUMENTATION "*
* General client capabilities.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("staleRequestSupport" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("cancel" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:NIL)
                           ("retryOnContentModified" :TYPE
                            (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :OPTIONAL-P
                            COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("regularExpressions" :TYPE REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("markdown" :TYPE MARKDOWN-CLIENT-CAPABILITIES :OPTIONAL-P COMMON-LISP:T)
                         ("positionEncodings" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-ARRAY POSITION-ENCODING-KIND) :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER CLIENT-CAPABILITIES-GENERAL)
                       (EXPERIMENTAL? :INITARG :EXPERIMENTAL :DOCUMENTATION "*
* Experimental client capabilities."
                        :TYPE LSP-ANY :READER CLIENT-CAPABILITIES-EXPERIMENTAL)))

(COMMON-LISP:DEFCLASS INITIALIZE-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((CAPABILITIES :INITARG :CAPABILITIES :DOCUMENTATION "*
* The capabilities the language server provides."
                        :TYPE SERVER-CAPABILITIES :READER INITIALIZE-RESULT-CAPABILITIES)
                       (SERVER-INFO? :INITARG :SERVER-INFO :DOCUMENTATION "*
* Information about the server.
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("name" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                         ("version" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
                        :READER INITIALIZE-RESULT-SERVER-INFO)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INITIALIZE-ERROR-CODES () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INITIALIZE-ERROR-CODES.UNKNOWN-PROTOCOL-VERSION 1))

(COMMON-LISP:DEFTYPE INITIALIZE-ERROR-CODES () '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1))

(COMMON-LISP:DEFCLASS INITIALIZE-ERROR (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RETRY :INITARG :RETRY :DOCUMENTATION "*
* Indicates whether the client execute the following retry logic:
* (1) show the message provided by the ResponseError to the user
* (2) user selects retry or cancel
* (3) if user selected retry the initialize method is sent again."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER INITIALIZE-ERROR-RETRY)))

(COMMON-LISP:DEFCLASS SERVER-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((POSITION-ENCODING? :INITARG :POSITION-ENCODING :DOCUMENTATION "*
* The position encoding the server picked from the encodings offered
* by the client via the client capability `general.positionEncodings`.
*
* If the client didn't provide any position encodings the only valid
* value that a server can return is 'utf-16'.
*
* If omitted it defaults to 'utf-16'.
*
* @since 3.17.0"
                        :TYPE POSITION-ENCODING-KIND :READER SERVER-CAPABILITIES-POSITION-ENCODING)
                       (TEXT-DOCUMENT-SYNC? :INITARG :TEXT-DOCUMENT-SYNC :DOCUMENTATION "*
* Defines how text documents are synced. Is either a detailed structure
* defining each notification or for backwards compatibility the
* TextDocumentSyncKind number. If omitted it defaults to
* `TextDocumentSyncKind.None`."
                        :TYPE (COMMON-LISP:OR TEXT-DOCUMENT-SYNC-OPTIONS TEXT-DOCUMENT-SYNC-KIND)
                        :READER SERVER-CAPABILITIES-TEXT-DOCUMENT-SYNC)
                       (NOTEBOOK-DOCUMENT-SYNC? :INITARG :NOTEBOOK-DOCUMENT-SYNC :DOCUMENTATION "*
* Defines how notebook documents are synced.
*
* @since 3.17.0"
                        :TYPE
                        (COMMON-LISP:OR NOTEBOOK-DOCUMENT-SYNC-OPTIONS
                                        NOTEBOOK-DOCUMENT-SYNC-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-NOTEBOOK-DOCUMENT-SYNC)
                       (COMPLETION-PROVIDER? :INITARG :COMPLETION-PROVIDER :DOCUMENTATION "*
* The server provides completion support."
                        :TYPE COMPLETION-OPTIONS :READER SERVER-CAPABILITIES-COMPLETION-PROVIDER)
                       (HOVER-PROVIDER? :INITARG :HOVER-PROVIDER :DOCUMENTATION "*
* The server provides hover support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN HOVER-OPTIONS) :READER
                        SERVER-CAPABILITIES-HOVER-PROVIDER)
                       (SIGNATURE-HELP-PROVIDER? :INITARG :SIGNATURE-HELP-PROVIDER :DOCUMENTATION "*
* The server provides signature help support."
                        :TYPE SIGNATURE-HELP-OPTIONS :READER
                        SERVER-CAPABILITIES-SIGNATURE-HELP-PROVIDER)
                       (DECLARATION-PROVIDER? :INITARG :DECLARATION-PROVIDER :DOCUMENTATION "*
* The server provides go to declaration support.
*
* @since 3.14.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DECLARATION-OPTIONS
                                        DECLARATION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-DECLARATION-PROVIDER)
                       (DEFINITION-PROVIDER? :INITARG :DEFINITION-PROVIDER :DOCUMENTATION "*
* The server provides goto definition support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DEFINITION-OPTIONS)
                        :READER SERVER-CAPABILITIES-DEFINITION-PROVIDER)
                       (TYPE-DEFINITION-PROVIDER? :INITARG :TYPE-DEFINITION-PROVIDER :DOCUMENTATION
                        "*
* The server provides goto type definition support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN TYPE-DEFINITION-OPTIONS
                                        TYPE-DEFINITION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-TYPE-DEFINITION-PROVIDER)
                       (IMPLEMENTATION-PROVIDER? :INITARG :IMPLEMENTATION-PROVIDER :DOCUMENTATION "*
* The server provides goto implementation support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN IMPLEMENTATION-OPTIONS
                                        IMPLEMENTATION-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-IMPLEMENTATION-PROVIDER)
                       (REFERENCES-PROVIDER? :INITARG :REFERENCES-PROVIDER :DOCUMENTATION "*
* The server provides find references support."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN REFERENCE-OPTIONS)
                        :READER SERVER-CAPABILITIES-REFERENCES-PROVIDER)
                       (DOCUMENT-HIGHLIGHT-PROVIDER? :INITARG :DOCUMENT-HIGHLIGHT-PROVIDER
                        :DOCUMENTATION "*
* The server provides document highlight support."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-HIGHLIGHT-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-HIGHLIGHT-PROVIDER)
                       (DOCUMENT-SYMBOL-PROVIDER? :INITARG :DOCUMENT-SYMBOL-PROVIDER :DOCUMENTATION
                        "*
* The server provides document symbol support."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-SYMBOL-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-SYMBOL-PROVIDER)
                       (CODE-ACTION-PROVIDER? :INITARG :CODE-ACTION-PROVIDER :DOCUMENTATION "*
* The server provides code actions. The `CodeActionOptions` return type is
* only valid if the client signals code action literal support via the
* property `textDocument.codeAction.codeActionLiteralSupport`."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN CODE-ACTION-OPTIONS)
                        :READER SERVER-CAPABILITIES-CODE-ACTION-PROVIDER)
                       (CODE-LENS-PROVIDER? :INITARG :CODE-LENS-PROVIDER :DOCUMENTATION "*
* The server provides code lens."
                        :TYPE CODE-LENS-OPTIONS :READER SERVER-CAPABILITIES-CODE-LENS-PROVIDER)
                       (DOCUMENT-LINK-PROVIDER? :INITARG :DOCUMENT-LINK-PROVIDER :DOCUMENTATION "*
* The server provides document link support."
                        :TYPE DOCUMENT-LINK-OPTIONS :READER
                        SERVER-CAPABILITIES-DOCUMENT-LINK-PROVIDER)
                       (COLOR-PROVIDER? :INITARG :COLOR-PROVIDER :DOCUMENTATION "*
* The server provides color provider support.
*
* @since 3.6.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-COLOR-OPTIONS
                                        DOCUMENT-COLOR-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-COLOR-PROVIDER)
                       (DOCUMENT-FORMATTING-PROVIDER? :INITARG :DOCUMENT-FORMATTING-PROVIDER
                        :DOCUMENTATION "*
* The server provides document formatting."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN DOCUMENT-FORMATTING-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-FORMATTING-PROVIDER)
                       (DOCUMENT-RANGE-FORMATTING-PROVIDER? :INITARG
                        :DOCUMENT-RANGE-FORMATTING-PROVIDER :DOCUMENTATION "*
* The server provides document range formatting."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                        DOCUMENT-RANGE-FORMATTING-OPTIONS)
                        :READER SERVER-CAPABILITIES-DOCUMENT-RANGE-FORMATTING-PROVIDER)
                       (DOCUMENT-ON-TYPE-FORMATTING-PROVIDER? :INITARG
                        :DOCUMENT-ON-TYPE-FORMATTING-PROVIDER :DOCUMENTATION "*
* The server provides document formatting on typing."
                        :TYPE DOCUMENT-ON-TYPE-FORMATTING-OPTIONS :READER
                        SERVER-CAPABILITIES-DOCUMENT-ON-TYPE-FORMATTING-PROVIDER)
                       (RENAME-PROVIDER? :INITARG :RENAME-PROVIDER :DOCUMENTATION "*
* The server provides rename support. RenameOptions may only be
* specified if the client states that it supports
* `prepareSupport` in its initial `initialize` request."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN RENAME-OPTIONS) :READER
                        SERVER-CAPABILITIES-RENAME-PROVIDER)
                       (FOLDING-RANGE-PROVIDER? :INITARG :FOLDING-RANGE-PROVIDER :DOCUMENTATION "*
* The server provides folding provider support.
*
* @since 3.10.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN FOLDING-RANGE-OPTIONS
                                        FOLDING-RANGE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-FOLDING-RANGE-PROVIDER)
                       (EXECUTE-COMMAND-PROVIDER? :INITARG :EXECUTE-COMMAND-PROVIDER :DOCUMENTATION
                        "*
* The server provides execute command support."
                        :TYPE EXECUTE-COMMAND-OPTIONS :READER
                        SERVER-CAPABILITIES-EXECUTE-COMMAND-PROVIDER)
                       (SELECTION-RANGE-PROVIDER? :INITARG :SELECTION-RANGE-PROVIDER :DOCUMENTATION
                        "*
* The server provides selection range support.
*
* @since 3.15.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN SELECTION-RANGE-OPTIONS
                                        SELECTION-RANGE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-SELECTION-RANGE-PROVIDER)
                       (LINKED-EDITING-RANGE-PROVIDER? :INITARG :LINKED-EDITING-RANGE-PROVIDER
                        :DOCUMENTATION "*
* The server provides linked editing range support.
*
* @since 3.16.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN LINKED-EDITING-RANGE-OPTIONS
                                        LINKED-EDITING-RANGE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-LINKED-EDITING-RANGE-PROVIDER)
                       (CALL-HIERARCHY-PROVIDER? :INITARG :CALL-HIERARCHY-PROVIDER :DOCUMENTATION "*
* The server provides call hierarchy support.
*
* @since 3.16.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN CALL-HIERARCHY-OPTIONS
                                        CALL-HIERARCHY-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-CALL-HIERARCHY-PROVIDER)
                       (SEMANTIC-TOKENS-PROVIDER? :INITARG :SEMANTIC-TOKENS-PROVIDER :DOCUMENTATION
                        "*
* The server provides semantic tokens support.
*
* @since 3.16.0"
                        :TYPE
                        (COMMON-LISP:OR SEMANTIC-TOKENS-OPTIONS
                                        SEMANTIC-TOKENS-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-SEMANTIC-TOKENS-PROVIDER)
                       (MONIKER-PROVIDER? :INITARG :MONIKER-PROVIDER :DOCUMENTATION "*
* Whether server provides moniker support.
*
* @since 3.16.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN MONIKER-OPTIONS
                                        MONIKER-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-MONIKER-PROVIDER)
                       (TYPE-HIERARCHY-PROVIDER? :INITARG :TYPE-HIERARCHY-PROVIDER :DOCUMENTATION "*
* The server provides type hierarchy support.
*
* @since 3.17.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN TYPE-HIERARCHY-OPTIONS
                                        TYPE-HIERARCHY-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-TYPE-HIERARCHY-PROVIDER)
                       (INLINE-VALUE-PROVIDER? :INITARG :INLINE-VALUE-PROVIDER :DOCUMENTATION "*
* The server provides inline values.
*
* @since 3.17.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN INLINE-VALUE-OPTIONS
                                        INLINE-VALUE-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-INLINE-VALUE-PROVIDER)
                       (INLAY-HINT-PROVIDER? :INITARG :INLAY-HINT-PROVIDER :DOCUMENTATION "*
* The server provides inlay hints.
*
* @since 3.17.0"
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN INLAY-HINT-OPTIONS
                                        INLAY-HINT-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-INLAY-HINT-PROVIDER)
                       (DIAGNOSTIC-PROVIDER? :INITARG :DIAGNOSTIC-PROVIDER :DOCUMENTATION "*
* The server has support for pull model diagnostics.
*
* @since 3.17.0"
                        :TYPE (COMMON-LISP:OR DIAGNOSTIC-OPTIONS DIAGNOSTIC-REGISTRATION-OPTIONS)
                        :READER SERVER-CAPABILITIES-DIAGNOSTIC-PROVIDER)
                       (WORKSPACE-SYMBOL-PROVIDER? :INITARG :WORKSPACE-SYMBOL-PROVIDER
                        :DOCUMENTATION "*
* The server provides workspace symbol support."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN WORKSPACE-SYMBOL-OPTIONS)
                        :READER SERVER-CAPABILITIES-WORKSPACE-SYMBOL-PROVIDER)
                       (WORKSPACE? :INITARG :WORKSPACE :DOCUMENTATION "*
* Workspace specific server capabilities"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("workspaceFolders" :TYPE WORKSPACE-FOLDERS-SERVER-CAPABILITIES
                          :OPTIONAL-P COMMON-LISP:T)
                         ("fileOperations" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("didCreate" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willCreate" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T)
                           ("didRename" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willRename" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T)
                           ("didDelete" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T)
                           ("willDelete" :TYPE FILE-OPERATION-REGISTRATION-OPTIONS :OPTIONAL-P
                            COMMON-LISP:T))
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER SERVER-CAPABILITIES-WORKSPACE)
                       (EXPERIMENTAL? :INITARG :EXPERIMENTAL :DOCUMENTATION "*
* Experimental server capabilities."
                        :TYPE LSP-ANY :READER SERVER-CAPABILITIES-EXPERIMENTAL)))

(COMMON-LISP:DEFCLASS INITIALIZED-PARAMS (LEM-LSP-UTILS/JSON:OBJECT) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS LOG-TRACE-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The message to be logged."
                        :TYPE COMMON-LISP:STRING :READER LOG-TRACE-PARAMS-MESSAGE)
                       (VERBOSE? :INITARG :VERBOSE :DOCUMENTATION "*
* Additional information that can be computed if the `trace` configuration
* is set to `'verbose'`"
                        :TYPE COMMON-LISP:STRING :READER LOG-TRACE-PARAMS-VERBOSE)))

(COMMON-LISP:DEFCLASS SET-TRACE-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((VALUE :INITARG :VALUE :DOCUMENTATION "*
* The new value that should be assigned to the trace setting."
                        :TYPE TRACE-VALUE :READER SET-TRACE-PARAMS-VALUE)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new `(TextDocumentRegistrationOptions &
* StaticRegistrationOptions)` return value for the corresponding server
* capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CALL-HIERARCHY-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS CALL-HIERARCHY-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-PREPARE-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this item."
                        :TYPE COMMON-LISP:STRING :READER CALL-HIERARCHY-ITEM-NAME)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this item."
                        :TYPE SYMBOL-KIND :READER CALL-HIERARCHY-ITEM-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this item."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :READER
                        CALL-HIERARCHY-ITEM-TAGS)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* More detail for this item, e.g. the signature of a function."
                        :TYPE COMMON-LISP:STRING :READER CALL-HIERARCHY-ITEM-DETAIL)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The resource identifier of this item."
                        :TYPE DOCUMENT-URI :READER CALL-HIERARCHY-ITEM-URI)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range enclosing this symbol not including leading/trailing whitespace
* but everything else, e.g. comments and code."
                        :TYPE RANGE :READER CALL-HIERARCHY-ITEM-RANGE)
                       (SELECTION-RANGE :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this symbol is being
* picked, e.g. the name of a function. Must be contained by the
* [`range`](#CallHierarchyItem.range)."
                        :TYPE RANGE :READER CALL-HIERARCHY-ITEM-SELECTION-RANGE)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved between a call hierarchy prepare and
* incoming calls or outgoing calls requests."
                        :TYPE UNKNOWN :READER CALL-HIERARCHY-ITEM-DATA)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-INCOMING-CALLS-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((ITEM :INITARG :ITEM :DOCUMENTATION "" :TYPE CALL-HIERARCHY-ITEM :READER
                        CALL-HIERARCHY-INCOMING-CALLS-PARAMS-ITEM)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-INCOMING-CALL (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FROM :INITARG :FROM :DOCUMENTATION "*
* The item that makes the call."
                        :TYPE CALL-HIERARCHY-ITEM :READER CALL-HIERARCHY-INCOMING-CALL-FROM)
                       (FROM-RANGES :INITARG :FROM-RANGES :DOCUMENTATION "*
* The ranges at which the calls appear. This is relative to the caller
* denoted by [`this.from`](#CallHierarchyIncomingCall.from)."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY RANGE) :READER
                        CALL-HIERARCHY-INCOMING-CALL-FROM-RANGES)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-OUTGOING-CALLS-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((ITEM :INITARG :ITEM :DOCUMENTATION "" :TYPE CALL-HIERARCHY-ITEM :READER
                        CALL-HIERARCHY-OUTGOING-CALLS-PARAMS-ITEM)))

(COMMON-LISP:DEFCLASS CALL-HIERARCHY-OUTGOING-CALL (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TO :INITARG :TO :DOCUMENTATION "*
* The item that is called."
                        :TYPE CALL-HIERARCHY-ITEM :READER CALL-HIERARCHY-OUTGOING-CALL-TO)
                       (FROM-RANGES :INITARG :FROM-RANGES :DOCUMENTATION "*
* The range at which this item is called. This is the range relative to
* the caller, e.g the item passed to `callHierarchy/outgoingCalls` request."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY RANGE) :READER
                        CALL-HIERARCHY-OUTGOING-CALL-FROM-RANGES)))

(COMMON-LISP:DEFCLASS CODE-ACTION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether code action supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (CODE-ACTION-LITERAL-SUPPORT? :INITARG :CODE-ACTION-LITERAL-SUPPORT
                        :DOCUMENTATION "*
* The client supports code action literals as a valid
* response of the `textDocument/codeAction` request.
*
* @since 3.8.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("codeActionKind" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:NIL))
                        :READER CODE-ACTION-CLIENT-CAPABILITIES-CODE-ACTION-LITERAL-SUPPORT)
                       (IS-PREFERRED-SUPPORT? :INITARG :IS-PREFERRED-SUPPORT :DOCUMENTATION "*
* Whether code action supports the `isPreferred` property.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-IS-PREFERRED-SUPPORT)
                       (DISABLED-SUPPORT? :INITARG :DISABLED-SUPPORT :DOCUMENTATION "*
* Whether code action supports the `disabled` property.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-DISABLED-SUPPORT)
                       (DATA-SUPPORT? :INITARG :DATA-SUPPORT :DOCUMENTATION "*
* Whether code action supports the `data` property which is
* preserved between a `textDocument/codeAction` and a
* `codeAction/resolve` request.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-DATA-SUPPORT)
                       (RESOLVE-SUPPORT? :INITARG :RESOLVE-SUPPORT :DOCUMENTATION "*
* Whether the client supports resolving additional code action
* properties via a separate `codeAction/resolve` request.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("properties" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                          :OPTIONAL-P COMMON-LISP:NIL))
                        :READER CODE-ACTION-CLIENT-CAPABILITIES-RESOLVE-SUPPORT)
                       (HONORS-CHANGE-ANNOTATIONS? :INITARG :HONORS-CHANGE-ANNOTATIONS
                        :DOCUMENTATION "*
* Whether the client honors the change annotations in
* text edits and resource operations returned via the
* `CodeAction#edit` property by for example presenting
* the workspace edit in the user interface and asking
* for confirmation.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-CLIENT-CAPABILITIES-HONORS-CHANGE-ANNOTATIONS)))

(COMMON-LISP:DEFCLASS CODE-ACTION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((CODE-ACTION-KINDS? :INITARG :CODE-ACTION-KINDS :DOCUMENTATION "*
* CodeActionKinds that this server may return.
*
* The list of kinds may be generic, such as `CodeActionKind.Refactor`,
* or the server may list out every specific kind they provide."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND) :READER
                        CODE-ACTION-OPTIONS-CODE-ACTION-KINDS)
                       (RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* The server provides support to resolve additional
* information for a code action.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-ACTION-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS CODE-ACTION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS CODE-ACTION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CODE-ACTION-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document in which the command was invoked."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER CODE-ACTION-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range for which the command was invoked."
                        :TYPE RANGE :READER CODE-ACTION-PARAMS-RANGE)
                       (CONTEXT :INITARG :CONTEXT :DOCUMENTATION "*
* Context carrying additional information."
                        :TYPE CODE-ACTION-CONTEXT :READER CODE-ACTION-PARAMS-CONTEXT)))

(COMMON-LISP:DEFTYPE CODE-ACTION-KIND () 'COMMON-LISP:STRING)

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE CODE-ACTION-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.EMPTY "")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.QUICK-FIX "quickfix")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR "refactor")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-EXTRACT "refactor.extract")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-INLINE "refactor.inline")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.REFACTOR-REWRITE "refactor.rewrite")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.SOURCE "source")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.SOURCE-ORGANIZE-IMPORTS "source.organizeImports")
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-KIND.SOURCE-FIX-ALL "source.fixAll"))

(COMMON-LISP:DEFCLASS CODE-ACTION-CONTEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DIAGNOSTICS :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* An array of diagnostics known on the client side overlapping the range
* provided to the `textDocument/codeAction` request. They are provided so
* that the server knows which errors are currently presented to the user
* for the given range. There is no guarantee that these accurately reflect
* the error state of the resource. The primary parameter
* to compute code actions is the provided range."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        CODE-ACTION-CONTEXT-DIAGNOSTICS)
                       (ONLY? :INITARG :ONLY :DOCUMENTATION "*
* Requested kind of actions to return.
*
* Actions not of this kind are filtered out by the client before being
* shown. So servers can omit computing them."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY CODE-ACTION-KIND) :READER
                        CODE-ACTION-CONTEXT-ONLY)
                       (TRIGGER-KIND? :INITARG :TRIGGER-KIND :DOCUMENTATION "*
* The reason why code actions were requested.
*
* @since 3.17.0"
                        :TYPE CODE-ACTION-TRIGGER-KIND :READER CODE-ACTION-CONTEXT-TRIGGER-KIND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE CODE-ACTION-TRIGGER-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-TRIGGER-KIND.INVOKED 1)
 (COMMON-LISP:DEFPARAMETER CODE-ACTION-TRIGGER-KIND.AUTOMATIC 2))

(COMMON-LISP:DEFTYPE CODE-ACTION-TRIGGER-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS CODE-ACTION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* A short, human-readable, title for this code action."
                        :TYPE COMMON-LISP:STRING :READER CODE-ACTION-TITLE)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of the code action.
*
* Used to filter code actions."
                        :TYPE CODE-ACTION-KIND :READER CODE-ACTION-KIND)
                       (DIAGNOSTICS? :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* The diagnostics that this code action resolves."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        CODE-ACTION-DIAGNOSTICS)
                       (IS-PREFERRED? :INITARG :IS-PREFERRED :DOCUMENTATION "*
* Marks this as a preferred action. Preferred actions are used by the
* `auto fix` command and can be targeted by keybindings.
*
* A quick fix should be marked preferred if it properly addresses the
* underlying error. A refactoring should be marked preferred if it is the
* most reasonable choice of actions to take.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER CODE-ACTION-IS-PREFERRED)
                       (DISABLED? :INITARG :DISABLED :DOCUMENTATION "*
* Marks that the code action cannot currently be applied.
*
* Clients should follow the following guidelines regarding disabled code
* actions:
*
* - Disabled code actions are not shown in automatic lightbulbs code
*   action menus.
*
* - Disabled actions are shown as faded out in the code action menu when
*   the user request a more specific type of code action, such as
*   refactorings.
*
* - If the user has a keybinding that auto applies a code action and only
*   a disabled code actions are returned, the client should show the user
*   an error message with `reason` in the editor.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("reason" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))
                        :READER CODE-ACTION-DISABLED)
                       (EDIT? :INITARG :EDIT :DOCUMENTATION "*
* The workspace edit this code action performs."
                        :TYPE WORKSPACE-EDIT :READER CODE-ACTION-EDIT)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* A command this code action executes. If a code action
* provides an edit and a command, first the edit is
* executed and then the command."
                        :TYPE COMMAND :READER CODE-ACTION-COMMAND)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a code action between
* a `textDocument/codeAction` and a `codeAction/resolve` request.
*
* @since 3.16.0"
                        :TYPE LSP-ANY :READER CODE-ACTION-DATA)))

(COMMON-LISP:DEFCLASS CODE-LENS-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether code lens supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-LENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS CODE-LENS-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* Code lens has a resolve provider as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-LENS-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS CODE-LENS-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS CODE-LENS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS CODE-LENS-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to request code lens for."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER CODE-LENS-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS CODE-LENS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range in which this code lens is valid. Should only span a single
* line."
                        :TYPE RANGE :READER CODE-LENS-RANGE)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* The command this code lens represents."
                        :TYPE COMMAND :READER CODE-LENS-COMMAND)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a code lens item between
* a code lens and a code lens resolve request."
                        :TYPE LSP-ANY :READER CODE-LENS-DATA)))

(COMMON-LISP:DEFCLASS CODE-LENS-WORKSPACE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REFRESH-SUPPORT? :INITARG :REFRESH-SUPPORT :DOCUMENTATION "*
* Whether the client implementation supports a refresh request sent from the
* server to the client.
*
* Note that this event is global and will force the client to refresh all
* code lenses currently shown. It should be used with absolute care and is
* useful for situation where a server for example detect a project wide
* change that requires such a calculation."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CODE-LENS-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT)))

(COMMON-LISP:DEFCLASS COLOR-PRESENTATION-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        COLOR-PRESENTATION-PARAMS-TEXT-DOCUMENT)
                       (COLOR :INITARG :COLOR :DOCUMENTATION "*
* The color information to request presentations for."
                        :TYPE COLOR :READER COLOR-PRESENTATION-PARAMS-COLOR)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range where the color would be inserted. Serves as a context."
                        :TYPE RANGE :READER COLOR-PRESENTATION-PARAMS-RANGE)))

(COMMON-LISP:DEFCLASS COLOR-PRESENTATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this color presentation. It will be shown on the color
* picker header. By default this is also the text that is inserted when
* selecting this color presentation."
                        :TYPE COMMON-LISP:STRING :READER COLOR-PRESENTATION-LABEL)
                       (TEXT-EDIT? :INITARG :TEXT-EDIT :DOCUMENTATION "*
* An [edit](#TextEdit) which is applied to a document when selecting
* this presentation for the color. When `falsy` the
* [label](#ColorPresentation.label) is used."
                        :TYPE TEXT-EDIT :READER COLOR-PRESENTATION-TEXT-EDIT)
                       (ADDITIONAL-TEXT-EDITS? :INITARG :ADDITIONAL-TEXT-EDITS :DOCUMENTATION "*
* An optional array of additional [text edits](#TextEdit) that are applied
* when selecting this color presentation. Edits must not overlap with the
* main [edit](#ColorPresentation.textEdit) nor with themselves."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        COLOR-PRESENTATION-ADDITIONAL-TEXT-EDITS)))

(COMMON-LISP:DEFCLASS COMPLETION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether completion supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (COMPLETION-ITEM? :INITARG :COMPLETION-ITEM :DOCUMENTATION "*
* The client supports the following `CompletionItem` specific
* capabilities."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("snippetSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("commitCharactersSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("documentationFormat" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND)
                          :OPTIONAL-P COMMON-LISP:T)
                         ("deprecatedSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("preselectSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("tagSupport" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-TAG)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("insertReplaceSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T)
                         ("resolveSupport" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("properties" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("insertTextModeSupport" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY INSERT-TEXT-MODE)
                            :OPTIONAL-P COMMON-LISP:NIL))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("labelDetailsSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM)
                       (COMPLETION-ITEM-KIND? :INITARG :COMPLETION-ITEM-KIND :DOCUMENTATION ""
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-KIND)
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER COMPLETION-CLIENT-CAPABILITIES-COMPLETION-ITEM-KIND)
                       (CONTEXT-SUPPORT? :INITARG :CONTEXT-SUPPORT :DOCUMENTATION "*
* The client supports to send additional context information for a
* `textDocument/completion` request."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-CLIENT-CAPABILITIES-CONTEXT-SUPPORT)
                       (INSERT-TEXT-MODE? :INITARG :INSERT-TEXT-MODE :DOCUMENTATION "*
* The client's default when the completion item doesn't provide a
* `insertTextMode` property.
*
* @since 3.17.0"
                        :TYPE INSERT-TEXT-MODE :READER
                        COMPLETION-CLIENT-CAPABILITIES-INSERT-TEXT-MODE)
                       (COMPLETION-LIST? :INITARG :COMPLETION-LIST :DOCUMENTATION "*
* The client supports the following `CompletionList` specific
* capabilities.
*
* @since 3.17.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("itemDefaults" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER COMPLETION-CLIENT-CAPABILITIES-COMPLETION-LIST)))

(COMMON-LISP:DEFCLASS COMPLETION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((TRIGGER-CHARACTERS? :INITARG :TRIGGER-CHARACTERS :DOCUMENTATION "*
* The additional characters, beyond the defaults provided by the client (typically
* [a-zA-Z]), that should automatically trigger a completion request. For example
* `.` in JavaScript represents the beginning of an object property or method and is
* thus a good candidate for triggering a completion request.
*
* Most tools trigger a completion request automatically without explicitly
* requesting it using a keyboard shortcut (e.g. Ctrl+Space). Typically they
* do so when the user starts to type an identifier. For example if the user
* types `c` in a JavaScript file code complete will automatically pop up
* present `console` besides others as a completion item. Characters that
* make up identifiers don't need to be listed here."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-OPTIONS-TRIGGER-CHARACTERS)
                       (ALL-COMMIT-CHARACTERS? :INITARG :ALL-COMMIT-CHARACTERS :DOCUMENTATION "*
* The list of all possible characters that commit a completion. This field
* can be used if clients don't support individual commit characters per
* completion item. See client capability
* `completion.completionItem.commitCharactersSupport`.
*
* If a server provides both `allCommitCharacters` and commit characters on
* an individual completion item the ones on the completion item win.
*
* @since 3.2.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-OPTIONS-ALL-COMMIT-CHARACTERS)
                       (RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* The server provides support to resolve additional
* information for a completion item."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        COMPLETION-OPTIONS-RESOLVE-PROVIDER)
                       (COMPLETION-ITEM? :INITARG :COMPLETION-ITEM :DOCUMENTATION "*
* The server supports the following `CompletionItem` specific
* capabilities.
*
* @since 3.17.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("labelDetailsSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER COMPLETION-OPTIONS-COMPLETION-ITEM)))

(COMMON-LISP:DEFCLASS COMPLETION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS COMPLETION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS COMPLETION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      ((CONTEXT? :INITARG :CONTEXT :DOCUMENTATION "*
* The completion context. This is only available if the client specifies
* to send this using the client capability
* `completion.contextSupport === true`"
                        :TYPE COMPLETION-CONTEXT :READER COMPLETION-PARAMS-CONTEXT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-TRIGGER-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.INVOKED 1)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.TRIGGER-CHARACTER 2)
 (COMMON-LISP:DEFPARAMETER COMPLETION-TRIGGER-KIND.TRIGGER-FOR-INCOMPLETE-COMPLETIONS 3))

(COMMON-LISP:DEFTYPE COMPLETION-TRIGGER-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS COMPLETION-CONTEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TRIGGER-KIND :INITARG :TRIGGER-KIND :DOCUMENTATION "*
* How the completion was triggered."
                        :TYPE COMPLETION-TRIGGER-KIND :READER COMPLETION-CONTEXT-TRIGGER-KIND)
                       (TRIGGER-CHARACTER? :INITARG :TRIGGER-CHARACTER :DOCUMENTATION "*
* The trigger character (a single character) that has trigger code
* complete. Is undefined if
* `triggerKind !== CompletionTriggerKind.TriggerCharacter`"
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-CONTEXT-TRIGGER-CHARACTER)))

(COMMON-LISP:DEFCLASS COMPLETION-LIST (LEM-LSP-UTILS/JSON:OBJECT)
                      ((IS-INCOMPLETE :INITARG :IS-INCOMPLETE :DOCUMENTATION "*
* This list is not complete. Further typing should result in recomputing
* this list.
*
* Recomputed lists have all their items replaced (not appended) in the
* incomplete completion sessions."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-LIST-IS-INCOMPLETE)
                       (ITEM-DEFAULTS? :INITARG :ITEM-DEFAULTS :DOCUMENTATION "*
* In many cases the items of an actual completion result share the same
* value for properties like `commitCharacters` or the range of a text
* edit. A completion list can therefore define item defaults which will
* be used if a completion item itself doesn't specify the value.
*
* If a completion list specifies a default value and a completion item
* also specifies a corresponding value the one from the item is used.
*
* Servers are only allowed to return default values if the client
* signals support for this via the `completionList.itemDefaults`
* capability.
*
* @since 3.17.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("commitCharacters" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                          :OPTIONAL-P COMMON-LISP:T)
                         ("editRange" :TYPE
                          (COMMON-LISP:OR RANGE
                                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                                           ("insert" :TYPE RANGE :OPTIONAL-P COMMON-LISP:NIL)
                                           ("replace" :TYPE RANGE :OPTIONAL-P COMMON-LISP:NIL)))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("insertTextFormat" :TYPE INSERT-TEXT-FORMAT :OPTIONAL-P COMMON-LISP:T)
                         ("insertTextMode" :TYPE INSERT-TEXT-MODE :OPTIONAL-P COMMON-LISP:T)
                         ("data" :TYPE LSP-ANY :OPTIONAL-P COMMON-LISP:T))
                        :READER COMPLETION-LIST-ITEM-DEFAULTS)
                       (ITEMS :INITARG :ITEMS :DOCUMENTATION "*
* The completion items."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM) :READER
                        COMPLETION-LIST-ITEMS)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INSERT-TEXT-FORMAT () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-FORMAT.PLAIN-TEXT 1)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-FORMAT.SNIPPET 2))

(COMMON-LISP:DEFTYPE INSERT-TEXT-FORMAT ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-ITEM-TAG () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-TAG.DEPRECATED 1))

(COMMON-LISP:DEFTYPE COMPLETION-ITEM-TAG () '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1))

(COMMON-LISP:DEFCLASS INSERT-REPLACE-EDIT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NEW-TEXT :INITARG :NEW-TEXT :DOCUMENTATION "*
* The string to be inserted."
                        :TYPE COMMON-LISP:STRING :READER INSERT-REPLACE-EDIT-NEW-TEXT)
                       (INSERT :INITARG :INSERT :DOCUMENTATION "*
* The range if the insert is requested"
                        :TYPE RANGE :READER INSERT-REPLACE-EDIT-INSERT)
                       (REPLACE :INITARG :REPLACE :DOCUMENTATION "*
* The range if the replace is requested."
                        :TYPE RANGE :READER INSERT-REPLACE-EDIT-REPLACE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INSERT-TEXT-MODE () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-MODE.AS-IS 1)
 (COMMON-LISP:DEFPARAMETER INSERT-TEXT-MODE.ADJUST-INDENTATION 2))

(COMMON-LISP:DEFTYPE INSERT-TEXT-MODE ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS COMPLETION-ITEM-LABEL-DETAILS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* An optional string which is rendered less prominently directly after
* {@link CompletionItem.label label}, without any spacing. Should be
* used for function signatures or type annotations."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-LABEL-DETAILS-DETAIL)
                       (DESCRIPTION? :INITARG :DESCRIPTION :DOCUMENTATION "*
* An optional string which is rendered less prominently after
* {@link CompletionItemLabelDetails.detail}. Should be used for fully qualified
* names or file path."
                        :TYPE COMMON-LISP:STRING :READER
                        COMPLETION-ITEM-LABEL-DETAILS-DESCRIPTION)))

(COMMON-LISP:DEFCLASS COMPLETION-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this completion item.
*
* The label property is also by default the text that
* is inserted when selecting this completion.
*
* If label details are provided the label itself should
* be an unqualified name of the completion item."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-LABEL)
                       (LABEL-DETAILS? :INITARG :LABEL-DETAILS :DOCUMENTATION "*
* Additional details for the label
*
* @since 3.17.0"
                        :TYPE COMPLETION-ITEM-LABEL-DETAILS :READER COMPLETION-ITEM-LABEL-DETAILS)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of this completion item. Based of the kind
* an icon is chosen by the editor. The standardized set
* of available values is defined in `CompletionItemKind`."
                        :TYPE COMPLETION-ITEM-KIND :READER COMPLETION-ITEM-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this completion item.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMPLETION-ITEM-TAG) :READER
                        COMPLETION-ITEM-TAGS)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* A human-readable string with additional information
* about this item, like type or symbol information."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-DETAIL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* A human-readable string that represents a doc-comment."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        COMPLETION-ITEM-DOCUMENTATION)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this item is deprecated.
*
* @deprecated Use `tags` instead if supported."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-ITEM-DEPRECATED)
                       (PRESELECT? :INITARG :PRESELECT :DOCUMENTATION "*
* Select this item when showing.
*
* *Note* that only one completion item can be selected and that the
* tool / client decides which item that is. The rule is that the *first*
* item of those that match best is selected."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER COMPLETION-ITEM-PRESELECT)
                       (SORT-TEXT? :INITARG :SORT-TEXT :DOCUMENTATION "*
* A string that should be used when comparing this item
* with other items. When `falsy` the label is used
* as the sort text for this item."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-SORT-TEXT)
                       (FILTER-TEXT? :INITARG :FILTER-TEXT :DOCUMENTATION "*
* A string that should be used when filtering a set of
* completion items. When `falsy` the label is used as the
* filter text for this item."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-FILTER-TEXT)
                       (INSERT-TEXT? :INITARG :INSERT-TEXT :DOCUMENTATION "*
* A string that should be inserted into a document when selecting
* this completion. When `falsy` the label is used as the insert text
* for this item.
*
* The `insertText` is subject to interpretation by the client side.
* Some tools might not take the string literally. For example
* VS Code when code complete is requested in this example
* `con<cursor position>` and a completion item with an `insertText` of
* `console` is provided it will only insert `sole`. Therefore it is
* recommended to use `textEdit` instead since it avoids additional client
* side interpretation."
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-INSERT-TEXT)
                       (INSERT-TEXT-FORMAT? :INITARG :INSERT-TEXT-FORMAT :DOCUMENTATION "*
* The format of the insert text. The format applies to both the
* `insertText` property and the `newText` property of a provided
* `textEdit`. If omitted defaults to `InsertTextFormat.PlainText`.
*
* Please note that the insertTextFormat doesn't apply to
* `additionalTextEdits`."
                        :TYPE INSERT-TEXT-FORMAT :READER COMPLETION-ITEM-INSERT-TEXT-FORMAT)
                       (INSERT-TEXT-MODE? :INITARG :INSERT-TEXT-MODE :DOCUMENTATION "*
* How whitespace and indentation is handled during completion
* item insertion. If not provided the client's default value depends on
* the `textDocument.completion.insertTextMode` client capability.
*
* @since 3.16.0
* @since 3.17.0 - support for `textDocument.completion.insertTextMode`"
                        :TYPE INSERT-TEXT-MODE :READER COMPLETION-ITEM-INSERT-TEXT-MODE)
                       (TEXT-EDIT? :INITARG :TEXT-EDIT :DOCUMENTATION "*
* An edit which is applied to a document when selecting this completion.
* When an edit is provided the value of `insertText` is ignored.
*
* *Note:* The range of the edit must be a single line range and it must
* contain the position at which completion has been requested.
*
* Most editors support two different operations when accepting a completion
* item. One is to insert a completion text and the other is to replace an
* existing text with a completion text. Since this can usually not be
* predetermined by a server it can report both ranges. Clients need to
* signal support for `InsertReplaceEdit`s via the
* `textDocument.completion.completionItem.insertReplaceSupport` client
* capability property.
*
* *Note 1:* The text edit's range as well as both ranges from an insert
* replace edit must be a [single line] and they must contain the position
* at which completion has been requested.
* *Note 2:* If an `InsertReplaceEdit` is returned the edit's insert range
* must be a prefix of the edit's replace range, that means it must be
* contained and starting at the same position.
*
* @since 3.16.0 additional type `InsertReplaceEdit`"
                        :TYPE (COMMON-LISP:OR TEXT-EDIT INSERT-REPLACE-EDIT) :READER
                        COMPLETION-ITEM-TEXT-EDIT)
                       (TEXT-EDIT-TEXT? :INITARG :TEXT-EDIT-TEXT :DOCUMENTATION "*
* The edit text used if the completion item is part of a CompletionList and
* CompletionList defines an item default for the text edit range.
*
* Clients will only honor this property if they opt into completion list
* item defaults using the capability `completionList.itemDefaults`.
*
* If not provided and a list's default range is provided the label
* property is used as a text.
*
* @since 3.17.0"
                        :TYPE COMMON-LISP:STRING :READER COMPLETION-ITEM-TEXT-EDIT-TEXT)
                       (ADDITIONAL-TEXT-EDITS? :INITARG :ADDITIONAL-TEXT-EDITS :DOCUMENTATION "*
* An optional array of additional text edits that are applied when
* selecting this completion. Edits must not overlap (including the same
* insert position) with the main edit nor with themselves.
*
* Additional text edits should be used to change text unrelated to the
* current cursor position (for example adding an import statement at the
* top of the file if the completion item will insert an unqualified type)."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        COMPLETION-ITEM-ADDITIONAL-TEXT-EDITS)
                       (COMMIT-CHARACTERS? :INITARG :COMMIT-CHARACTERS :DOCUMENTATION "*
* An optional set of characters that when pressed while this completion is
* active will accept it first and then type that character. *Note* that all
* commit characters should have `length=1` and that superfluous characters
* will be ignored."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        COMPLETION-ITEM-COMMIT-CHARACTERS)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* An optional command that is executed *after* inserting this completion.
* *Note* that additional modifications to the current document should be
* described with the additionalTextEdits-property."
                        :TYPE COMMAND :READER COMPLETION-ITEM-COMMAND)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a completion item between
* a completion and a completion resolve request."
                        :TYPE LSP-ANY :READER COMPLETION-ITEM-DATA)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE COMPLETION-ITEM-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.TEXT 1)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.METHOD 2)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FUNCTION 3)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CONSTRUCTOR 4)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FIELD 5)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.VARIABLE 6)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CLASS 7)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.INTERFACE 8)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.MODULE 9)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.PROPERTY 10)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.UNIT 11)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.VALUE 12)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.ENUM 13)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.KEYWORD 14)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.SNIPPET 15)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.COLOR 16)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FILE 17)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.REFERENCE 18)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.FOLDER 19)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.ENUM-MEMBER 20)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.CONSTANT 21)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.STRUCT 22)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.EVENT 23)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.OPERATOR 24)
 (COMMON-LISP:DEFPARAMETER COMPLETION-ITEM-KIND.TYPE-PARAMETER 25))

(COMMON-LISP:DEFTYPE COMPLETION-ITEM-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 4)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 5)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 6)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 7)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 8)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 9)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 10)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 11)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 12)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 13)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 14)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 15)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 16)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 17)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 18)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 19)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 20)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 21)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 22)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 23)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 24)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 25)))

(COMMON-LISP:DEFCLASS DECLARATION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether declaration supports dynamic registration. If this is set to
* `true` the client supports the new `DeclarationRegistrationOptions`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DECLARATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of declaration links."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DECLARATION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS DECLARATION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DECLARATION-REGISTRATION-OPTIONS
                      (DECLARATION-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DECLARATION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether definition supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS DEFINITION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DEFINITION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DEFINITION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document color supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-COLOR-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS STATIC-REGISTRATION-OPTIONS
                       DOCUMENT-COLOR-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-COLOR-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-COLOR-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS COLOR-INFORMATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range in the document where this color appears."
                        :TYPE RANGE :READER COLOR-INFORMATION-RANGE)
                       (COLOR :INITARG :COLOR :DOCUMENTATION "*
* The actual color value for this color range."
                        :TYPE COLOR :READER COLOR-INFORMATION-COLOR)))

(COMMON-LISP:DEFCLASS COLOR (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RED :INITARG :RED :DOCUMENTATION "*
* The red component of this color in the range [0-1]."
                        :TYPE DECIMAL :READER COLOR-RED)
                       (GREEN :INITARG :GREEN :DOCUMENTATION "*
* The green component of this color in the range [0-1]."
                        :TYPE DECIMAL :READER COLOR-GREEN)
                       (BLUE :INITARG :BLUE :DOCUMENTATION "*
* The blue component of this color in the range [0-1]."
                        :TYPE DECIMAL :READER COLOR-BLUE)
                       (ALPHA :INITARG :ALPHA :DOCUMENTATION "*
* The alpha component of this color in the range [0-1]."
                        :TYPE DECIMAL :READER COLOR-ALPHA)))

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document highlight supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-HIGHLIGHT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-HIGHLIGHT-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-HIGHLIGHT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range this highlight applies to."
                        :TYPE RANGE :READER DOCUMENT-HIGHLIGHT-RANGE)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The highlight kind, default is DocumentHighlightKind.Text."
                        :TYPE DOCUMENT-HIGHLIGHT-KIND :READER DOCUMENT-HIGHLIGHT-KIND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DOCUMENT-HIGHLIGHT-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.TEXT 1)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.READ 2)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-HIGHLIGHT-KIND.WRITE 3))

(COMMON-LISP:DEFTYPE DOCUMENT-HIGHLIGHT-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document link supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (TOOLTIP-SUPPORT? :INITARG :TOOLTIP-SUPPORT :DOCUMENTATION "*
* Whether the client supports the `tooltip` property on `DocumentLink`.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-CLIENT-CAPABILITIES-TOOLTIP-SUPPORT)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* Document links have a resolve provider as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-LINK-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-LINK-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-LINK-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to provide document links for."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER DOCUMENT-LINK-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS DOCUMENT-LINK (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range this link applies to."
                        :TYPE RANGE :READER DOCUMENT-LINK-RANGE)
                       (TARGET? :INITARG :TARGET :DOCUMENTATION "*
* The uri this link points to. If missing a resolve request is sent later."
                        :TYPE URI :READER DOCUMENT-LINK-TARGET)
                       (TOOLTIP? :INITARG :TOOLTIP :DOCUMENTATION "*
* The tooltip text when you hover over this link.
*
* If a tooltip is provided, is will be displayed in a string that includes
* instructions on how to trigger the link, such as `{0} (ctrl + click)`.
* The specific instructions vary depending on OS, user settings, and
* localization.
*
* @since 3.15.0"
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-LINK-TOOLTIP)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a document link between a
* DocumentLinkRequest and a DocumentLinkResolveRequest."
                        :TYPE LSP-ANY :READER DOCUMENT-LINK-DATA)))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether document symbol supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SYMBOL-KIND? :INITARG :SYMBOL-KIND :DOCUMENTATION "*
* Specific capabilities for the `SymbolKind` in the
* `textDocument/documentSymbol` request."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-KIND) :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND)
                       (HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT? :INITARG
                        :HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT :DOCUMENTATION "*
* The client supports hierarchical document symbols."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-HIERARCHICAL-DOCUMENT-SYMBOL-SUPPORT)
                       (TAG-SUPPORT? :INITARG :TAG-SUPPORT :DOCUMENTATION "*
* The client supports tags on `SymbolInformation`. Tags are supported on
* `DocumentSymbol` if `hierarchicalDocumentSymbolSupport` is set to true.
* Clients supporting tags have to handle unknown tags gracefully.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :OPTIONAL-P
                          COMMON-LISP:NIL))
                        :READER DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-TAG-SUPPORT)
                       (LABEL-SUPPORT? :INITARG :LABEL-SUPPORT :DOCUMENTATION "*
* The client supports an additional label presented in the UI when
* registering a document symbol provider.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-SYMBOL-CLIENT-CAPABILITIES-LABEL-SUPPORT)))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((LABEL? :INITARG :LABEL :DOCUMENTATION "*
* A human-readable string that is shown when multiple outlines trees
* are shown for the same document.
*
* @since 3.16.0"
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-SYMBOL-OPTIONS-LABEL)))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-SYMBOL-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-SYMBOL-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE SYMBOL-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FILE 1)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.MODULE 2)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NAMESPACE 3)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.PACKAGE 4)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CLASS 5)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.METHOD 6)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.PROPERTY 7)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FIELD 8)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CONSTRUCTOR 9)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ENUM 10)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.INTERFACE 11)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.FUNCTION 12)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.VARIABLE 13)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.CONSTANT 14)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.STRING 15)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NUMBER 16)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.BOOLEAN 17)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ARRAY 18)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.OBJECT 19)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.KEY 20)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.NULL 21)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.ENUM-MEMBER 22)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.STRUCT 23)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.EVENT 24)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.OPERATOR 25)
 (COMMON-LISP:DEFPARAMETER SYMBOL-KIND.TYPE-PARAMETER 26))

(COMMON-LISP:DEFTYPE SYMBOL-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 4)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 5)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 6)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 7)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 8)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 9)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 10)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 11)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 12)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 13)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 14)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 15)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 16)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 17)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 18)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 19)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 20)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 21)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 22)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 23)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 24)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 25)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 26)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE SYMBOL-TAG () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER SYMBOL-TAG.DEPRECATED 1))

(COMMON-LISP:DEFTYPE SYMBOL-TAG () '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1))

(COMMON-LISP:DEFCLASS DOCUMENT-SYMBOL (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this symbol. Will be displayed in the user interface and
* therefore must not be an empty string or a string only consisting of
* white spaces."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-SYMBOL-NAME)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* More detail for this symbol, e.g the signature of a function."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-SYMBOL-DETAIL)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this symbol."
                        :TYPE SYMBOL-KIND :READER DOCUMENT-SYMBOL-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this document symbol.
*
* @since 3.16.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :READER
                        DOCUMENT-SYMBOL-TAGS)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this symbol is deprecated.
*
* @deprecated Use tags instead"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER DOCUMENT-SYMBOL-DEPRECATED)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range enclosing this symbol not including leading/trailing whitespace
* but everything else like comments. This information is typically used to
* determine if the clients cursor is inside the symbol to reveal in the
* symbol in the UI."
                        :TYPE RANGE :READER DOCUMENT-SYMBOL-RANGE)
                       (SELECTION-RANGE :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this symbol is being
* picked, e.g. the name of a function. Must be contained by the `range`."
                        :TYPE RANGE :READER DOCUMENT-SYMBOL-SELECTION-RANGE)
                       (CHILDREN? :INITARG :CHILDREN :DOCUMENTATION "*
* Children of this symbol, e.g. properties of a class."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DOCUMENT-SYMBOL) :READER
                        DOCUMENT-SYMBOL-CHILDREN)))

(COMMON-LISP:DEFCLASS SYMBOL-INFORMATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this symbol."
                        :TYPE COMMON-LISP:STRING :READER SYMBOL-INFORMATION-NAME)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this symbol."
                        :TYPE SYMBOL-KIND :READER SYMBOL-INFORMATION-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this symbol.
*
* @since 3.16.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :READER
                        SYMBOL-INFORMATION-TAGS)
                       (DEPRECATED? :INITARG :DEPRECATED :DOCUMENTATION "*
* Indicates if this symbol is deprecated.
*
* @deprecated Use tags instead"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SYMBOL-INFORMATION-DEPRECATED)
                       (LOCATION :INITARG :LOCATION :DOCUMENTATION "*
* The location of this symbol. The location's range is used by a tool
* to reveal the location in the editor. If the symbol is selected in the
* tool the range's start information is used to position the cursor. So
* the range usually spans more then the actual symbol's name and does
* normally include things like visibility modifiers.
*
* The range doesn't have to denote a node range in the sense of a abstract
* syntax tree. It can therefore not be used to re-construct a hierarchy of
* the symbols."
                        :TYPE LOCATION :READER SYMBOL-INFORMATION-LOCATION)
                       (CONTAINER-NAME? :INITARG :CONTAINER-NAME :DOCUMENTATION "*
* The name of the symbol containing this symbol. This information is for
* user interface purposes (e.g. to render a qualifier in the user interface
* if necessary). It can't be used to re-infer a hierarchy for the document
* symbols."
                        :TYPE COMMON-LISP:STRING :READER SYMBOL-INFORMATION-CONTAINER-NAME)))

(COMMON-LISP:DEFCLASS FOLDING-RANGE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration for folding range
* providers. If this is set to `true` the client supports the new
* `FoldingRangeRegistrationOptions` return value for the corresponding
* server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FOLDING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (RANGE-LIMIT? :INITARG :RANGE-LIMIT :DOCUMENTATION "*
* The maximum number of folding ranges that the client prefers to receive
* per document. The value serves as a hint, servers are free to follow the
* limit."
                        :TYPE UINTEGER :READER FOLDING-RANGE-CLIENT-CAPABILITIES-RANGE-LIMIT)
                       (LINE-FOLDING-ONLY? :INITARG :LINE-FOLDING-ONLY :DOCUMENTATION "*
* If set, the client signals that it only supports folding complete lines.
* If set, client will ignore specified `startCharacter` and `endCharacter`
* properties in a FoldingRange."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FOLDING-RANGE-CLIENT-CAPABILITIES-LINE-FOLDING-ONLY)
                       (FOLDING-RANGE-KIND? :INITARG :FOLDING-RANGE-KIND :DOCUMENTATION "*
* Specific options for the folding range kind.
*
* @since 3.17.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FOLDING-RANGE-KIND)
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER FOLDING-RANGE-CLIENT-CAPABILITIES-FOLDING-RANGE-KIND)
                       (FOLDING-RANGE? :INITARG :FOLDING-RANGE :DOCUMENTATION "*
* Specific options for the folding range.
* @since 3.17.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("collapsedText" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER FOLDING-RANGE-CLIENT-CAPABILITIES-FOLDING-RANGE)))

(COMMON-LISP:DEFCLASS FOLDING-RANGE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS FOLDING-RANGE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS FOLDING-RANGE-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS FOLDING-RANGE-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER FOLDING-RANGE-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FOLDING-RANGE-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FOLDING-RANGE-KIND.COMMENT "comment")
 (COMMON-LISP:DEFPARAMETER FOLDING-RANGE-KIND.IMPORTS "imports")
 (COMMON-LISP:DEFPARAMETER FOLDING-RANGE-KIND.REGION "region"))

(COMMON-LISP:DEFTYPE FOLDING-RANGE-KIND () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFCLASS FOLDING-RANGE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((START-LINE :INITARG :START-LINE :DOCUMENTATION "*
* The zero-based start line of the range to fold. The folded area starts
* after the line's last character. To be valid, the end must be zero or
* larger and smaller than the number of lines in the document."
                        :TYPE UINTEGER :READER FOLDING-RANGE-START-LINE)
                       (START-CHARACTER? :INITARG :START-CHARACTER :DOCUMENTATION "*
* The zero-based character offset from where the folded range starts. If
* not defined, defaults to the length of the start line."
                        :TYPE UINTEGER :READER FOLDING-RANGE-START-CHARACTER)
                       (END-LINE :INITARG :END-LINE :DOCUMENTATION "*
* The zero-based end line of the range to fold. The folded area ends with
* the line's last character. To be valid, the end must be zero or larger
* and smaller than the number of lines in the document."
                        :TYPE UINTEGER :READER FOLDING-RANGE-END-LINE)
                       (END-CHARACTER? :INITARG :END-CHARACTER :DOCUMENTATION "*
* The zero-based character offset before the folded range ends. If not
* defined, defaults to the length of the end line."
                        :TYPE UINTEGER :READER FOLDING-RANGE-END-CHARACTER)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* Describes the kind of the folding range such as `comment` or `region`.
* The kind is used to categorize folding ranges and used by commands like
* 'Fold all comments'. See [FoldingRangeKind](#FoldingRangeKind) for an
* enumeration of standardized kinds."
                        :TYPE FOLDING-RANGE-KIND :READER FOLDING-RANGE-KIND)
                       (COLLAPSED-TEXT? :INITARG :COLLAPSED-TEXT :DOCUMENTATION "*
* The text that the client should show when the specified range is
* collapsed. If not defined or not supported by the client, a default
* will be chosen by the client.
*
* @since 3.17.0 - proposed"
                        :TYPE COMMON-LISP:STRING :READER FOLDING-RANGE-COLLAPSED-TEXT)))

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-FORMATTING-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to format."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-FORMATTING-PARAMS-TEXT-DOCUMENT)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The format options."
                        :TYPE FORMATTING-OPTIONS :READER DOCUMENT-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS FORMATTING-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TAB-SIZE :INITARG :TAB-SIZE :DOCUMENTATION "*
* Size of a tab in spaces."
                        :TYPE UINTEGER :READER FORMATTING-OPTIONS-TAB-SIZE)
                       (INSERT-SPACES :INITARG :INSERT-SPACES :DOCUMENTATION "*
* Prefer spaces over tabs."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-INSERT-SPACES)
                       (TRIM-TRAILING-WHITESPACE? :INITARG :TRIM-TRAILING-WHITESPACE :DOCUMENTATION
                        "*
* Trim trailing whitespace on a line.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-TRIM-TRAILING-WHITESPACE)
                       (INSERT-FINAL-NEWLINE? :INITARG :INSERT-FINAL-NEWLINE :DOCUMENTATION "*
* Insert a newline character at the end of the file if one does not exist.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-INSERT-FINAL-NEWLINE)
                       (TRIM-FINAL-NEWLINES? :INITARG :TRIM-FINAL-NEWLINES :DOCUMENTATION "*
* Trim all newlines after the final newline at the end of the file.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FORMATTING-OPTIONS-TRIM-FINAL-NEWLINES)
                       (KEY? :INITARG :KEY :DOCUMENTATION "*
* Signature for further properties."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-OBJECT COMMON-LISP:STRING
                         (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN INTEGER COMMON-LISP:STRING))
                        :READER FORMATTING-OPTIONS-KEY)))

(COMMON-LISP:DEFCLASS HOVER-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether hover supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        HOVER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (CONTENT-FORMAT? :INITARG :CONTENT-FORMAT :DOCUMENTATION "*
* Client supports the follow content formats if the content
* property refers to a `literal of type MarkupContent`.
* The order describes the preferred format of the client."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND) :READER
                        HOVER-CLIENT-CAPABILITIES-CONTENT-FORMAT)))

(COMMON-LISP:DEFCLASS HOVER-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS HOVER-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS HOVER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((CONTENTS :INITARG :CONTENTS :DOCUMENTATION "*
* The hover's content"
                        :TYPE
                        (COMMON-LISP:OR MARKED-STRING (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKED-STRING)
                                        MARKUP-CONTENT)
                        :READER HOVER-CONTENTS)
                       (RANGE? :INITARG :RANGE :DOCUMENTATION "*
* An optional range is a range inside a text document
* that is used to visualize a hover, e.g. by changing the background color."
                        :TYPE RANGE :READER HOVER-RANGE)))

(COMMON-LISP:DEFTYPE MARKED-STRING ()
  '(COMMON-LISP:OR COMMON-LISP:STRING
                   (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                    ("language" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
                    ("value" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))))

(COMMON-LISP:DEFCLASS IMPLEMENTATION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new `ImplementationRegistrationOptions`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        IMPLEMENTATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        IMPLEMENTATION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS IMPLEMENTATION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS IMPLEMENTATION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS IMPLEMENTATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS IMPLEMENTATION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS INLAY-HINT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether inlay hints support dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLAY-HINT-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (RESOLVE-SUPPORT? :INITARG :RESOLVE-SUPPORT :DOCUMENTATION "*
* Indicates which properties a client can resolve lazily on a inlay
* hint."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("properties" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                          :OPTIONAL-P COMMON-LISP:NIL))
                        :READER INLAY-HINT-CLIENT-CAPABILITIES-RESOLVE-SUPPORT)))

(COMMON-LISP:DEFCLASS INLAY-HINT-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* The server provides support to resolve additional
* information for an inlay hint item."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLAY-HINT-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS INLAY-HINT-REGISTRATION-OPTIONS
                      (INLAY-HINT-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS INLAY-HINT-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER INLAY-HINT-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The visible document range for which inlay hints should be computed."
                        :TYPE RANGE :READER INLAY-HINT-PARAMS-RANGE)))

(COMMON-LISP:DEFCLASS INLAY-HINT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((POSITION :INITARG :POSITION :DOCUMENTATION "*
* The position of this hint."
                        :TYPE POSITION :READER INLAY-HINT-POSITION)
                       (LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this hint. A human readable string or an array of
* InlayHintLabelPart label parts.
*
* *Note* that neither the string nor the label part can be empty."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING
                                        (LEM-LSP-UTILS/TYPE:TS-ARRAY INLAY-HINT-LABEL-PART))
                        :READER INLAY-HINT-LABEL)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of this hint. Can be omitted in which case the client
* should fall back to a reasonable default."
                        :TYPE INLAY-HINT-KIND :READER INLAY-HINT-KIND)
                       (TEXT-EDITS? :INITARG :TEXT-EDITS :DOCUMENTATION "*
* Optional text edits that are performed when accepting this inlay hint.
*
* *Note* that edits are expected to change the document so that the inlay
* hint (or its nearest variant) is now part of the document and the inlay
* hint itself is now obsolete.
*
* Depending on the client capability `inlayHint.resolveSupport` clients
* might resolve this property late using the resolve request."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-EDIT) :READER
                        INLAY-HINT-TEXT-EDITS)
                       (TOOLTIP? :INITARG :TOOLTIP :DOCUMENTATION "*
* The tooltip text when you hover over this item.
*
* Depending on the client capability `inlayHint.resolveSupport` clients
* might resolve this property late using the resolve request."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        INLAY-HINT-TOOLTIP)
                       (PADDING-LEFT? :INITARG :PADDING-LEFT :DOCUMENTATION "*
* Render padding before the hint.
*
* Note: Padding should use the editor's background color, not the
* background color of the hint itself. That means padding can be used
* to visually align/separate an inlay hint."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER INLAY-HINT-PADDING-LEFT)
                       (PADDING-RIGHT? :INITARG :PADDING-RIGHT :DOCUMENTATION "*
* Render padding after the hint.
*
* Note: Padding should use the editor's background color, not the
* background color of the hint itself. That means padding can be used
* to visually align/separate an inlay hint."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER INLAY-HINT-PADDING-RIGHT)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a inlay hint between
* a `textDocument/inlayHint` and a `inlayHint/resolve` request."
                        :TYPE LSP-ANY :READER INLAY-HINT-DATA)))

(COMMON-LISP:DEFCLASS INLAY-HINT-LABEL-PART (LEM-LSP-UTILS/JSON:OBJECT)
                      ((VALUE :INITARG :VALUE :DOCUMENTATION "*
* The value of this label part."
                        :TYPE COMMON-LISP:STRING :READER INLAY-HINT-LABEL-PART-VALUE)
                       (TOOLTIP? :INITARG :TOOLTIP :DOCUMENTATION "*
* The tooltip text when you hover over this label part. Depending on
* the client capability `inlayHint.resolveSupport` clients might resolve
* this property late using the resolve request."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        INLAY-HINT-LABEL-PART-TOOLTIP)
                       (LOCATION? :INITARG :LOCATION :DOCUMENTATION "*
* An optional source code location that represents this
* label part.
*
* The editor will use this location for the hover and for code navigation
* features: This part will become a clickable link that resolves to the
* definition of the symbol at the given location (not necessarily the
* location itself), it shows the hover that shows at the given location,
* and it shows a context menu with further code navigation commands.
*
* Depending on the client capability `inlayHint.resolveSupport` clients
* might resolve this property late using the resolve request."
                        :TYPE LOCATION :READER INLAY-HINT-LABEL-PART-LOCATION)
                       (COMMAND? :INITARG :COMMAND :DOCUMENTATION "*
* An optional command for this label part.
*
* Depending on the client capability `inlayHint.resolveSupport` clients
* might resolve this property late using the resolve request."
                        :TYPE COMMAND :READER INLAY-HINT-LABEL-PART-COMMAND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE INLAY-HINT-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER INLAY-HINT-KIND.TYPE 1)
 (COMMON-LISP:DEFPARAMETER INLAY-HINT-KIND.PARAMETER 2))

(COMMON-LISP:DEFTYPE INLAY-HINT-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS INLAY-HINT-WORKSPACE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REFRESH-SUPPORT? :INITARG :REFRESH-SUPPORT :DOCUMENTATION "*
* Whether the client implementation supports a refresh request sent from
* the server to the client.
*
* Note that this event is global and will force the client to refresh all
* inlay hints currently shown. It should be used with absolute care and
* is useful for situation where a server for example detects a project wide
* change that requires such a calculation."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLAY-HINT-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration for inline
* value providers."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLINE-VALUE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS INLINE-VALUE-REGISTRATION-OPTIONS
                      (INLINE-VALUE-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS INLINE-VALUE-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER INLINE-VALUE-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The document range for which inline values should be computed."
                        :TYPE RANGE :READER INLINE-VALUE-PARAMS-RANGE)
                       (CONTEXT :INITARG :CONTEXT :DOCUMENTATION "*
* Additional information about the context in which inline values were
* requested."
                        :TYPE INLINE-VALUE-CONTEXT :READER INLINE-VALUE-PARAMS-CONTEXT)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-CONTEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FRAME-ID :INITARG :FRAME-ID :DOCUMENTATION "*
* The stack frame (as a DAP Id) where the execution has stopped."
                        :TYPE INTEGER :READER INLINE-VALUE-CONTEXT-FRAME-ID)
                       (STOPPED-LOCATION :INITARG :STOPPED-LOCATION :DOCUMENTATION "*
* The document range where execution has stopped.
* Typically the end position of the range denotes the line where the
* inline values are shown."
                        :TYPE RANGE :READER INLINE-VALUE-CONTEXT-STOPPED-LOCATION)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-TEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The document range for which the inline value applies."
                        :TYPE RANGE :READER INLINE-VALUE-TEXT-RANGE)
                       (TEXT :INITARG :TEXT :DOCUMENTATION "*
* The text of the inline value."
                        :TYPE COMMON-LISP:STRING :READER INLINE-VALUE-TEXT-TEXT)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-VARIABLE-LOOKUP (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The document range for which the inline value applies.
* The range is used to extract the variable name from the underlying
* document."
                        :TYPE RANGE :READER INLINE-VALUE-VARIABLE-LOOKUP-RANGE)
                       (VARIABLE-NAME? :INITARG :VARIABLE-NAME :DOCUMENTATION "*
* If specified the name of the variable to look up."
                        :TYPE COMMON-LISP:STRING :READER
                        INLINE-VALUE-VARIABLE-LOOKUP-VARIABLE-NAME)
                       (CASE-SENSITIVE-LOOKUP :INITARG :CASE-SENSITIVE-LOOKUP :DOCUMENTATION "*
* How to perform the lookup."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLINE-VALUE-VARIABLE-LOOKUP-CASE-SENSITIVE-LOOKUP)))

(COMMON-LISP:DEFCLASS INLINE-VALUE-EVALUATABLE-EXPRESSION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The document range for which the inline value applies.
* The range is used to extract the evaluatable expression from the
* underlying document."
                        :TYPE RANGE :READER INLINE-VALUE-EVALUATABLE-EXPRESSION-RANGE)
                       (EXPRESSION? :INITARG :EXPRESSION :DOCUMENTATION "*
* If specified the expression overrides the extracted expression."
                        :TYPE COMMON-LISP:STRING :READER
                        INLINE-VALUE-EVALUATABLE-EXPRESSION-EXPRESSION)))

(COMMON-LISP:DEFTYPE INLINE-VALUE ()
  '(COMMON-LISP:OR INLINE-VALUE-TEXT INLINE-VALUE-VARIABLE-LOOKUP
                   INLINE-VALUE-EVALUATABLE-EXPRESSION))

(COMMON-LISP:DEFCLASS INLINE-VALUE-WORKSPACE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REFRESH-SUPPORT? :INITARG :REFRESH-SUPPORT :DOCUMENTATION "*
* Whether the client implementation supports a refresh request sent from
* the server to the client.
*
* Note that this event is global and will force the client to refresh all
* inline values currently shown. It should be used with absolute care and
* is useful for situation where a server for example detect a project wide
* change that requires such a calculation."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        INLINE-VALUE-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT)))

(COMMON-LISP:DEFCLASS LINKED-EDITING-RANGE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether the implementation supports dynamic registration.
* If this is set to `true` the client supports the new
* `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        LINKED-EDITING-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS LINKED-EDITING-RANGE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS LINKED-EDITING-RANGE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS LINKED-EDITING-RANGE-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS LINKED-EDITING-RANGE-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS LINKED-EDITING-RANGES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGES :INITARG :RANGES :DOCUMENTATION "*
* A list of ranges that can be renamed together. The ranges must have
* identical length and contain identical text content. The ranges cannot
* overlap."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY RANGE) :READER
                        LINKED-EDITING-RANGES-RANGES)
                       (WORD-PATTERN? :INITARG :WORD-PATTERN :DOCUMENTATION "*
* An optional word pattern (regular expression) that describes valid
* contents for the given ranges. If no pattern is provided, the client
* configuration's word pattern will be used."
                        :TYPE COMMON-LISP:STRING :READER LINKED-EDITING-RANGES-WORD-PATTERN)))

(COMMON-LISP:DEFCLASS MONIKER-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new `(TextDocumentRegistrationOptions &
* StaticRegistrationOptions)` return value for the corresponding server
* capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        MONIKER-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS MONIKER-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS MONIKER-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS MONIKER-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS MONIKER-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

COMMON-LISP:NIL

COMMON-LISP:NIL

(COMMON-LISP:DEFCLASS MONIKER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SCHEME :INITARG :SCHEME :DOCUMENTATION "*
* The scheme of the moniker. For example tsc or .Net"
                        :TYPE COMMON-LISP:STRING :READER MONIKER-SCHEME)
                       (IDENTIFIER :INITARG :IDENTIFIER :DOCUMENTATION "*
* The identifier of the moniker. The value is opaque in LSIF however
* schema owners are allowed to define the structure if they want."
                        :TYPE COMMON-LISP:STRING :READER MONIKER-IDENTIFIER)
                       (UNIQUE :INITARG :UNIQUE :DOCUMENTATION "*
* The scope in which the moniker is unique"
                        :TYPE UNIQUENESS-LEVEL :READER MONIKER-UNIQUE)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The moniker kind if known."
                        :TYPE MONIKER-KIND :READER MONIKER-KIND)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether on type formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-ON-TYPE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FIRST-TRIGGER-CHARACTER :INITARG :FIRST-TRIGGER-CHARACTER :DOCUMENTATION "*
* A character on which formatting should be triggered, like `{`."
                        :TYPE COMMON-LISP:STRING :READER
                        DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-FIRST-TRIGGER-CHARACTER)
                       (MORE-TRIGGER-CHARACTER? :INITARG :MORE-TRIGGER-CHARACTER :DOCUMENTATION "*
* More trigger characters."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        DOCUMENT-ON-TYPE-FORMATTING-OPTIONS-MORE-TRIGGER-CHARACTER)))

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-ON-TYPE-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-ON-TYPE-FORMATTING-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to format."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-ON-TYPE-FORMATTING-PARAMS-TEXT-DOCUMENT)
                       (POSITION :INITARG :POSITION :DOCUMENTATION "*
* The position around which the on type formatting should happen.
* This is not necessarily the exact position where the character denoted
* by the property `ch` got typed."
                        :TYPE POSITION :READER DOCUMENT-ON-TYPE-FORMATTING-PARAMS-POSITION)
                       (CH :INITARG :CH :DOCUMENTATION "*
* The character that has been typed that triggered the formatting
* on type request. That is not necessarily the last character that
* got inserted into the document since the client could auto insert
* characters as well (e.g. like automatic brace completion)."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-ON-TYPE-FORMATTING-PARAMS-CH)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The formatting options."
                        :TYPE FORMATTING-OPTIONS :READER
                        DOCUMENT-ON-TYPE-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RELATED-INFORMATION? :INITARG :RELATED-INFORMATION :DOCUMENTATION "*
* Whether the clients accepts diagnostics with related information."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-RELATED-INFORMATION)
                       (TAG-SUPPORT? :INITARG :TAG-SUPPORT :DOCUMENTATION "*
* Client supports the tag property to provide meta data about a diagnostic.
* Clients supporting tags have to handle unknown tags gracefully.
*
* @since 3.15.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-TAG) :OPTIONAL-P
                          COMMON-LISP:NIL))
                        :READER PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-TAG-SUPPORT)
                       (VERSION-SUPPORT? :INITARG :VERSION-SUPPORT :DOCUMENTATION "*
* Whether the client interprets the version property of the
* `textDocument/publishDiagnostics` notification's parameter.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-VERSION-SUPPORT)
                       (CODE-DESCRIPTION-SUPPORT? :INITARG :CODE-DESCRIPTION-SUPPORT :DOCUMENTATION
                        "*
* Client supports a codeDescription property
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-CODE-DESCRIPTION-SUPPORT)
                       (DATA-SUPPORT? :INITARG :DATA-SUPPORT :DOCUMENTATION "*
* Whether code action supports the `data` property which is
* preserved between a `textDocument/publishDiagnostics` and
* `textDocument/codeAction` request.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        PUBLISH-DIAGNOSTICS-CLIENT-CAPABILITIES-DATA-SUPPORT)))

(COMMON-LISP:DEFCLASS PUBLISH-DIAGNOSTICS-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The URI for which diagnostic information is reported."
                        :TYPE DOCUMENT-URI :READER PUBLISH-DIAGNOSTICS-PARAMS-URI)
                       (VERSION? :INITARG :VERSION :DOCUMENTATION "*
* Optional the version number of the document the diagnostics are published
* for.
*
* @since 3.15.0"
                        :TYPE INTEGER :READER PUBLISH-DIAGNOSTICS-PARAMS-VERSION)
                       (DIAGNOSTICS :INITARG :DIAGNOSTICS :DOCUMENTATION "*
* An array of diagnostic information items."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC) :READER
                        PUBLISH-DIAGNOSTICS-PARAMS-DIAGNOSTICS)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new
* `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (RELATED-DOCUMENT-SUPPORT? :INITARG :RELATED-DOCUMENT-SUPPORT :DOCUMENTATION
                        "*
* Whether the clients supports related documents for document diagnostic
* pulls."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-CLIENT-CAPABILITIES-RELATED-DOCUMENT-SUPPORT)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((IDENTIFIER? :INITARG :IDENTIFIER :DOCUMENTATION "*
* An optional identifier under which the diagnostics are
* managed by the client."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-OPTIONS-IDENTIFIER)
                       (INTER-FILE-DEPENDENCIES :INITARG :INTER-FILE-DEPENDENCIES :DOCUMENTATION "*
* Whether the language has inter file dependencies meaning that
* editing code in one file can result in a different diagnostic
* set in another file. Inter file dependencies are common for
* most programming languages and typically uncommon for linters."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-OPTIONS-INTER-FILE-DEPENDENCIES)
                       (WORKSPACE-DIAGNOSTICS :INITARG :WORKSPACE-DIAGNOSTICS :DOCUMENTATION "*
* The server provides support for workspace diagnostics as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-OPTIONS-WORKSPACE-DIAGNOSTICS)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DIAGNOSTIC-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-DIAGNOSTIC-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-DIAGNOSTIC-PARAMS-TEXT-DOCUMENT)
                       (IDENTIFIER? :INITARG :IDENTIFIER :DOCUMENTATION "*
* The additional identifier  provided during registration."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-DIAGNOSTIC-PARAMS-IDENTIFIER)
                       (PREVIOUS-RESULT-ID? :INITARG :PREVIOUS-RESULT-ID :DOCUMENTATION "*
* The result id of a previous response if provided."
                        :TYPE COMMON-LISP:STRING :READER
                        DOCUMENT-DIAGNOSTIC-PARAMS-PREVIOUS-RESULT-ID)))

(COMMON-LISP:DEFTYPE DOCUMENT-DIAGNOSTIC-REPORT ()
  '(COMMON-LISP:OR RELATED-FULL-DOCUMENT-DIAGNOSTIC-REPORT
                   RELATED-UNCHANGED-DOCUMENT-DIAGNOSTIC-REPORT))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DOCUMENT-DIAGNOSTIC-REPORT-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DOCUMENT-DIAGNOSTIC-REPORT-KIND.FULL "full")
 (COMMON-LISP:DEFPARAMETER DOCUMENT-DIAGNOSTIC-REPORT-KIND.UNCHANGED "unchanged"))

(COMMON-LISP:DEFTYPE DOCUMENT-DIAGNOSTIC-REPORT-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "full")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "unchanged")))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-SERVER-CANCELLATION-DATA (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RETRIGGER-REQUEST :INITARG :RETRIGGER-REQUEST :DOCUMENTATION "" :TYPE
                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-SERVER-CANCELLATION-DATA-RETRIGGER-REQUEST)))

(COMMON-LISP:DEFCLASS WORKSPACE-DIAGNOSTIC-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((IDENTIFIER? :INITARG :IDENTIFIER :DOCUMENTATION "*
* The additional identifier provided during registration."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-DIAGNOSTIC-PARAMS-IDENTIFIER)
                       (PREVIOUS-RESULT-IDS :INITARG :PREVIOUS-RESULT-IDS :DOCUMENTATION "*
* The currently known diagnostic reports with their
* previous result ids."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY PREVIOUS-RESULT-ID) :READER
                        WORKSPACE-DIAGNOSTIC-PARAMS-PREVIOUS-RESULT-IDS)))

(COMMON-LISP:DEFCLASS PREVIOUS-RESULT-ID (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The URI for which the client knows a
* result id."
                        :TYPE DOCUMENT-URI :READER PREVIOUS-RESULT-ID-URI)
                       (VALUE :INITARG :VALUE :DOCUMENTATION "*
* The value of the previous result id."
                        :TYPE COMMON-LISP:STRING :READER PREVIOUS-RESULT-ID-VALUE)))

(COMMON-LISP:DEFCLASS WORKSPACE-DIAGNOSTIC-REPORT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ITEMS :INITARG :ITEMS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-DOCUMENT-DIAGNOSTIC-REPORT) :READER
                        WORKSPACE-DIAGNOSTIC-REPORT-ITEMS)))

(COMMON-LISP:DEFCLASS WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT (FULL-DOCUMENT-DIAGNOSTIC-REPORT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The URI for which diagnostic information is reported."
                        :TYPE DOCUMENT-URI :READER WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT-URI)
                       (VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number for which the diagnostics are reported.
* If the document is not marked as open `null` can be provided."
                        :TYPE
                        (COMMON-LISP:OR INTEGER
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT-VERSION)))

(COMMON-LISP:DEFTYPE WORKSPACE-DOCUMENT-DIAGNOSTIC-REPORT ()
  '(COMMON-LISP:OR WORKSPACE-FULL-DOCUMENT-DIAGNOSTIC-REPORT
                   WORKSPACE-UNCHANGED-DOCUMENT-DIAGNOSTIC-REPORT))

(COMMON-LISP:DEFCLASS WORKSPACE-DIAGNOSTIC-REPORT-PARTIAL-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ITEMS :INITARG :ITEMS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-DOCUMENT-DIAGNOSTIC-REPORT) :READER
                        WORKSPACE-DIAGNOSTIC-REPORT-PARTIAL-RESULT-ITEMS)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-WORKSPACE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REFRESH-SUPPORT? :INITARG :REFRESH-SUPPORT :DOCUMENTATION "*
* Whether the client implementation supports a refresh request sent from
* the server to the client.
*
* Note that this event is global and will force the client to refresh all
* pulled diagnostics currently shown. It should be used with absolute care
* and is useful for situation where a server for example detects a project
* wide change that requires such a calculation."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DIAGNOSTIC-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT)))

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether formatting supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DOCUMENT-RANGE-FORMATTING-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS DOCUMENT-RANGE-FORMATTING-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DOCUMENT-RANGE-FORMATTING-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document to format."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DOCUMENT-RANGE-FORMATTING-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range to format"
                        :TYPE RANGE :READER DOCUMENT-RANGE-FORMATTING-PARAMS-RANGE)
                       (OPTIONS :INITARG :OPTIONS :DOCUMENTATION "*
* The format options"
                        :TYPE FORMATTING-OPTIONS :READER DOCUMENT-RANGE-FORMATTING-PARAMS-OPTIONS)))

(COMMON-LISP:DEFCLASS REFERENCE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether references supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        REFERENCE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS REFERENCE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS REFERENCE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS REFERENCE-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS REFERENCE-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      ((CONTEXT :INITARG :CONTEXT :DOCUMENTATION "" :TYPE REFERENCE-CONTEXT :READER
                        REFERENCE-PARAMS-CONTEXT)))

(COMMON-LISP:DEFCLASS REFERENCE-CONTEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((INCLUDE-DECLARATION :INITARG :INCLUDE-DECLARATION :DOCUMENTATION "*
* Include the declaration of the current symbol."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        REFERENCE-CONTEXT-INCLUDE-DECLARATION)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE PREPARE-SUPPORT-DEFAULT-BEHAVIOR () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER PREPARE-SUPPORT-DEFAULT-BEHAVIOR.IDENTIFIER 1))

(COMMON-LISP:DEFTYPE PREPARE-SUPPORT-DEFAULT-BEHAVIOR ()
  '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1))

(COMMON-LISP:DEFCLASS RENAME-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether rename supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (PREPARE-SUPPORT? :INITARG :PREPARE-SUPPORT :DOCUMENTATION "*
* Client supports testing for validity of rename operations
* before execution.
*
* @since version 3.12.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT)
                       (PREPARE-SUPPORT-DEFAULT-BEHAVIOR? :INITARG
                        :PREPARE-SUPPORT-DEFAULT-BEHAVIOR :DOCUMENTATION "*
* Client supports the default behavior result
* (`{ defaultBehavior: boolean }`).
*
* The value indicates the default behavior used by the
* client.
*
* @since version 3.16.0"
                        :TYPE PREPARE-SUPPORT-DEFAULT-BEHAVIOR :READER
                        RENAME-CLIENT-CAPABILITIES-PREPARE-SUPPORT-DEFAULT-BEHAVIOR)
                       (HONORS-CHANGE-ANNOTATIONS? :INITARG :HONORS-CHANGE-ANNOTATIONS
                        :DOCUMENTATION "*
* Whether the client honors the change annotations in
* text edits and resource operations returned via the
* rename request's workspace edit by for example presenting
* the workspace edit in the user interface and asking
* for confirmation.
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-CLIENT-CAPABILITIES-HONORS-CHANGE-ANNOTATIONS)))

(COMMON-LISP:DEFCLASS RENAME-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((PREPARE-PROVIDER? :INITARG :PREPARE-PROVIDER :DOCUMENTATION "*
* Renames should be checked and tested before being executed."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-OPTIONS-PREPARE-PROVIDER)))

(COMMON-LISP:DEFCLASS RENAME-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS RENAME-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS RENAME-PARAMS (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      ((NEW-NAME :INITARG :NEW-NAME :DOCUMENTATION "*
* The new name of the symbol. If the given name is not valid the
* request must return a [ResponseError](#ResponseError) with an
* appropriate message set."
                        :TYPE COMMON-LISP:STRING :READER RENAME-PARAMS-NEW-NAME)))

(COMMON-LISP:DEFCLASS PREPARE-RENAME-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SELECTION-RANGE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration for selection range
* providers. If this is set to `true` the client supports the new
* `SelectionRangeRegistrationOptions` return value for the corresponding
* server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SELECTION-RANGE-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS SELECTION-RANGE-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SELECTION-RANGE-REGISTRATION-OPTIONS
                      (SELECTION-RANGE-OPTIONS TEXT-DOCUMENT-REGISTRATION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SELECTION-RANGE-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        SELECTION-RANGE-PARAMS-TEXT-DOCUMENT)
                       (POSITIONS :INITARG :POSITIONS :DOCUMENTATION "*
* The positions inside the text document."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY POSITION) :READER
                        SELECTION-RANGE-PARAMS-POSITIONS)))

(COMMON-LISP:DEFCLASS SELECTION-RANGE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The [range](#Range) of this selection range."
                        :TYPE RANGE :READER SELECTION-RANGE-RANGE)
                       (PARENT? :INITARG :PARENT :DOCUMENTATION "*
* The parent selection range containing this range. Therefore
* `parent.range` must contain `this.range`."
                        :TYPE SELECTION-RANGE :READER SELECTION-RANGE-PARENT)))

COMMON-LISP:NIL

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TOKEN-FORMAT () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TOKEN-FORMAT.RELATIVE "relative"))

(COMMON-LISP:DEFTYPE TOKEN-FORMAT () '(LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "relative"))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-LEGEND (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TOKEN-TYPES :INITARG :TOKEN-TYPES :DOCUMENTATION "*
* The token types a server uses."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SEMANTIC-TOKENS-LEGEND-TOKEN-TYPES)
                       (TOKEN-MODIFIERS :INITARG :TOKEN-MODIFIERS :DOCUMENTATION "*
* The token modifiers a server uses."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SEMANTIC-TOKENS-LEGEND-TOKEN-MODIFIERS)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new `(TextDocumentRegistrationOptions &
* StaticRegistrationOptions)` return value for the corresponding server
* capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (REQUESTS :INITARG :REQUESTS :DOCUMENTATION "*
* Which requests the client supports and might send to the server
* depending on the server's capability. Please note that clients might not
* show semantic tokens or degrade some of the user experience if a range
* or full request is advertised by the client but not provided by the
* server. If for example the client capability `requests.full` and
* `request.range` are both set to true but the server only provides a
* range provider the client might not render a minimap correctly or might
* even decide to not show any semantic tokens at all."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("range" :TYPE
                          (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("full" :TYPE
                          (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                                           ("delta" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                                            COMMON-LISP:T)))
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER SEMANTIC-TOKENS-CLIENT-CAPABILITIES-REQUESTS)
                       (TOKEN-TYPES :INITARG :TOKEN-TYPES :DOCUMENTATION "*
* The token types that the client supports."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-TOKEN-TYPES)
                       (TOKEN-MODIFIERS :INITARG :TOKEN-MODIFIERS :DOCUMENTATION "*
* The token modifiers that the client supports."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-TOKEN-MODIFIERS)
                       (FORMATS :INITARG :FORMATS :DOCUMENTATION "*
* The formats the clients supports."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TOKEN-FORMAT) :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-FORMATS)
                       (OVERLAPPING-TOKEN-SUPPORT? :INITARG :OVERLAPPING-TOKEN-SUPPORT
                        :DOCUMENTATION "*
* Whether the client supports tokens that can overlap each other."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-OVERLAPPING-TOKEN-SUPPORT)
                       (MULTILINE-TOKEN-SUPPORT? :INITARG :MULTILINE-TOKEN-SUPPORT :DOCUMENTATION "*
* Whether the client supports tokens that can span multiple lines."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-MULTILINE-TOKEN-SUPPORT)
                       (SERVER-CANCEL-SUPPORT? :INITARG :SERVER-CANCEL-SUPPORT :DOCUMENTATION "*
* Whether the client allows the server to actively cancel a
* semantic token request, e.g. supports returning
* ErrorCodes.ServerCancelled. If a server does the client
* needs to retrigger the request.
*
* @since 3.17.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-SERVER-CANCEL-SUPPORT)
                       (AUGMENTS-SYNTAX-TOKENS? :INITARG :AUGMENTS-SYNTAX-TOKENS :DOCUMENTATION "*
* Whether the client uses semantic tokens to augment existing
* syntax tokens. If set to `true` client side created syntax
* tokens and semantic tokens are both used for colorization. If
* set to `false` the client only uses the returned semantic tokens
* for colorization.
*
* If the value is `undefined` then the client behavior is not
* specified.
*
* @since 3.17.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-CLIENT-CAPABILITIES-AUGMENTS-SYNTAX-TOKENS)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((LEGEND :INITARG :LEGEND :DOCUMENTATION "*
* The legend used by the server"
                        :TYPE SEMANTIC-TOKENS-LEGEND :READER SEMANTIC-TOKENS-OPTIONS-LEGEND)
                       (RANGE? :INITARG :RANGE :DOCUMENTATION "*
* Server supports providing semantic tokens for a specific range
* of a document."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE))
                        :READER SEMANTIC-TOKENS-OPTIONS-RANGE)
                       (FULL? :INITARG :FULL :DOCUMENTATION "*
* Server supports providing semantic tokens for a full document."
                        :TYPE
                        (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                                         ("delta" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                                          COMMON-LISP:T)))
                        :READER SEMANTIC-TOKENS-OPTIONS-FULL)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS SEMANTIC-TOKENS-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        SEMANTIC-TOKENS-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RESULT-ID? :INITARG :RESULT-ID :DOCUMENTATION "*
* An optional result id. If provided and clients support delta updating
* the client will include the result id in the next semantic token request.
* A server can then instead of computing all semantic tokens again simply
* send a delta."
                        :TYPE COMMON-LISP:STRING :READER SEMANTIC-TOKENS-RESULT-ID)
                       (DATA :INITARG :DATA :DOCUMENTATION "*
* The actual tokens."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY UINTEGER) :READER SEMANTIC-TOKENS-DATA)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-PARTIAL-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DATA :INITARG :DATA :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY UINTEGER) :READER
                        SEMANTIC-TOKENS-PARTIAL-RESULT-DATA)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-DELTA-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        SEMANTIC-TOKENS-DELTA-PARAMS-TEXT-DOCUMENT)
                       (PREVIOUS-RESULT-ID :INITARG :PREVIOUS-RESULT-ID :DOCUMENTATION "*
* The result id of a previous response. The result Id can either point to
* a full response or a delta response depending on what was received last."
                        :TYPE COMMON-LISP:STRING :READER
                        SEMANTIC-TOKENS-DELTA-PARAMS-PREVIOUS-RESULT-ID)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-DELTA (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RESULT-ID? :INITARG :RESULT-ID :DOCUMENTATION "" :TYPE COMMON-LISP:STRING
                        :READER SEMANTIC-TOKENS-DELTA-RESULT-ID)
                       (EDITS :INITARG :EDITS :DOCUMENTATION "*
* The semantic token edits to transform a previous result into a new
* result."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SEMANTIC-TOKENS-EDIT) :READER
                        SEMANTIC-TOKENS-DELTA-EDITS)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-EDIT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((START :INITARG :START :DOCUMENTATION "*
* The start offset of the edit."
                        :TYPE UINTEGER :READER SEMANTIC-TOKENS-EDIT-START)
                       (DELETE-COUNT :INITARG :DELETE-COUNT :DOCUMENTATION "*
* The count of elements to remove."
                        :TYPE UINTEGER :READER SEMANTIC-TOKENS-EDIT-DELETE-COUNT)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* The elements to insert."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY UINTEGER) :READER
                        SEMANTIC-TOKENS-EDIT-DATA)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-DELTA-PARTIAL-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((EDITS :INITARG :EDITS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY SEMANTIC-TOKENS-EDIT) :READER
                        SEMANTIC-TOKENS-DELTA-PARTIAL-RESULT-EDITS)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-RANGE-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        SEMANTIC-TOKENS-RANGE-PARAMS-TEXT-DOCUMENT)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range the semantic tokens are requested for."
                        :TYPE RANGE :READER SEMANTIC-TOKENS-RANGE-PARAMS-RANGE)))

(COMMON-LISP:DEFCLASS SEMANTIC-TOKENS-WORKSPACE-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((REFRESH-SUPPORT? :INITARG :REFRESH-SUPPORT :DOCUMENTATION "*
* Whether the client implementation supports a refresh request sent from
* the server to the client.
*
* Note that this event is global and will force the client to refresh all
* semantic tokens currently shown. It should be used with absolute care
* and is useful for situation where a server for example detect a project
* wide change that requires such a calculation."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SEMANTIC-TOKENS-WORKSPACE-CLIENT-CAPABILITIES-REFRESH-SUPPORT)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether signature help supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SIGNATURE-INFORMATION? :INITARG :SIGNATURE-INFORMATION :DOCUMENTATION "*
* The client supports the following `SignatureInformation`
* specific properties."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("documentationFormat" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MARKUP-KIND)
                          :OPTIONAL-P COMMON-LISP:T)
                         ("parameterInformation" :TYPE
                          (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                           ("labelOffsetSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                            COMMON-LISP:T))
                          :OPTIONAL-P COMMON-LISP:T)
                         ("activeParameterSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER SIGNATURE-HELP-CLIENT-CAPABILITIES-SIGNATURE-INFORMATION)
                       (CONTEXT-SUPPORT? :INITARG :CONTEXT-SUPPORT :DOCUMENTATION "*
* The client supports to send additional context information for a
* `textDocument/signatureHelp` request. A client that opts into
* contextSupport will also support the `retriggerCharacters` on
* `SignatureHelpOptions`.
*
* @since 3.15.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CLIENT-CAPABILITIES-CONTEXT-SUPPORT)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((TRIGGER-CHARACTERS? :INITARG :TRIGGER-CHARACTERS :DOCUMENTATION "*
* The characters that trigger signature help
* automatically."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SIGNATURE-HELP-OPTIONS-TRIGGER-CHARACTERS)
                       (RETRIGGER-CHARACTERS? :INITARG :RETRIGGER-CHARACTERS :DOCUMENTATION "*
* List of characters that re-trigger signature help.
*
* These trigger characters are only active when signature help is already
* showing. All trigger characters are also counted as re-trigger
* characters.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        SIGNATURE-HELP-OPTIONS-RETRIGGER-CHARACTERS)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS SIGNATURE-HELP-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS)
                      ((CONTEXT? :INITARG :CONTEXT :DOCUMENTATION "*
* The signature help context. This is only available if the client
* specifies to send this using the client capability
* `textDocument.signatureHelp.contextSupport === true`
*
* @since 3.15.0"
                        :TYPE SIGNATURE-HELP-CONTEXT :READER SIGNATURE-HELP-PARAMS-CONTEXT)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE SIGNATURE-HELP-TRIGGER-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.INVOKED 1)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.TRIGGER-CHARACTER 2)
 (COMMON-LISP:DEFPARAMETER SIGNATURE-HELP-TRIGGER-KIND.CONTENT-CHANGE 3))

(COMMON-LISP:DEFTYPE SIGNATURE-HELP-TRIGGER-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP-CONTEXT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TRIGGER-KIND :INITARG :TRIGGER-KIND :DOCUMENTATION "*
* Action that caused signature help to be triggered."
                        :TYPE SIGNATURE-HELP-TRIGGER-KIND :READER
                        SIGNATURE-HELP-CONTEXT-TRIGGER-KIND)
                       (TRIGGER-CHARACTER? :INITARG :TRIGGER-CHARACTER :DOCUMENTATION "*
* Character that caused signature help to be triggered.
*
* This is undefined when triggerKind !==
* SignatureHelpTriggerKind.TriggerCharacter"
                        :TYPE COMMON-LISP:STRING :READER SIGNATURE-HELP-CONTEXT-TRIGGER-CHARACTER)
                       (IS-RETRIGGER :INITARG :IS-RETRIGGER :DOCUMENTATION "*
* `true` if signature help was already showing when it was triggered.
*
* Retriggers occur when the signature help is already active and can be
* caused by actions such as typing a trigger character, a cursor move, or
* document content changes."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SIGNATURE-HELP-CONTEXT-IS-RETRIGGER)
                       (ACTIVE-SIGNATURE-HELP? :INITARG :ACTIVE-SIGNATURE-HELP :DOCUMENTATION "*
* The currently active `SignatureHelp`.
*
* The `activeSignatureHelp` has its `SignatureHelp.activeSignature` field
* updated based on the user navigating through available signatures."
                        :TYPE SIGNATURE-HELP :READER SIGNATURE-HELP-CONTEXT-ACTIVE-SIGNATURE-HELP)))

(COMMON-LISP:DEFCLASS SIGNATURE-HELP (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SIGNATURES :INITARG :SIGNATURES :DOCUMENTATION "*
* One or more signatures. If no signatures are available the signature help
* request should return `null`."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SIGNATURE-INFORMATION) :READER
                        SIGNATURE-HELP-SIGNATURES)
                       (ACTIVE-SIGNATURE? :INITARG :ACTIVE-SIGNATURE :DOCUMENTATION "*
* The active signature. If omitted or the value lies outside the
* range of `signatures` the value defaults to zero or is ignore if
* the `SignatureHelp` as no signatures.
*
* Whenever possible implementors should make an active decision about
* the active signature and shouldn't rely on a default value.
*
* In future version of the protocol this property might become
* mandatory to better express this."
                        :TYPE UINTEGER :READER SIGNATURE-HELP-ACTIVE-SIGNATURE)
                       (ACTIVE-PARAMETER? :INITARG :ACTIVE-PARAMETER :DOCUMENTATION "*
* The active parameter of the active signature. If omitted or the value
* lies outside the range of `signatures[activeSignature].parameters`
* defaults to 0 if the active signature has parameters. If
* the active signature has no parameters it is ignored.
* In future version of the protocol this property might become
* mandatory to better express the active parameter if the
* active signature does have any."
                        :TYPE UINTEGER :READER SIGNATURE-HELP-ACTIVE-PARAMETER)))

(COMMON-LISP:DEFCLASS SIGNATURE-INFORMATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this signature. Will be shown in
* the UI."
                        :TYPE COMMON-LISP:STRING :READER SIGNATURE-INFORMATION-LABEL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* The human-readable doc-comment of this signature. Will be shown
* in the UI but can be omitted."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        SIGNATURE-INFORMATION-DOCUMENTATION)
                       (PARAMETERS? :INITARG :PARAMETERS :DOCUMENTATION "*
* The parameters of this signature."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY PARAMETER-INFORMATION) :READER
                        SIGNATURE-INFORMATION-PARAMETERS)
                       (ACTIVE-PARAMETER? :INITARG :ACTIVE-PARAMETER :DOCUMENTATION "*
* The index of the active parameter.
*
* If provided, this is used in place of `SignatureHelp.activeParameter`.
*
* @since 3.16.0"
                        :TYPE UINTEGER :READER SIGNATURE-INFORMATION-ACTIVE-PARAMETER)))

(COMMON-LISP:DEFCLASS PARAMETER-INFORMATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* The label of this parameter information.
*
* Either a string or an inclusive start and exclusive end offsets within
* its containing signature label. (see SignatureInformation.label). The
* offsets are based on a UTF-16 string representation as `Position` and
* `Range` does.
*
* *Note*: a label of type string should be a substring of its containing
* signature label. Its intended use case is to highlight the parameter
* label part in the `SignatureInformation.label`."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING
                                        (LEM-LSP-UTILS/TYPE:TS-TUPLE UINTEGER UINTEGER))
                        :READER PARAMETER-INFORMATION-LABEL)
                       (DOCUMENTATION? :INITARG :DOCUMENTATION :DOCUMENTATION "*
* The human-readable doc-comment of this parameter. Will be shown
* in the UI but can be omitted."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING MARKUP-CONTENT) :READER
                        PARAMETER-INFORMATION-DOCUMENTATION)))

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is set to
* `true` the client supports the new `TypeDefinitionRegistrationOptions`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TYPE-DEFINITION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (LINK-SUPPORT? :INITARG :LINK-SUPPORT :DOCUMENTATION "*
* The client supports additional metadata in the form of definition links.
*
* @since 3.14.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TYPE-DEFINITION-CLIENT-CAPABILITIES-LINK-SUPPORT)))

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS TYPE-DEFINITION-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-DEFINITION-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS
                       PARTIAL-RESULT-PARAMS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFTYPE TYPE-HIERARCHY-CLIENT-CAPABILITIES ()
  '(LEM-LSP-UTILS/TYPE:TS-INTERFACE
    ("dynamicRegistration" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P COMMON-LISP:T)))

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-OPTIONS (WORK-DONE-PROGRESS-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS TYPE-HIERARCHY-OPTIONS
                       STATIC-REGISTRATION-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-PREPARE-PARAMS
                      (TEXT-DOCUMENT-POSITION-PARAMS WORK-DONE-PROGRESS-PARAMS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this item."
                        :TYPE COMMON-LISP:STRING :READER TYPE-HIERARCHY-ITEM-NAME)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this item."
                        :TYPE SYMBOL-KIND :READER TYPE-HIERARCHY-ITEM-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this item."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :READER
                        TYPE-HIERARCHY-ITEM-TAGS)
                       (DETAIL? :INITARG :DETAIL :DOCUMENTATION "*
* More detail for this item, e.g. the signature of a function."
                        :TYPE COMMON-LISP:STRING :READER TYPE-HIERARCHY-ITEM-DETAIL)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The resource identifier of this item."
                        :TYPE DOCUMENT-URI :READER TYPE-HIERARCHY-ITEM-URI)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range enclosing this symbol not including leading/trailing whitespace
* but everything else, e.g. comments and code."
                        :TYPE RANGE :READER TYPE-HIERARCHY-ITEM-RANGE)
                       (SELECTION-RANGE :INITARG :SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this symbol is being
* picked, e.g. the name of a function. Must be contained by the
* [`range`](#TypeHierarchyItem.range)."
                        :TYPE RANGE :READER TYPE-HIERARCHY-ITEM-SELECTION-RANGE)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved between a type hierarchy prepare and
* supertypes or subtypes requests. It could also be used to identify the
* type hierarchy in the server, helping improve the performance on
* resolving supertypes and subtypes."
                        :TYPE LSP-ANY :READER TYPE-HIERARCHY-ITEM-DATA)))

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-SUPERTYPES-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((ITEM :INITARG :ITEM :DOCUMENTATION "" :TYPE TYPE-HIERARCHY-ITEM :READER
                        TYPE-HIERARCHY-SUPERTYPES-PARAMS-ITEM)))

(COMMON-LISP:DEFCLASS TYPE-HIERARCHY-SUBTYPES-PARAMS
                      (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((ITEM :INITARG :ITEM :DOCUMENTATION "" :TYPE TYPE-HIERARCHY-ITEM :READER
                        TYPE-HIERARCHY-SUBTYPES-PARAMS-ITEM)))

(COMMON-LISP:DEFCLASS NOTEBOOK-DOCUMENT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The notebook document's URI."
                        :TYPE URI :READER NOTEBOOK-DOCUMENT-URI)
                       (NOTEBOOK-TYPE :INITARG :NOTEBOOK-TYPE :DOCUMENTATION "*
* The type of the notebook."
                        :TYPE COMMON-LISP:STRING :READER NOTEBOOK-DOCUMENT-NOTEBOOK-TYPE)
                       (VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document (it will increase after each
* change, including undo/redo)."
                        :TYPE INTEGER :READER NOTEBOOK-DOCUMENT-VERSION)
                       (METADATA? :INITARG :METADATA :DOCUMENTATION "*
* Additional metadata stored with the notebook
* document."
                        :TYPE LSP-OBJECT :READER NOTEBOOK-DOCUMENT-METADATA)
                       (CELLS :INITARG :CELLS :DOCUMENTATION "*
* The cells of a notebook."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY NOTEBOOK-CELL) :READER
                        NOTEBOOK-DOCUMENT-CELLS)))

(COMMON-LISP:DEFCLASS NOTEBOOK-CELL (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* The cell's kind"
                        :TYPE NOTEBOOK-CELL-KIND :READER NOTEBOOK-CELL-KIND)
                       (DOCUMENT :INITARG :DOCUMENT :DOCUMENTATION "*
* The URI of the cell's text document
* content."
                        :TYPE DOCUMENT-URI :READER NOTEBOOK-CELL-DOCUMENT)
                       (METADATA? :INITARG :METADATA :DOCUMENTATION "*
* Additional metadata stored with the cell."
                        :TYPE LSP-OBJECT :READER NOTEBOOK-CELL-METADATA)
                       (EXECUTION-SUMMARY? :INITARG :EXECUTION-SUMMARY :DOCUMENTATION "*
* Additional execution summary information
* if supported by the client."
                        :TYPE EXECUTION-SUMMARY :READER NOTEBOOK-CELL-EXECUTION-SUMMARY)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE NOTEBOOK-CELL-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER NOTEBOOK-CELL-KIND.MARKUP 1)
 (COMMON-LISP:DEFPARAMETER NOTEBOOK-CELL-KIND.CODE 2))

(COMMON-LISP:DEFCLASS EXECUTION-SUMMARY (LEM-LSP-UTILS/JSON:OBJECT)
                      ((EXECUTION-ORDER :INITARG :EXECUTION-ORDER :DOCUMENTATION "*
* A strict monotonically increasing value
* indicating the execution order of a cell
* inside a notebook."
                        :TYPE UINTEGER :READER EXECUTION-SUMMARY-EXECUTION-ORDER)
                       (SUCCESS? :INITARG :SUCCESS :DOCUMENTATION "*
* Whether the execution was successful or
* not if known by the client."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER EXECUTION-SUMMARY-SUCCESS)))

(COMMON-LISP:DEFCLASS NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NOTEBOOK :INITARG :NOTEBOOK :DOCUMENTATION "*
* A filter that matches against the notebook
* containing the notebook cell. If a string
* value is provided it matches against the
* notebook type. '*' matches every notebook."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING NOTEBOOK-DOCUMENT-FILTER) :READER
                        NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER-NOTEBOOK)
                       (LANGUAGE? :INITARG :LANGUAGE :DOCUMENTATION "*
* A language id like `python`.
*
* Will be matched against the language id of the
* notebook cell document. '*' matches every language."
                        :TYPE COMMON-LISP:STRING :READER
                        NOTEBOOK-CELL-TEXT-DOCUMENT-FILTER-LANGUAGE)))

(COMMON-LISP:DEFTYPE NOTEBOOK-DOCUMENT-FILTER ()
  '(COMMON-LISP:OR
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE
     ("notebookType" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
     ("scheme" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T)
     ("pattern" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE
     ("notebookType" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T)
     ("scheme" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL)
     ("pattern" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T))
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE
     ("notebookType" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T)
     ("scheme" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:T)
     ("pattern" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))))

(COMMON-LISP:DEFCLASS NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether implementation supports dynamic registration. If this is
* set to `true` the client supports the new
* `(TextDocumentRegistrationOptions & StaticRegistrationOptions)`
* return value for the corresponding server capability as well."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (EXECUTION-SUMMARY-SUPPORT? :INITARG :EXECUTION-SUMMARY-SUPPORT
                        :DOCUMENTATION "*
* The client supports sending execution summary data per cell."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        NOTEBOOK-DOCUMENT-SYNC-CLIENT-CAPABILITIES-EXECUTION-SUMMARY-SUPPORT)))

(COMMON-LISP:DEFCLASS NOTEBOOK-DOCUMENT-SYNC-REGISTRATION-OPTIONS
                      (NOTEBOOK-DOCUMENT-SYNC-OPTIONS STATIC-REGISTRATION-OPTIONS) COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NOTEBOOK-DOCUMENT :INITARG :NOTEBOOK-DOCUMENT :DOCUMENTATION "*
* The notebook document that got opened."
                        :TYPE NOTEBOOK-DOCUMENT :READER
                        DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT)
                       (CELL-TEXT-DOCUMENTS :INITARG :CELL-TEXT-DOCUMENTS :DOCUMENTATION "*
* The text documents that represent the content
* of a notebook cell."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-DOCUMENT-ITEM) :READER
                        DID-OPEN-NOTEBOOK-DOCUMENT-PARAMS-CELL-TEXT-DOCUMENTS)))

(COMMON-LISP:DEFCLASS DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NOTEBOOK-DOCUMENT :INITARG :NOTEBOOK-DOCUMENT :DOCUMENTATION "*
* The notebook document that did change. The version number points
* to the version after all provided changes have been applied."
                        :TYPE VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER :READER
                        DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT)
                       (CHANGE :INITARG :CHANGE :DOCUMENTATION "*
* The actual changes to the notebook document.
*
* The change describes single state change to the notebook document.
* So it moves a notebook document, its cells and its cell text document
* contents from state S to S'.
*
* To mirror the content of a notebook using change events use the
* following approach:
* - start with the same initial content
* - apply the 'notebookDocument/didChange' notifications in the order
*   you receive them."
                        :TYPE NOTEBOOK-DOCUMENT-CHANGE-EVENT :READER
                        DID-CHANGE-NOTEBOOK-DOCUMENT-PARAMS-CHANGE)))

(COMMON-LISP:DEFCLASS VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this notebook document."
                        :TYPE INTEGER :READER VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER-VERSION)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The notebook document's URI."
                        :TYPE URI :READER VERSIONED-NOTEBOOK-DOCUMENT-IDENTIFIER-URI)))

(COMMON-LISP:DEFCLASS NOTEBOOK-CELL-ARRAY-CHANGE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((START :INITARG :START :DOCUMENTATION "*
* The start offset of the cell that changed."
                        :TYPE UINTEGER :READER NOTEBOOK-CELL-ARRAY-CHANGE-START)
                       (DELETE-COUNT :INITARG :DELETE-COUNT :DOCUMENTATION "*
* The deleted cells"
                        :TYPE UINTEGER :READER NOTEBOOK-CELL-ARRAY-CHANGE-DELETE-COUNT)
                       (CELLS? :INITARG :CELLS :DOCUMENTATION "*
* The new cells, if any"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY NOTEBOOK-CELL) :READER
                        NOTEBOOK-CELL-ARRAY-CHANGE-CELLS)))

(COMMON-LISP:DEFCLASS DID-SAVE-NOTEBOOK-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NOTEBOOK-DOCUMENT :INITARG :NOTEBOOK-DOCUMENT :DOCUMENTATION "*
* The notebook document that got saved."
                        :TYPE NOTEBOOK-DOCUMENT-IDENTIFIER :READER
                        DID-SAVE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT)))

(COMMON-LISP:DEFCLASS DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NOTEBOOK-DOCUMENT :INITARG :NOTEBOOK-DOCUMENT :DOCUMENTATION "*
* The notebook document that got closed."
                        :TYPE NOTEBOOK-DOCUMENT-IDENTIFIER :READER
                        DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS-NOTEBOOK-DOCUMENT)
                       (CELL-TEXT-DOCUMENTS :INITARG :CELL-TEXT-DOCUMENTS :DOCUMENTATION "*
* The text documents that represent the content
* of a notebook cell that got closed."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-DOCUMENT-IDENTIFIER) :READER
                        DID-CLOSE-NOTEBOOK-DOCUMENT-PARAMS-CELL-TEXT-DOCUMENTS)))

(COMMON-LISP:DEFCLASS NOTEBOOK-DOCUMENT-IDENTIFIER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The notebook document's URI."
                        :TYPE URI :READER NOTEBOOK-DOCUMENT-IDENTIFIER-URI)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS
                      (TEXT-DOCUMENT-REGISTRATION-OPTIONS)
                      ((SYNC-KIND :INITARG :SYNC-KIND :DOCUMENTATION "*
* How documents are synced to the server. See TextDocumentSyncKind.Full
* and TextDocumentSyncKind.Incremental."
                        :TYPE TEXT-DOCUMENT-SYNC-KIND :READER
                        TEXT-DOCUMENT-CHANGE-REGISTRATION-OPTIONS-SYNC-KIND)))

(COMMON-LISP:DEFCLASS DID-CHANGE-TEXT-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that did change. The version number points
* to the version after all provided content changes have
* been applied."
                        :TYPE VERSIONED-TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-CHANGE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (CONTENT-CHANGES :INITARG :CONTENT-CHANGES :DOCUMENTATION "*
* The actual content changes. The content changes describe single state
* changes to the document. So if there are two content changes c1 (at
* array index 0) and c2 (at array index 1) for a document in state S then
* c1 moves the document from S to S' and c2 from S' to S''. So c1 is
* computed on the state S and c2 is computed on the state S'.
*
* To mirror the content of a document using change events use the following
* approach:
* - start with the same initial content
* - apply the 'textDocument/didChange' notifications in the order you
*   receive them.
* - apply the `TextDocumentContentChangeEvent`s in a single notification
*   in the order you receive them."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY TEXT-DOCUMENT-CONTENT-CHANGE-EVENT)
                        :READER DID-CHANGE-TEXT-DOCUMENT-PARAMS-CONTENT-CHANGES)))

(COMMON-LISP:DEFTYPE TEXT-DOCUMENT-CONTENT-CHANGE-EVENT ()
  '(COMMON-LISP:OR
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE ("range" :TYPE RANGE :OPTIONAL-P COMMON-LISP:NIL)
     ("rangeLength" :TYPE UINTEGER :OPTIONAL-P COMMON-LISP:T)
     ("text" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))
    (LEM-LSP-UTILS/TYPE:TS-INTERFACE
     ("text" :TYPE COMMON-LISP:STRING :OPTIONAL-P COMMON-LISP:NIL))))

(COMMON-LISP:DEFCLASS DID-CLOSE-TEXT-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was closed."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-CLOSE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS DID-OPEN-TEXT-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was opened."
                        :TYPE TEXT-DOCUMENT-ITEM :READER
                        DID-OPEN-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)))

(COMMON-LISP:DEFCLASS SAVE-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((INCLUDE-TEXT? :INITARG :INCLUDE-TEXT :DOCUMENTATION "*
* The client is supposed to include the content on save."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SAVE-OPTIONS-INCLUDE-TEXT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS (TEXT-DOCUMENT-REGISTRATION-OPTIONS)
                      ((INCLUDE-TEXT? :INITARG :INCLUDE-TEXT :DOCUMENTATION "*
* The client is supposed to include the content on save."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SAVE-REGISTRATION-OPTIONS-INCLUDE-TEXT)))

(COMMON-LISP:DEFCLASS DID-SAVE-TEXT-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that was saved."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (TEXT? :INITARG :TEXT :DOCUMENTATION "*
* Optional the content when saved. Depends on the includeText value
* when the save notification was requested."
                        :TYPE COMMON-LISP:STRING :READER DID-SAVE-TEXT-DOCUMENT-PARAMS-TEXT)))

(COMMON-LISP:DEFCLASS WILL-SAVE-TEXT-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The document that will be saved."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        WILL-SAVE-TEXT-DOCUMENT-PARAMS-TEXT-DOCUMENT)
                       (REASON :INITARG :REASON :DOCUMENTATION "*
* The 'TextDocumentSaveReason'."
                        :TYPE TEXT-DOCUMENT-SAVE-REASON :READER
                        WILL-SAVE-TEXT-DOCUMENT-PARAMS-REASON)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SAVE-REASON () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.MANUAL 1)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.AFTER-DELAY 2)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SAVE-REASON.FOCUS-OUT 3))

(COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SAVE-REASON ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS COMMAND (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* Title of the command, like `save`."
                        :TYPE COMMON-LISP:STRING :READER COMMAND-TITLE)
                       (COMMAND :INITARG :COMMAND :DOCUMENTATION "*
* The identifier of the actual command handler."
                        :TYPE COMMON-LISP:STRING :READER COMMAND-COMMAND)
                       (ARGUMENTS? :INITARG :ARGUMENTS :DOCUMENTATION "*
* Arguments that the command handler should be
* invoked with."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY LSP-ANY) :READER COMMAND-ARGUMENTS)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range at which the message applies."
                        :TYPE RANGE :READER DIAGNOSTIC-RANGE)
                       (SEVERITY? :INITARG :SEVERITY :DOCUMENTATION "*
* The diagnostic's severity. Can be omitted. If omitted it is up to the
* client to interpret diagnostics as error, warning, info or hint."
                        :TYPE DIAGNOSTIC-SEVERITY :READER DIAGNOSTIC-SEVERITY)
                       (CODE? :INITARG :CODE :DOCUMENTATION "*
* The diagnostic's code, which might appear in the user interface."
                        :TYPE (COMMON-LISP:OR INTEGER COMMON-LISP:STRING) :READER DIAGNOSTIC-CODE)
                       (CODE-DESCRIPTION? :INITARG :CODE-DESCRIPTION :DOCUMENTATION "*
* An optional property to describe the error code.
*
* @since 3.16.0"
                        :TYPE CODE-DESCRIPTION :READER DIAGNOSTIC-CODE-DESCRIPTION)
                       (SOURCE? :INITARG :SOURCE :DOCUMENTATION "*
* A human-readable string describing the source of this
* diagnostic, e.g. 'typescript' or 'super lint'."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-SOURCE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The diagnostic's message."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-MESSAGE)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Additional metadata about the diagnostic.
*
* @since 3.15.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-TAG) :READER DIAGNOSTIC-TAGS)
                       (RELATED-INFORMATION? :INITARG :RELATED-INFORMATION :DOCUMENTATION "*
* An array of related diagnostic information, e.g. when symbol-names within
* a scope collide all definitions can be marked via this property."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY DIAGNOSTIC-RELATED-INFORMATION) :READER
                        DIAGNOSTIC-RELATED-INFORMATION)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved between a
* `textDocument/publishDiagnostics` notification and
* `textDocument/codeAction` request.
*
* @since 3.16.0"
                        :TYPE UNKNOWN :READER DIAGNOSTIC-DATA)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DIAGNOSTIC-SEVERITY () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.ERROR 1)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.WARNING 2)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.INFORMATION 3)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-SEVERITY.HINT 4))

(COMMON-LISP:DEFTYPE DIAGNOSTIC-SEVERITY ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 4)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE DIAGNOSTIC-TAG () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-TAG.UNNECESSARY 1)
 (COMMON-LISP:DEFPARAMETER DIAGNOSTIC-TAG.DEPRECATED 2))

(COMMON-LISP:DEFTYPE DIAGNOSTIC-TAG ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS DIAGNOSTIC-RELATED-INFORMATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LOCATION :INITARG :LOCATION :DOCUMENTATION "*
* The location of this related diagnostic information."
                        :TYPE LOCATION :READER DIAGNOSTIC-RELATED-INFORMATION-LOCATION)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The message of this related diagnostic information."
                        :TYPE COMMON-LISP:STRING :READER DIAGNOSTIC-RELATED-INFORMATION-MESSAGE)))

(COMMON-LISP:DEFCLASS CODE-DESCRIPTION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((HREF :INITARG :HREF :DOCUMENTATION "*
* An URI to open with more information about the diagnostic error."
                        :TYPE URI :READER CODE-DESCRIPTION-HREF)))

(COMMON-LISP:DEFCLASS DOCUMENT-FILTER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LANGUAGE? :INITARG :LANGUAGE :DOCUMENTATION "*
* A language id, like `typescript`."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-LANGUAGE)
                       (SCHEME? :INITARG :SCHEME :DOCUMENTATION "*
* A Uri [scheme](#Uri.scheme), like `file` or `untitled`."
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-SCHEME)
                       (PATTERN? :INITARG :PATTERN :DOCUMENTATION "*
* A glob pattern, like `*.{ts,js}`.
*
* Glob patterns can have the following syntax:
* - `*` to match one or more characters in a path segment
* - `?` to match on one character in a path segment
* - `**` to match any number of path segments, including none
* - `{}` to group sub patterns into an OR expression. (e.g. `**​/*.{ts,js}`
*   matches all TypeScript and JavaScript files)
* - `[]` to declare a range of characters to match in a path segment
*   (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)
* - `[!...]` to negate a range of characters to match in a path segment
*   (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but
*   not `example.0`)"
                        :TYPE COMMON-LISP:STRING :READER DOCUMENT-FILTER-PATTERN)))

(COMMON-LISP:DEFTYPE DOCUMENT-SELECTOR () '(LEM-LSP-UTILS/TYPE:TS-ARRAY DOCUMENT-FILTER))

(COMMON-LISP:DEFCLASS LOCATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "" :TYPE DOCUMENT-URI :READER
                        LOCATION-URI)
                       (RANGE :INITARG :RANGE :DOCUMENTATION "" :TYPE RANGE :READER
                        LOCATION-RANGE)))

(COMMON-LISP:DEFCLASS LOCATION-LINK (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ORIGIN-SELECTION-RANGE? :INITARG :ORIGIN-SELECTION-RANGE :DOCUMENTATION "*
* Span of the origin of this link.
*
* Used as the underlined span for mouse interaction. Defaults to the word
* range at the mouse position."
                        :TYPE RANGE :READER LOCATION-LINK-ORIGIN-SELECTION-RANGE)
                       (TARGET-URI :INITARG :TARGET-URI :DOCUMENTATION "*
* The target resource identifier of this link."
                        :TYPE DOCUMENT-URI :READER LOCATION-LINK-TARGET-URI)
                       (TARGET-RANGE :INITARG :TARGET-RANGE :DOCUMENTATION "*
* The full target range of this link. If the target for example is a symbol
* then target range is the range enclosing this symbol not including
* leading/trailing whitespace but everything else like comments. This
* information is typically used to highlight the range in the editor."
                        :TYPE RANGE :READER LOCATION-LINK-TARGET-RANGE)
                       (TARGET-SELECTION-RANGE :INITARG :TARGET-SELECTION-RANGE :DOCUMENTATION "*
* The range that should be selected and revealed when this link is being
* followed, e.g the name of a function. Must be contained by the
* `targetRange`. See also `DocumentSymbol#range`"
                        :TYPE RANGE :READER LOCATION-LINK-TARGET-SELECTION-RANGE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE MARKUP-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER MARKUP-KIND.PLAIN-TEXT "plaintext")
 (COMMON-LISP:DEFPARAMETER MARKUP-KIND.MARKDOWN "markdown"))

(COMMON-LISP:DEFTYPE MARKUP-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "plaintext")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "markdown")))

(COMMON-LISP:DEFCLASS MARKUP-CONTENT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* The type of the Markup"
                        :TYPE MARKUP-KIND :READER MARKUP-CONTENT-KIND)
                       (VALUE :INITARG :VALUE :DOCUMENTATION "*
* The content itself"
                        :TYPE COMMON-LISP:STRING :READER MARKUP-CONTENT-VALUE)))

(COMMON-LISP:DEFCLASS PARTIAL-RESULT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((PARTIAL-RESULT-TOKEN? :INITARG :PARTIAL-RESULT-TOKEN :DOCUMENTATION "*
* An optional token that a server can use to report partial results (e.g.
* streaming) to the client."
                        :TYPE PROGRESS-TOKEN :READER PARTIAL-RESULT-PARAMS-PARTIAL-RESULT-TOKEN)))

(COMMON-LISP:DEFCLASS POSITION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LINE :INITARG :LINE :DOCUMENTATION "*
* Line position in a document (zero-based)."
                        :TYPE UINTEGER :READER POSITION-LINE)
                       (CHARACTER :INITARG :CHARACTER :DOCUMENTATION "*
* Character offset on a line in a document (zero-based). The meaning of this
* offset is determined by the negotiated `PositionEncodingKind`.
*
* If the character value is greater than the line length it defaults back
* to the line length."
                        :TYPE UINTEGER :READER POSITION-CHARACTER)))

(COMMON-LISP:DEFTYPE POSITION-ENCODING-KIND () 'COMMON-LISP:STRING)

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE POSITION-ENCODING-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER POSITION-ENCODING-KIND.UTF8 "utf-8")
 (COMMON-LISP:DEFPARAMETER POSITION-ENCODING-KIND.UTF16 "utf-16")
 (COMMON-LISP:DEFPARAMETER POSITION-ENCODING-KIND.UTF32 "utf-32"))

(COMMON-LISP:DEFCLASS RANGE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((START :INITARG :START :DOCUMENTATION "*
* The range's start position."
                        :TYPE POSITION :READER RANGE-START)
                       (END :INITARG :END :DOCUMENTATION "*
* The range's end position."
                        :TYPE POSITION :READER RANGE-END)))

(COMMON-LISP:DEFCLASS REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ENGINE :INITARG :ENGINE :DOCUMENTATION "*
* The engine's name."
                        :TYPE COMMON-LISP:STRING :READER
                        REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES-ENGINE)
                       (VERSION? :INITARG :VERSION :DOCUMENTATION "*
* The engine's version."
                        :TYPE COMMON-LISP:STRING :READER
                        REGULAR-EXPRESSIONS-CLIENT-CAPABILITIES-VERSION)))

(COMMON-LISP:DEFCLASS CREATE-FILE-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((OVERWRITE? :INITARG :OVERWRITE :DOCUMENTATION "*
* Overwrite existing file. Overwrite wins over `ignoreIfExists`"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER CREATE-FILE-OPTIONS-OVERWRITE)
                       (IGNORE-IF-EXISTS? :INITARG :IGNORE-IF-EXISTS :DOCUMENTATION "*
* Ignore if exists."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CREATE-FILE-OPTIONS-IGNORE-IF-EXISTS)))

(COMMON-LISP:DEFCLASS CREATE-FILE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A create"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "create") :READER
                        CREATE-FILE-KIND)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The resource to create."
                        :TYPE DOCUMENT-URI :READER CREATE-FILE-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Additional options"
                        :TYPE CREATE-FILE-OPTIONS :READER CREATE-FILE-OPTIONS)
                       (ANNOTATION-ID? :INITARG :ANNOTATION-ID :DOCUMENTATION "*
* An optional annotation identifier describing the operation.
*
* @since 3.16.0"
                        :TYPE CHANGE-ANNOTATION-IDENTIFIER :READER CREATE-FILE-ANNOTATION-ID)))

(COMMON-LISP:DEFCLASS RENAME-FILE-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((OVERWRITE? :INITARG :OVERWRITE :DOCUMENTATION "*
* Overwrite target if existing. Overwrite wins over `ignoreIfExists`"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER RENAME-FILE-OPTIONS-OVERWRITE)
                       (IGNORE-IF-EXISTS? :INITARG :IGNORE-IF-EXISTS :DOCUMENTATION "*
* Ignores if target exists."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        RENAME-FILE-OPTIONS-IGNORE-IF-EXISTS)))

(COMMON-LISP:DEFCLASS RENAME-FILE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A rename"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "rename") :READER
                        RENAME-FILE-KIND)
                       (OLD-URI :INITARG :OLD-URI :DOCUMENTATION "*
* The old (existing) location."
                        :TYPE DOCUMENT-URI :READER RENAME-FILE-OLD-URI)
                       (NEW-URI :INITARG :NEW-URI :DOCUMENTATION "*
* The new location."
                        :TYPE DOCUMENT-URI :READER RENAME-FILE-NEW-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Rename options."
                        :TYPE RENAME-FILE-OPTIONS :READER RENAME-FILE-OPTIONS)
                       (ANNOTATION-ID? :INITARG :ANNOTATION-ID :DOCUMENTATION "*
* An optional annotation identifier describing the operation.
*
* @since 3.16.0"
                        :TYPE CHANGE-ANNOTATION-IDENTIFIER :READER RENAME-FILE-ANNOTATION-ID)))

(COMMON-LISP:DEFCLASS DELETE-FILE-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RECURSIVE? :INITARG :RECURSIVE :DOCUMENTATION "*
* Delete the content recursively if a folder is denoted."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER DELETE-FILE-OPTIONS-RECURSIVE)
                       (IGNORE-IF-NOT-EXISTS? :INITARG :IGNORE-IF-NOT-EXISTS :DOCUMENTATION "*
* Ignore the operation if the file doesn't exist."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DELETE-FILE-OPTIONS-IGNORE-IF-NOT-EXISTS)))

(COMMON-LISP:DEFCLASS DELETE-FILE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "*
* A delete"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "delete") :READER
                        DELETE-FILE-KIND)
                       (URI :INITARG :URI :DOCUMENTATION "*
* The file to delete."
                        :TYPE DOCUMENT-URI :READER DELETE-FILE-URI)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Delete options."
                        :TYPE DELETE-FILE-OPTIONS :READER DELETE-FILE-OPTIONS)
                       (ANNOTATION-ID? :INITARG :ANNOTATION-ID :DOCUMENTATION "*
* An optional annotation identifier describing the operation.
*
* @since 3.16.0"
                        :TYPE CHANGE-ANNOTATION-IDENTIFIER :READER DELETE-FILE-ANNOTATION-ID)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-EDIT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document to change."
                        :TYPE OPTIONAL-VERSIONED-TEXT-DOCUMENT-IDENTIFIER :READER
                        TEXT-DOCUMENT-EDIT-TEXT-DOCUMENT)
                       (EDITS :INITARG :EDITS :DOCUMENTATION "*
* The edits to be applied.
*
* @since 3.16.0 - support for AnnotatedTextEdit. This is guarded by the
* client capability `workspace.workspaceEdit.changeAnnotationSupport`"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY
                         (COMMON-LISP:OR TEXT-EDIT ANNOTATED-TEXT-EDIT))
                        :READER TEXT-DOCUMENT-EDIT-EDITS)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-IDENTIFIER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The text document's URI."
                        :TYPE DOCUMENT-URI :READER TEXT-DOCUMENT-IDENTIFIER-URI)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The text document's URI."
                        :TYPE DOCUMENT-URI :READER TEXT-DOCUMENT-ITEM-URI)
                       (LANGUAGE-ID :INITARG :LANGUAGE-ID :DOCUMENTATION "*
* The text document's language identifier."
                        :TYPE COMMON-LISP:STRING :READER TEXT-DOCUMENT-ITEM-LANGUAGE-ID)
                       (VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document (it will increase after each
* change, including undo/redo)."
                        :TYPE INTEGER :READER TEXT-DOCUMENT-ITEM-VERSION)
                       (TEXT :INITARG :TEXT :DOCUMENTATION "*
* The content of the opened text document."
                        :TYPE COMMON-LISP:STRING :READER TEXT-DOCUMENT-ITEM-TEXT)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-POSITION-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "*
* The text document."
                        :TYPE TEXT-DOCUMENT-IDENTIFIER :READER
                        TEXT-DOCUMENT-POSITION-PARAMS-TEXT-DOCUMENT)
                       (POSITION :INITARG :POSITION :DOCUMENTATION "*
* The position inside the text document."
                        :TYPE POSITION :READER TEXT-DOCUMENT-POSITION-PARAMS-POSITION)))

(COMMON-LISP:DEFCLASS TEXT-EDIT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((RANGE :INITARG :RANGE :DOCUMENTATION "*
* The range of the text document to be manipulated. To insert
* text into a document create a range where start === end."
                        :TYPE RANGE :READER TEXT-EDIT-RANGE)
                       (NEW-TEXT :INITARG :NEW-TEXT :DOCUMENTATION "*
* The string to be inserted. For delete operations use an
* empty string."
                        :TYPE COMMON-LISP:STRING :READER TEXT-EDIT-NEW-TEXT)))

(COMMON-LISP:DEFCLASS CHANGE-ANNOTATION (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL :INITARG :LABEL :DOCUMENTATION "*
* A human-readable string describing the actual change. The string
* is rendered prominent in the user interface."
                        :TYPE COMMON-LISP:STRING :READER CHANGE-ANNOTATION-LABEL)
                       (NEEDS-CONFIRMATION? :INITARG :NEEDS-CONFIRMATION :DOCUMENTATION "*
* A flag which indicates that user confirmation is needed
* before applying the change."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        CHANGE-ANNOTATION-NEEDS-CONFIRMATION)
                       (DESCRIPTION? :INITARG :DESCRIPTION :DOCUMENTATION "*
* A human-readable string which is rendered less prominent in
* the user interface."
                        :TYPE COMMON-LISP:STRING :READER CHANGE-ANNOTATION-DESCRIPTION)))

(COMMON-LISP:DEFTYPE CHANGE-ANNOTATION-IDENTIFIER () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFCLASS ANNOTATED-TEXT-EDIT (TEXT-EDIT)
                      ((ANNOTATION-ID :INITARG :ANNOTATION-ID :DOCUMENTATION "*
* The actual annotation identifier."
                        :TYPE CHANGE-ANNOTATION-IDENTIFIER :READER
                        ANNOTATED-TEXT-EDIT-ANNOTATION-ID)))

(COMMON-LISP:DEFTYPE TRACE-VALUE ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "off")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "messages")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "verbose")))

(COMMON-LISP:DEFTYPE DOCUMENT-URI () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFTYPE URI () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFCLASS VERSIONED-TEXT-DOCUMENT-IDENTIFIER (TEXT-DOCUMENT-IDENTIFIER)
                      ((VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document.
*
* The version number of a document will increase after each change,
* including undo/redo. The number doesn't need to be consecutive."
                        :TYPE INTEGER :READER VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION)))

(COMMON-LISP:DEFCLASS OPTIONAL-VERSIONED-TEXT-DOCUMENT-IDENTIFIER (TEXT-DOCUMENT-IDENTIFIER)
                      ((VERSION :INITARG :VERSION :DOCUMENTATION "*
* The version number of this document. If an optional versioned text document
* identifier is sent from the server to the client and the file is not
* open in the editor (the server has not received an open notification
* before) the server can send `null` to indicate that the version is
* known and the content on disk is the master (as specified with document
* content ownership).
*
* The version number of a document will increase after each change,
* including undo/redo. The number doesn't need to be consecutive."
                        :TYPE
                        (COMMON-LISP:OR INTEGER
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER OPTIONAL-VERSIONED-TEXT-DOCUMENT-IDENTIFIER-VERSION)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-BEGIN (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "begin") :READER
                        WORK-DONE-PROGRESS-BEGIN-KIND)
                       (TITLE :INITARG :TITLE :DOCUMENTATION "*
* Mandatory title of the progress operation. Used to briefly inform about
* the kind of operation being performed.
*
* Examples: \"Indexing\" or \"Linking dependencies\"."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-BEGIN-TITLE)
                       (CANCELLABLE? :INITARG :CANCELLABLE :DOCUMENTATION "*
* Controls if a cancel button should show to allow the user to cancel the
* long running operation. Clients that don't support cancellation are
* allowed to ignore the setting."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-BEGIN-CANCELLABLE)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, more detailed associated progress message. Contains
* complementary information to the `title`.
*
* Examples: \"3/25 files\", \"project/src/module2\", \"node_modules/some_dep\".
* If unset, the previous progress message (if any) is still valid."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-BEGIN-MESSAGE)
                       (PERCENTAGE? :INITARG :PERCENTAGE :DOCUMENTATION "*
* Optional progress percentage to display (value 100 is considered 100%).
* If not provided infinite progress is assumed and clients are allowed
* to ignore the `percentage` value in subsequent in report notifications.
*
* The value should be steadily rising. Clients are free to ignore values
* that are not following this rule. The value range is [0, 100]"
                        :TYPE UINTEGER :READER WORK-DONE-PROGRESS-BEGIN-PERCENTAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-REPORT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "report") :READER
                        WORK-DONE-PROGRESS-REPORT-KIND)
                       (CANCELLABLE? :INITARG :CANCELLABLE :DOCUMENTATION "*
* Controls enablement state of a cancel button. This property is only valid
* if a cancel button got requested in the `WorkDoneProgressBegin` payload.
*
* Clients that don't support cancellation or don't support control the
* button's enablement state are allowed to ignore the setting."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-REPORT-CANCELLABLE)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, more detailed associated progress message. Contains
* complementary information to the `title`.
*
* Examples: \"3/25 files\", \"project/src/module2\", \"node_modules/some_dep\".
* If unset, the previous progress message (if any) is still valid."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-REPORT-MESSAGE)
                       (PERCENTAGE? :INITARG :PERCENTAGE :DOCUMENTATION "*
* Optional progress percentage to display (value 100 is considered 100%).
* If not provided infinite progress is assumed and clients are allowed
* to ignore the `percentage` value in subsequent in report notifications.
*
* The value should be steadily rising. Clients are free to ignore values
* that are not following this rule. The value range is [0, 100]"
                        :TYPE UINTEGER :READER WORK-DONE-PROGRESS-REPORT-PERCENTAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-END (LEM-LSP-UTILS/JSON:OBJECT)
                      ((KIND :INITARG :KIND :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "end") :READER
                        WORK-DONE-PROGRESS-END-KIND)
                       (MESSAGE? :INITARG :MESSAGE :DOCUMENTATION "*
* Optional, a final message indicating to for example indicate the outcome
* of the operation."
                        :TYPE COMMON-LISP:STRING :READER WORK-DONE-PROGRESS-END-MESSAGE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((WORK-DONE-TOKEN? :INITARG :WORK-DONE-TOKEN :DOCUMENTATION "*
* An optional token that a server can use to report work done progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-PARAMS-WORK-DONE-TOKEN)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((WORK-DONE-PROGRESS? :INITARG :WORK-DONE-PROGRESS :DOCUMENTATION "" :TYPE
                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORK-DONE-PROGRESS-OPTIONS-WORK-DONE-PROGRESS)))

(COMMON-LISP:DEFCLASS WORKSPACE-EDIT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DOCUMENT-CHANGES? :INITARG :DOCUMENT-CHANGES :DOCUMENTATION "*
* The client supports versioned document changes in `WorkspaceEdit`s"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-DOCUMENT-CHANGES)
                       (RESOURCE-OPERATIONS? :INITARG :RESOURCE-OPERATIONS :DOCUMENTATION "*
* The resource operations the client supports. Clients should at least
* support 'create', 'rename' and 'delete' files and folders.
*
* @since 3.13.0"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY RESOURCE-OPERATION-KIND) :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-RESOURCE-OPERATIONS)
                       (FAILURE-HANDLING? :INITARG :FAILURE-HANDLING :DOCUMENTATION "*
* The failure handling strategy of a client if applying the workspace edit
* fails.
*
* @since 3.13.0"
                        :TYPE FAILURE-HANDLING-KIND :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-FAILURE-HANDLING)
                       (NORMALIZES-LINE-ENDINGS? :INITARG :NORMALIZES-LINE-ENDINGS :DOCUMENTATION "*
* Whether the client normalizes line endings to the client specific
* setting.
* If set to `true` the client will normalize line ending characters
* in a workspace edit to the client specific new line character(s).
*
* @since 3.16.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-EDIT-CLIENT-CAPABILITIES-NORMALIZES-LINE-ENDINGS)
                       (CHANGE-ANNOTATION-SUPPORT? :INITARG :CHANGE-ANNOTATION-SUPPORT
                        :DOCUMENTATION "*
* Whether the client in general supports change annotations on text edits,
* create file, rename file and delete file changes.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("groupsOnLabel" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER WORKSPACE-EDIT-CLIENT-CAPABILITIES-CHANGE-ANNOTATION-SUPPORT)))

(COMMON-LISP:DEFTYPE RESOURCE-OPERATION-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "create")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "rename")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "delete")))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE RESOURCE-OPERATION-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.CREATE "create")
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.RENAME "rename")
 (COMMON-LISP:DEFPARAMETER RESOURCE-OPERATION-KIND.DELETE "delete"))

(COMMON-LISP:DEFTYPE FAILURE-HANDLING-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "abort")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "transactional")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "undo")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "textOnlyTransactional")))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FAILURE-HANDLING-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.ABORT "abort")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.TRANSACTIONAL "transactional")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.TEXT-ONLY-TRANSACTIONAL "textOnlyTransactional")
 (COMMON-LISP:DEFPARAMETER FAILURE-HANDLING-KIND.UNDO "undo"))

(COMMON-LISP:DEFCLASS LOG-MESSAGE-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}"
                        :TYPE MESSAGE-TYPE :READER LOG-MESSAGE-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message"
                        :TYPE COMMON-LISP:STRING :READER LOG-MESSAGE-PARAMS-MESSAGE)))

(COMMON-LISP:DEFCLASS SHOW-DOCUMENT-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SUPPORT :INITARG :SUPPORT :DOCUMENTATION "*
* The client has support for the show document
* request."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SHOW-DOCUMENT-CLIENT-CAPABILITIES-SUPPORT)))

(COMMON-LISP:DEFCLASS SHOW-DOCUMENT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The document uri to show."
                        :TYPE URI :READER SHOW-DOCUMENT-PARAMS-URI)
                       (EXTERNAL? :INITARG :EXTERNAL :DOCUMENTATION "*
* Indicates to show the resource in an external program.
* To show for example `https://code.visualstudio.com/`
* in the default WEB browser set `external` to `true`."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SHOW-DOCUMENT-PARAMS-EXTERNAL)
                       (TAKE-FOCUS? :INITARG :TAKE-FOCUS :DOCUMENTATION "*
* An optional property to indicate whether the editor
* showing the document should take focus or not.
* Clients might ignore this property if an external
* program is started."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        SHOW-DOCUMENT-PARAMS-TAKE-FOCUS)
                       (SELECTION? :INITARG :SELECTION :DOCUMENTATION "*
* An optional selection range if the document is a text
* document. Clients might ignore the property if an
* external program is started or the file is not a text
* file."
                        :TYPE RANGE :READER SHOW-DOCUMENT-PARAMS-SELECTION)))

(COMMON-LISP:DEFCLASS SHOW-DOCUMENT-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SUCCESS :INITARG :SUCCESS :DOCUMENTATION "*
* A boolean indicating if the show was successful."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER SHOW-DOCUMENT-RESULT-SUCCESS)))

(COMMON-LISP:DEFCLASS SHOW-MESSAGE-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}."
                        :TYPE MESSAGE-TYPE :READER SHOW-MESSAGE-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message."
                        :TYPE COMMON-LISP:STRING :READER SHOW-MESSAGE-PARAMS-MESSAGE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE MESSAGE-TYPE () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.ERROR 1)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.WARNING 2)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.INFO 3)
 (COMMON-LISP:DEFPARAMETER MESSAGE-TYPE.LOG 4))

(COMMON-LISP:DEFTYPE MESSAGE-TYPE ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 4)))

(COMMON-LISP:DEFCLASS SHOW-MESSAGE-REQUEST-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((MESSAGE-ACTION-ITEM? :INITARG :MESSAGE-ACTION-ITEM :DOCUMENTATION "*
* Capabilities specific to the `MessageActionItem` type."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("additionalPropertiesSupport" :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                          :OPTIONAL-P COMMON-LISP:T))
                        :READER SHOW-MESSAGE-REQUEST-CLIENT-CAPABILITIES-MESSAGE-ACTION-ITEM)))

(COMMON-LISP:DEFCLASS SHOW-MESSAGE-REQUEST-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TYPE :INITARG :TYPE :DOCUMENTATION "*
* The message type. See {@link MessageType}"
                        :TYPE MESSAGE-TYPE :READER SHOW-MESSAGE-REQUEST-PARAMS-TYPE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* The actual message"
                        :TYPE COMMON-LISP:STRING :READER SHOW-MESSAGE-REQUEST-PARAMS-MESSAGE)
                       (ACTIONS? :INITARG :ACTIONS :DOCUMENTATION "*
* The message action items to present."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY MESSAGE-ACTION-ITEM) :READER
                        SHOW-MESSAGE-REQUEST-PARAMS-ACTIONS)))

(COMMON-LISP:DEFCLASS MESSAGE-ACTION-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TITLE :INITARG :TITLE :DOCUMENTATION "*
* A short title like 'Retry', 'Open Log' etc."
                        :TYPE COMMON-LISP:STRING :READER MESSAGE-ACTION-ITEM-TITLE)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-CANCEL-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The token to be used to report progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-CANCEL-PARAMS-TOKEN)))

(COMMON-LISP:DEFCLASS WORK-DONE-PROGRESS-CREATE-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The token to be used to report progress."
                        :TYPE PROGRESS-TOKEN :READER WORK-DONE-PROGRESS-CREATE-PARAMS-TOKEN)))

(COMMON-LISP:DEFCLASS APPLY-WORKSPACE-EDIT-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((LABEL? :INITARG :LABEL :DOCUMENTATION "*
* An optional label of the workspace edit. This label is
* presented in the user interface for example on an undo
* stack to undo the workspace edit."
                        :TYPE COMMON-LISP:STRING :READER APPLY-WORKSPACE-EDIT-PARAMS-LABEL)
                       (EDIT :INITARG :EDIT :DOCUMENTATION "*
* The edits to apply."
                        :TYPE WORKSPACE-EDIT :READER APPLY-WORKSPACE-EDIT-PARAMS-EDIT)))

(COMMON-LISP:DEFCLASS APPLY-WORKSPACE-EDIT-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((APPLIED :INITARG :APPLIED :DOCUMENTATION "*
* Indicates whether the edit was applied or not."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        APPLY-WORKSPACE-EDIT-RESULT-APPLIED)
                       (FAILURE-REASON? :INITARG :FAILURE-REASON :DOCUMENTATION "*
* An optional textual description for why the edit was not applied.
* This may be used by the server for diagnostic logging or to provide
* a suitable error for a request that triggered the edit."
                        :TYPE COMMON-LISP:STRING :READER
                        APPLY-WORKSPACE-EDIT-RESULT-FAILURE-REASON)
                       (FAILED-CHANGE? :INITARG :FAILED-CHANGE :DOCUMENTATION "*
* Depending on the client's failure handling strategy `failedChange`
* might contain the index of the change that failed. This property is
* only available if the client signals a `failureHandling` strategy
* in its client capabilities."
                        :TYPE UINTEGER :READER APPLY-WORKSPACE-EDIT-RESULT-FAILED-CHANGE)))

(COMMON-LISP:DEFCLASS CONFIGURATION-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ITEMS :INITARG :ITEMS :DOCUMENTATION "" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-ARRAY CONFIGURATION-ITEM) :READER
                        CONFIGURATION-PARAMS-ITEMS)))

(COMMON-LISP:DEFCLASS CONFIGURATION-ITEM (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SCOPE-URI? :INITARG :SCOPE-URI :DOCUMENTATION "*
* The scope to get the configuration section for."
                        :TYPE DOCUMENT-URI :READER CONFIGURATION-ITEM-SCOPE-URI)
                       (SECTION? :INITARG :SECTION :DOCUMENTATION "*
* The configuration section asked for."
                        :TYPE COMMON-LISP:STRING :READER CONFIGURATION-ITEM-SECTION)))

(COMMON-LISP:DEFCLASS DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Did change configuration notification supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DID-CHANGE-CONFIGURATION-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS DID-CHANGE-CONFIGURATION-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SETTINGS :INITARG :SETTINGS :DOCUMENTATION "*
* The actual changed settings"
                        :TYPE LSP-ANY :READER DID-CHANGE-CONFIGURATION-PARAMS-SETTINGS)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Did change watched files notification supports dynamic registration.
* Please note that the current protocol doesn't support static
* configuration for file changes from the server side."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (RELATIVE-PATTERN-SUPPORT? :INITARG :RELATIVE-PATTERN-SUPPORT :DOCUMENTATION
                        "*
* Whether the client has support for relative patterns
* or not.
*
* @since 3.17.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        DID-CHANGE-WATCHED-FILES-CLIENT-CAPABILITIES-RELATIVE-PATTERN-SUPPORT)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((WATCHERS :INITARG :WATCHERS :DOCUMENTATION "*
* The watchers to register."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-SYSTEM-WATCHER) :READER
                        DID-CHANGE-WATCHED-FILES-REGISTRATION-OPTIONS-WATCHERS)))

(COMMON-LISP:DEFTYPE PATTERN () 'COMMON-LISP:STRING)

(COMMON-LISP:DEFCLASS RELATIVE-PATTERN (LEM-LSP-UTILS/JSON:OBJECT)
                      ((BASE-URI :INITARG :BASE-URI :DOCUMENTATION "*
* A workspace folder or a base URI to which this pattern will be matched
* against relatively."
                        :TYPE (COMMON-LISP:OR WORKSPACE-FOLDER URI) :READER
                        RELATIVE-PATTERN-BASE-URI)
                       (PATTERN :INITARG :PATTERN :DOCUMENTATION "*
* The actual glob pattern;"
                        :TYPE PATTERN :READER RELATIVE-PATTERN-PATTERN)))

(COMMON-LISP:DEFTYPE GLOB-PATTERN () '(COMMON-LISP:OR PATTERN RELATIVE-PATTERN))

(COMMON-LISP:DEFCLASS FILE-SYSTEM-WATCHER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((GLOB-PATTERN :INITARG :GLOB-PATTERN :DOCUMENTATION "*
* The glob pattern to watch. See {@link GlobPattern glob pattern}
* for more detail.
*
* @since 3.17.0 support for relative patterns."
                        :TYPE GLOB-PATTERN :READER FILE-SYSTEM-WATCHER-GLOB-PATTERN)
                       (KIND? :INITARG :KIND :DOCUMENTATION "*
* The kind of events of interest. If omitted it defaults
* to WatchKind.Create | WatchKind.Change | WatchKind.Delete
* which is 7."
                        :TYPE WATCH-KIND :READER FILE-SYSTEM-WATCHER-KIND)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE WATCH-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.CREATE 1)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.CHANGE 2)
 (COMMON-LISP:DEFPARAMETER WATCH-KIND.DELETE 4))

(COMMON-LISP:DEFTYPE WATCH-KIND () 'UINTEGER)

(COMMON-LISP:DEFCLASS DID-CHANGE-WATCHED-FILES-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((CHANGES :INITARG :CHANGES :DOCUMENTATION "*
* The actual file events."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-EVENT) :READER
                        DID-CHANGE-WATCHED-FILES-PARAMS-CHANGES)))

(COMMON-LISP:DEFCLASS FILE-EVENT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The file's URI."
                        :TYPE DOCUMENT-URI :READER FILE-EVENT-URI)
                       (TYPE :INITARG :TYPE :DOCUMENTATION "*
* The change type."
                        :TYPE UINTEGER :READER FILE-EVENT-TYPE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FILE-CHANGE-TYPE () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.CREATED 1)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.CHANGED 2)
 (COMMON-LISP:DEFPARAMETER FILE-CHANGE-TYPE.DELETED 3))

(COMMON-LISP:DEFTYPE FILE-CHANGE-TYPE ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 3)))

(COMMON-LISP:DEFCLASS DID-CHANGE-WORKSPACE-FOLDERS-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((EVENT :INITARG :EVENT :DOCUMENTATION "*
* The actual workspace folder change event."
                        :TYPE WORKSPACE-FOLDERS-CHANGE-EVENT :READER
                        DID-CHANGE-WORKSPACE-FOLDERS-PARAMS-EVENT)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDERS-CHANGE-EVENT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ADDED :INITARG :ADDED :DOCUMENTATION "*
* The array of added workspace folders"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER) :READER
                        WORKSPACE-FOLDERS-CHANGE-EVENT-ADDED)
                       (REMOVED :INITARG :REMOVED :DOCUMENTATION "*
* The array of the removed workspace folders"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY WORKSPACE-FOLDER) :READER
                        WORKSPACE-FOLDERS-CHANGE-EVENT-REMOVED)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Execute command supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        EXECUTE-COMMAND-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((COMMANDS :INITARG :COMMANDS :DOCUMENTATION "*
* The commands to be executed on the server"
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING) :READER
                        EXECUTE-COMMAND-OPTIONS-COMMANDS)))

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-REGISTRATION-OPTIONS (EXECUTE-COMMAND-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS EXECUTE-COMMAND-PARAMS (WORK-DONE-PROGRESS-PARAMS)
                      ((COMMAND :INITARG :COMMAND :DOCUMENTATION "*
* The identifier of the actual command handler."
                        :TYPE COMMON-LISP:STRING :READER EXECUTE-COMMAND-PARAMS-COMMAND)
                       (ARGUMENTS? :INITARG :ARGUMENTS :DOCUMENTATION "*
* Arguments that the command should be invoked with."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY LSP-ANY) :READER
                        EXECUTE-COMMAND-PARAMS-ARGUMENTS)))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Symbol request supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (SYMBOL-KIND? :INITARG :SYMBOL-KIND :DOCUMENTATION "*
* Specific capabilities for the `SymbolKind` in the `workspace/symbol`
* request."
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-KIND) :OPTIONAL-P
                          COMMON-LISP:T))
                        :READER WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-SYMBOL-KIND)
                       (TAG-SUPPORT? :INITARG :TAG-SUPPORT :DOCUMENTATION "*
* The client supports tags on `SymbolInformation` and `WorkspaceSymbol`.
* Clients supporting tags have to handle unknown tags gracefully.
*
* @since 3.16.0"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("valueSet" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :OPTIONAL-P
                          COMMON-LISP:NIL))
                        :READER WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-TAG-SUPPORT)
                       (RESOLVE-SUPPORT? :INITARG :RESOLVE-SUPPORT :DOCUMENTATION "*
* The client support partial workspace symbols. The client will send the
* request `workspaceSymbol/resolve` to the server to resolve additional
* properties.
*
* @since 3.17.0 - proposedState"
                        :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("properties" :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY COMMON-LISP:STRING)
                          :OPTIONAL-P COMMON-LISP:NIL))
                        :READER WORKSPACE-SYMBOL-CLIENT-CAPABILITIES-RESOLVE-SUPPORT)))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-OPTIONS (WORK-DONE-PROGRESS-OPTIONS)
                      ((RESOLVE-PROVIDER? :INITARG :RESOLVE-PROVIDER :DOCUMENTATION "*
* The server provides support to resolve additional
* information for a workspace symbol.
*
* @since 3.17.0"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-SYMBOL-OPTIONS-RESOLVE-PROVIDER)))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-REGISTRATION-OPTIONS (WORKSPACE-SYMBOL-OPTIONS)
                      COMMON-LISP:NIL)

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL-PARAMS (WORK-DONE-PROGRESS-PARAMS PARTIAL-RESULT-PARAMS)
                      ((QUERY :INITARG :QUERY :DOCUMENTATION "*
* A query string to filter symbols by. Clients may send an empty
* string here to request all symbols."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-SYMBOL-PARAMS-QUERY)))

(COMMON-LISP:DEFCLASS WORKSPACE-SYMBOL (LEM-LSP-UTILS/JSON:OBJECT)
                      ((NAME :INITARG :NAME :DOCUMENTATION "*
* The name of this symbol."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-SYMBOL-NAME)
                       (KIND :INITARG :KIND :DOCUMENTATION "*
* The kind of this symbol."
                        :TYPE SYMBOL-KIND :READER WORKSPACE-SYMBOL-KIND)
                       (TAGS? :INITARG :TAGS :DOCUMENTATION "*
* Tags for this completion item."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY SYMBOL-TAG) :READER
                        WORKSPACE-SYMBOL-TAGS)
                       (CONTAINER-NAME? :INITARG :CONTAINER-NAME :DOCUMENTATION "*
* The name of the symbol containing this symbol. This information is for
* user interface purposes (e.g. to render a qualifier in the user interface
* if necessary). It can't be used to re-infer a hierarchy for the document
* symbols."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-SYMBOL-CONTAINER-NAME)
                       (LOCATION :INITARG :LOCATION :DOCUMENTATION "*
* The location of this symbol. Whether a server is allowed to
* return a location without a range depends on the client
* capability `workspace.symbol.resolveSupport`.
*
* See also `SymbolInformation.location`."
                        :TYPE
                        (COMMON-LISP:OR LOCATION
                                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                                         ("uri" :TYPE DOCUMENT-URI :OPTIONAL-P COMMON-LISP:NIL)))
                        :READER WORKSPACE-SYMBOL-LOCATION)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A data entry field that is preserved on a workspace symbol between a
* workspace symbol request and a workspace symbol resolve request."
                        :TYPE LSP-ANY :READER WORKSPACE-SYMBOL-DATA)))

(COMMON-LISP:DEFCLASS FILE-OPERATION-REGISTRATION-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FILTERS :INITARG :FILTERS :DOCUMENTATION "*
* The actual filters."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-OPERATION-FILTER) :READER
                        FILE-OPERATION-REGISTRATION-OPTIONS-FILTERS)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE FILE-OPERATION-PATTERN-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER FILE-OPERATION-PATTERN-KIND.FILE "file")
 (COMMON-LISP:DEFPARAMETER FILE-OPERATION-PATTERN-KIND.FOLDER "folder"))

(COMMON-LISP:DEFTYPE FILE-OPERATION-PATTERN-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "file")
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER "folder")))

(COMMON-LISP:DEFCLASS FILE-OPERATION-PATTERN-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((IGNORE-CASE? :INITARG :IGNORE-CASE :DOCUMENTATION "*
* The pattern should be matched ignoring casing."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        FILE-OPERATION-PATTERN-OPTIONS-IGNORE-CASE)))

(COMMON-LISP:DEFCLASS FILE-OPERATION-PATTERN (LEM-LSP-UTILS/JSON:OBJECT)
                      ((GLOB :INITARG :GLOB :DOCUMENTATION "*
* The glob pattern to match. Glob patterns can have the following syntax:
* - `*` to match one or more characters in a path segment
* - `?` to match on one character in a path segment
* - `**` to match any number of path segments, including none
* - `{}` to group sub patterns into an OR expression. (e.g. `**​/*.{ts,js}`
*   matches all TypeScript and JavaScript files)
* - `[]` to declare a range of characters to match in a path segment
*   (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)
* - `[!...]` to negate a range of characters to match in a path segment
*   (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but
*   not `example.0`)"
                        :TYPE COMMON-LISP:STRING :READER FILE-OPERATION-PATTERN-GLOB)
                       (MATCHES? :INITARG :MATCHES :DOCUMENTATION "*
* Whether to match files or folders with this pattern.
*
* Matches both if undefined."
                        :TYPE FILE-OPERATION-PATTERN-KIND :READER FILE-OPERATION-PATTERN-MATCHES)
                       (OPTIONS? :INITARG :OPTIONS :DOCUMENTATION "*
* Additional options used during matching."
                        :TYPE FILE-OPERATION-PATTERN-OPTIONS :READER
                        FILE-OPERATION-PATTERN-OPTIONS)))

(COMMON-LISP:DEFCLASS FILE-OPERATION-FILTER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SCHEME? :INITARG :SCHEME :DOCUMENTATION "*
* A Uri like `file` or `untitled`."
                        :TYPE COMMON-LISP:STRING :READER FILE-OPERATION-FILTER-SCHEME)
                       (PATTERN :INITARG :PATTERN :DOCUMENTATION "*
* The actual file operation pattern."
                        :TYPE FILE-OPERATION-PATTERN :READER FILE-OPERATION-FILTER-PATTERN)))

(COMMON-LISP:DEFCLASS CREATE-FILES-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FILES :INITARG :FILES :DOCUMENTATION "*
* An array of all files/folders created in this operation."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-CREATE) :READER
                        CREATE-FILES-PARAMS-FILES)))

(COMMON-LISP:DEFCLASS FILE-CREATE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* A file:// URI for the location of the file/folder being created."
                        :TYPE COMMON-LISP:STRING :READER FILE-CREATE-URI)))

(COMMON-LISP:DEFCLASS DELETE-FILES-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FILES :INITARG :FILES :DOCUMENTATION "*
* An array of all files/folders deleted in this operation."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-DELETE) :READER
                        DELETE-FILES-PARAMS-FILES)))

(COMMON-LISP:DEFCLASS FILE-DELETE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* A file:// URI for the location of the file/folder being deleted."
                        :TYPE COMMON-LISP:STRING :READER FILE-DELETE-URI)))

(COMMON-LISP:DEFCLASS RENAME-FILES-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((FILES :INITARG :FILES :DOCUMENTATION "*
* An array of all files/folders renamed in this operation. When a folder
* is renamed, only the folder will be included, and not its children."
                        :TYPE (LEM-LSP-UTILS/TYPE:TS-ARRAY FILE-RENAME) :READER
                        RENAME-FILES-PARAMS-FILES)))

(COMMON-LISP:DEFCLASS FILE-RENAME (LEM-LSP-UTILS/JSON:OBJECT)
                      ((OLD-URI :INITARG :OLD-URI :DOCUMENTATION "*
* A file:// URI for the original location of the file/folder being renamed."
                        :TYPE COMMON-LISP:STRING :READER FILE-RENAME-OLD-URI)
                       (NEW-URI :INITARG :NEW-URI :DOCUMENTATION "*
* A file:// URI for the new location of the file/folder being renamed."
                        :TYPE COMMON-LISP:STRING :READER FILE-RENAME-NEW-URI)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDERS-SERVER-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((SUPPORTED? :INITARG :SUPPORTED :DOCUMENTATION "*
* The server has support for workspace folders"
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        WORKSPACE-FOLDERS-SERVER-CAPABILITIES-SUPPORTED)
                       (CHANGE-NOTIFICATIONS? :INITARG :CHANGE-NOTIFICATIONS :DOCUMENTATION "*
* Whether the server wants to receive workspace folder
* change notifications.
*
* If a string is provided, the string is treated as an ID
* under which the notification is registered on the client
* side. The ID can be used to unregister for these events
* using the `client/unregisterCapability` request."
                        :TYPE (COMMON-LISP:OR COMMON-LISP:STRING LEM-LSP-UTILS/TYPE:TS-BOOLEAN)
                        :READER WORKSPACE-FOLDERS-SERVER-CAPABILITIES-CHANGE-NOTIFICATIONS)))

(COMMON-LISP:DEFCLASS WORKSPACE-FOLDER (LEM-LSP-UTILS/JSON:OBJECT)
                      ((URI :INITARG :URI :DOCUMENTATION "*
* The associated URI for this workspace folder."
                        :TYPE DOCUMENT-URI :READER WORKSPACE-FOLDER-URI)
                       (NAME :INITARG :NAME :DOCUMENTATION "*
* The name of the workspace folder. Used to refer to this
* workspace folder in the user interface."
                        :TYPE COMMON-LISP:STRING :READER WORKSPACE-FOLDER-NAME)))

(COMMON-LISP:DEFTYPE INTEGER () 'COMMON-LISP:NUMBER)

(COMMON-LISP:DEFTYPE UINTEGER () 'COMMON-LISP:NUMBER)

(COMMON-LISP:DEFTYPE DECIMAL () 'COMMON-LISP:NUMBER)

(COMMON-LISP:DEFTYPE LSP-ANY ()
  '(COMMON-LISP:OR LSP-OBJECT LSP-ARRAY COMMON-LISP:STRING INTEGER UINTEGER DECIMAL
                   LEM-LSP-UTILS/TYPE:TS-BOOLEAN
                   (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL))))

(COMMON-LISP:DEFTYPE LSP-OBJECT ()
  '(LEM-LSP-UTILS/TYPE:TS-INTERFACE
    ("key" :TYPE (LEM-LSP-UTILS/TYPE:TS-OBJECT COMMON-LISP:STRING LSP-ANY) :OPTIONAL-P
     COMMON-LISP:T)))

(COMMON-LISP:DEFTYPE LSP-ARRAY () '(LEM-LSP-UTILS/TYPE:TS-ARRAY LSP-ANY))

(COMMON-LISP:DEFCLASS MESSAGE (LEM-LSP-UTILS/JSON:OBJECT)
                      ((JSONRPC :INITARG :JSONRPC :DOCUMENTATION "" :TYPE COMMON-LISP:STRING
                        :READER MESSAGE-JSONRPC)))

(COMMON-LISP:DEFCLASS REQUEST-MESSAGE (MESSAGE)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id."
                        :TYPE (COMMON-LISP:OR INTEGER COMMON-LISP:STRING) :READER
                        REQUEST-MESSAGE-ID)
                       (METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method to be invoked."
                        :TYPE COMMON-LISP:STRING :READER REQUEST-MESSAGE-METHOD)
                       (PARAMS? :INITARG :PARAMS :DOCUMENTATION "*
* The method's params."
                        :TYPE (COMMON-LISP:OR ARRAY OBJECT) :READER REQUEST-MESSAGE-PARAMS)))

(COMMON-LISP:DEFCLASS RESPONSE-MESSAGE (MESSAGE)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id."
                        :TYPE
                        (COMMON-LISP:OR INTEGER COMMON-LISP:STRING
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-MESSAGE-ID)
                       (RESULT? :INITARG :RESULT :DOCUMENTATION "*
* The result of a request. This member is REQUIRED on success.
* This member MUST NOT exist if there was an error invoking the method."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING COMMON-LISP:NUMBER
                                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN OBJECT
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-MESSAGE-RESULT)
                       (ERROR? :INITARG :ERROR :DOCUMENTATION "*
* The error object in case a request fails."
                        :TYPE RESPONSE-ERROR :READER RESPONSE-MESSAGE-ERROR)))

(COMMON-LISP:DEFCLASS RESPONSE-ERROR (LEM-LSP-UTILS/JSON:OBJECT)
                      ((CODE :INITARG :CODE :DOCUMENTATION "*
* A number indicating the error type that occurred."
                        :TYPE INTEGER :READER RESPONSE-ERROR-CODE)
                       (MESSAGE :INITARG :MESSAGE :DOCUMENTATION "*
* A string providing a short description of the error."
                        :TYPE COMMON-LISP:STRING :READER RESPONSE-ERROR-MESSAGE)
                       (DATA? :INITARG :DATA :DOCUMENTATION "*
* A primitive or structured value that contains additional
* information about the error. Can be omitted."
                        :TYPE
                        (COMMON-LISP:OR COMMON-LISP:STRING COMMON-LISP:NUMBER
                                        LEM-LSP-UTILS/TYPE:TS-BOOLEAN ARRAY OBJECT
                                        (COMMON-LISP:OR COMMON-LISP:NULL (COMMON-LISP:EQL :NULL)))
                        :READER RESPONSE-ERROR-DATA)))

(COMMON-LISP:DEFCLASS NOTIFICATION-MESSAGE (MESSAGE)
                      ((METHOD :INITARG :METHOD :DOCUMENTATION "*
* The method to be invoked."
                        :TYPE COMMON-LISP:STRING :READER NOTIFICATION-MESSAGE-METHOD)
                       (PARAMS? :INITARG :PARAMS :DOCUMENTATION "*
* The notification's params."
                        :TYPE (COMMON-LISP:OR ARRAY OBJECT) :READER NOTIFICATION-MESSAGE-PARAMS)))

(COMMON-LISP:DEFCLASS CANCEL-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((ID :INITARG :ID :DOCUMENTATION "*
* The request id to cancel."
                        :TYPE (COMMON-LISP:OR INTEGER COMMON-LISP:STRING) :READER
                        CANCEL-PARAMS-ID)))

(COMMON-LISP:DEFTYPE PROGRESS-TOKEN () '(COMMON-LISP:OR INTEGER COMMON-LISP:STRING))

(COMMON-LISP:DEFCLASS PROGRESS-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TOKEN :INITARG :TOKEN :DOCUMENTATION "*
* The progress token provided by the client or server."
                        :TYPE PROGRESS-TOKEN :READER PROGRESS-PARAMS-TOKEN)
                       (VALUE :INITARG :VALUE :DOCUMENTATION "*
* The progress data."
                        :TYPE T :READER PROGRESS-PARAMS-VALUE)))

(COMMON-LISP:DEFCLASS HOVER-PARAMS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((TEXT-DOCUMENT :INITARG :TEXT-DOCUMENT :DOCUMENTATION "" :TYPE
                        COMMON-LISP:STRING :READER HOVER-PARAMS-TEXT-DOCUMENT)
                       (POSITION :INITARG :POSITION :DOCUMENTATION
                        "* The text document's URI in string form" :TYPE
                        (LEM-LSP-UTILS/TYPE:TS-INTERFACE
                         ("line" :TYPE UINTEGER :OPTIONAL-P COMMON-LISP:NIL)
                         ("character" :TYPE UINTEGER :OPTIONAL-P COMMON-LISP:NIL))
                        :READER HOVER-PARAMS-POSITION)))

(COMMON-LISP:DEFCLASS HOVER-RESULT (LEM-LSP-UTILS/JSON:OBJECT)
                      ((VALUE :INITARG :VALUE :DOCUMENTATION "" :TYPE COMMON-LISP:STRING :READER
                        HOVER-RESULT-VALUE)))

(COMMON-LISP:PROGN
 (COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SYNC-KIND () COMMON-LISP:T)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.NONE 0)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.FULL 1)
 (COMMON-LISP:DEFPARAMETER TEXT-DOCUMENT-SYNC-KIND.INCREMENTAL 2))

(COMMON-LISP:DEFTYPE TEXT-DOCUMENT-SYNC-KIND ()
  '(COMMON-LISP:OR (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 0)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 1)
                   (LEM-LSP-UTILS/TYPE:TS-EQUAL-SPECIALIZER 2)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((OPEN-CLOSE? :INITARG :OPEN-CLOSE :DOCUMENTATION "*
* Open and close notifications are sent to the server. If omitted open
* close notifications should not be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE)
                       (CHANGE? :INITARG :CHANGE :DOCUMENTATION "*
* Change notifications are sent to the server. See
* TextDocumentSyncKind.None, TextDocumentSyncKind.Full and
* TextDocumentSyncKind.Incremental. If omitted it defaults to
* TextDocumentSyncKind.None."
                        :TYPE TEXT-DOCUMENT-SYNC-KIND :READER TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES (LEM-LSP-UTILS/JSON:OBJECT)
                      ((DYNAMIC-REGISTRATION? :INITARG :DYNAMIC-REGISTRATION :DOCUMENTATION "*
* Whether text document synchronization supports dynamic registration."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DYNAMIC-REGISTRATION)
                       (WILL-SAVE? :INITARG :WILL-SAVE :DOCUMENTATION "*
* The client supports sending will save notifications."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE)
                       (WILL-SAVE-WAIT-UNTIL? :INITARG :WILL-SAVE-WAIT-UNTIL :DOCUMENTATION "*
* The client supports sending a will save request and
* waits for a response providing text edits which will
* be applied to the document before it is saved."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-WILL-SAVE-WAIT-UNTIL)
                       (DID-SAVE? :INITARG :DID-SAVE :DOCUMENTATION "*
* The client supports did save notifications."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-CLIENT-CAPABILITIES-DID-SAVE)))

(COMMON-LISP:DEFCLASS TEXT-DOCUMENT-SYNC-OPTIONS (LEM-LSP-UTILS/JSON:OBJECT)
                      ((OPEN-CLOSE? :INITARG :OPEN-CLOSE :DOCUMENTATION "*
* Open and close notifications are sent to the server. If omitted open
* close notification should not be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-OPEN-CLOSE)
                       (CHANGE? :INITARG :CHANGE :DOCUMENTATION "*
* Change notifications are sent to the server. See
* TextDocumentSyncKind.None, TextDocumentSyncKind.Full and
* TextDocumentSyncKind.Incremental. If omitted it defaults to
* TextDocumentSyncKind.None."
                        :TYPE TEXT-DOCUMENT-SYNC-KIND :READER TEXT-DOCUMENT-SYNC-OPTIONS-CHANGE)
                       (WILL-SAVE? :INITARG :WILL-SAVE :DOCUMENTATION "*
* If present will save notifications are sent to the server. If omitted
* the notification should not be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE)
                       (WILL-SAVE-WAIT-UNTIL? :INITARG :WILL-SAVE-WAIT-UNTIL :DOCUMENTATION "*
* If present will save wait until requests are sent to the server. If
* omitted the request should not be sent."
                        :TYPE LEM-LSP-UTILS/TYPE:TS-BOOLEAN :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-WILL-SAVE-WAIT-UNTIL)
                       (SAVE? :INITARG :SAVE :DOCUMENTATION "*
* If present save notifications are sent to the server. If omitted the
* notification should not be sent."
                        :TYPE (COMMON-LISP:OR LEM-LSP-UTILS/TYPE:TS-BOOLEAN SAVE-OPTIONS) :READER
                        TEXT-DOCUMENT-SYNC-OPTIONS-SAVE)))
